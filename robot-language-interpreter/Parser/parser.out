Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> functions
Rule 2     functions -> function functions
Rule 3     functions -> function
Rule 4     function -> func_decl NEWLINE func_body result NEWLINE
Rule 5     result -> RESULT expression
Rule 6     func_body -> statements
Rule 7     func_body -> empty
Rule 8     func_decl -> TASK VARIABLE parameters
Rule 9     func_decl -> TASK error
Rule 10    parameters -> VARIABLE parameters
Rule 11    parameters -> VARIABLE
Rule 12    parameters -> empty
Rule 13    parameters -> error
Rule 14    statements -> statement statements
Rule 15    statements -> statement
Rule 16    statement -> PLEASE statement THANKS NEWLINE
Rule 17    statement -> PLEASE statement NEWLINE
Rule 18    statement -> var_declaration NEWLINE
Rule 19    statement -> expression NEWLINE
Rule 20    statement -> for
Rule 21    statement -> switch
Rule 22    statement -> command NEWLINE
Rule 23    statement -> print NEWLINE
Rule 24    statement -> print_word NEWLINE
Rule 25    statement -> empty NEWLINE
Rule 26    print_word -> PRINT QUOTE VARIABLE QUOTE
Rule 27    print -> PRINT expression
Rule 28    statement -> statement THANKS NEWLINE
Rule 29    command -> MOVE
Rule 30    command -> ROTATE LEFT
Rule 31    command -> ROTATE RIGHT
Rule 32    expression -> GET ENVIRONMENT
Rule 33    for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
Rule 34    for -> FOR error NEWLINE
Rule 35    statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE
Rule 36    statements_group -> statement
Rule 37    statements_group -> LBRACKET RBRACKET NEWLINE
Rule 38    switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
Rule 39    switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
Rule 40    switch -> SWITCH expression NEWLINE TRUE statements_group
Rule 41    switch -> SWITCH expression NEWLINE FALSE statements_group
Rule 42    switch -> SWITCH error NEWLINE
Rule 43    expression -> expression binary_operator expression
Rule 44    binary_operator -> PLUS
Rule 45    binary_operator -> MINUS
Rule 46    binary_operator -> MULTIPLY
Rule 47    binary_operator -> DIVIDE
Rule 48    binary_operator -> AND_OPERATOR
Rule 49    expression -> unary_operator expression
Rule 50    unary_operator -> MXEQ_OPERATOR
Rule 51    unary_operator -> MXLT_OPERATOR
Rule 52    unary_operator -> MXGT_OPERATOR
Rule 53    unary_operator -> MXLTE_OPERATOR
Rule 54    unary_operator -> MXGTE_OPERATOR
Rule 55    unary_operator -> ELEQ_OPERATOR
Rule 56    unary_operator -> ELLT_OPERATOR
Rule 57    unary_operator -> ELGT_OPERATOR
Rule 58    unary_operator -> ELLTE_OPERATOR
Rule 59    unary_operator -> ELGTE_OPERATOR
Rule 60    unary_operator -> NOT_OPERATOR
Rule 61    unary_operator -> MXTRUE_OPERATOR
Rule 62    unary_operator -> MXFALSE_OPERATOR
Rule 63    unary_operator -> SIZE_OPERATOR
Rule 64    unary_operator -> LOGITIZE_OPERATOR
Rule 65    unary_operator -> DIGITIZE_OPERATOR
Rule 66    expression -> base_values
Rule 67    expression -> assignment
Rule 68    expression -> indexing
Rule 69    expression -> do
Rule 70    expression -> get
Rule 71    expression -> reduce
Rule 72    expression -> extend
Rule 73    assignment -> expression ASSIGNMENT expression
Rule 74    reduce -> REDUCE_OPERATOR expression dimensions
Rule 75    reduce -> REDUCE_OPERATOR error
Rule 76    extend -> EXTEND_OPERATOR expression dimensions
Rule 77    extend -> EXTEND_OPERATOR error
Rule 78    do -> DO VARIABLE call_parameters
Rule 79    do -> DO error
Rule 80    call_parameters -> call_parameter call_parameters
Rule 81    call_parameters -> call_parameter
Rule 82    call_parameter -> expression
Rule 83    call_parameter -> error
Rule 84    get -> GET VARIABLE
Rule 85    get -> GET error
Rule 86    expression -> LBRACKET expression RBRACKET
Rule 87    expression -> error expression RBRACKET
Rule 88    expression -> LBRACKET expression error
Rule 89    expression -> VARIABLE
Rule 90    number -> OCT_NUMBER
Rule 91    number -> DEC_NUMBER
Rule 92    number -> HEX_NUMBER
Rule 93    boolean -> TRUE
Rule 94    boolean -> FALSE
Rule 95    base_values -> number
Rule 96    base_values -> boolean
Rule 97    initializer -> base_values
Rule 98    var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
Rule 99    var_declaration -> VAR VARIABLE ASSIGNMENT expression
Rule 100   var_declaration -> VAR error
Rule 101   indexing -> expression OS_BRACKET dimensions CS_BRACKET
Rule 102   dimensions -> dimension COMMA dimensions
Rule 103   dimensions -> dimension
Rule 104   dimension -> expression
Rule 105   dimension -> error
Rule 106   empty -> <empty>

Terminals, with rules where they appear

AND_OPERATOR         : 48
ASSIGNMENT           : 73 98 99
BOUNDARY             : 33
COMMA                : 102
CS_BRACKET           : 98 101
DEC_NUMBER           : 91
DIGITIZE_OPERATOR    : 65
DIVIDE               : 47
DO                   : 78 79
ELEQ_OPERATOR        : 55
ELGTE_OPERATOR       : 59
ELGT_OPERATOR        : 57
ELLTE_OPERATOR       : 58
ELLT_OPERATOR        : 56
ENVIRONMENT          : 32
EXTEND_OPERATOR      : 76 77
FALSE                : 38 39 41 94
FOR                  : 33 34
GET                  : 32 84 85
HEX_NUMBER           : 92
LBRACKET             : 35 37 86 88
LEFT                 : 30
LOGITIZE_OPERATOR    : 64
MINUS                : 45
MOVE                 : 29
MULTIPLY             : 46
MXEQ_OPERATOR        : 50
MXFALSE_OPERATOR     : 62
MXGTE_OPERATOR       : 54
MXGT_OPERATOR        : 52
MXLTE_OPERATOR       : 53
MXLT_OPERATOR        : 51
MXTRUE_OPERATOR      : 61
NEWLINE              : 4 4 16 17 18 19 22 23 24 25 28 34 35 35 37 38 39 40 41 42
NOT_OPERATOR         : 60
OCT_NUMBER           : 90
OS_BRACKET           : 98 101
PLEASE               : 16 17
PLUS                 : 44
PRINT                : 26 27
QUOTE                : 26 26
RBRACKET             : 35 37 86 87
REDUCE_OPERATOR      : 74 75
RESULT               : 5
RIGHT                : 31
ROTATE               : 30 31
SIZE_OPERATOR        : 63
STEP                 : 33
SWITCH               : 38 39 40 41 42
TASK                 : 8 9
THANKS               : 16 28
TRUE                 : 38 39 40 93
VAR                  : 98 99 100
VARIABLE             : 8 10 11 26 33 33 33 78 84 89 98 99
error                : 9 13 34 42 75 77 79 83 85 87 88 100 105

Nonterminals, with rules where they appear

assignment           : 67
base_values          : 66 97
binary_operator      : 43
boolean              : 96
call_parameter       : 80 81
call_parameters      : 78 80
command              : 22
dimension            : 102 103
dimensions           : 74 76 98 101 102
do                   : 69
empty                : 7 12 25
expression           : 5 19 27 38 39 40 41 43 43 49 73 73 74 76 82 86 87 88 99 101 104
extend               : 72
for                  : 20
func_body            : 4
func_decl            : 4
function             : 2 3
functions            : 1 2
get                  : 70
indexing             : 68
initializer          : 98
number               : 95
parameters           : 8 10
print                : 23
print_word           : 24
program              : 0
reduce               : 71
result               : 4
statement            : 14 15 16 17 28 36
statements           : 6 14 35
statements_group     : 33 38 38 39 39 40 41
switch               : 21
unary_operator       : 49
var_declaration      : 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions
    (2) functions -> . function functions
    (3) functions -> . function
    (4) function -> . func_decl NEWLINE func_body result NEWLINE
    (8) func_decl -> . TASK VARIABLE parameters
    (9) func_decl -> . TASK error

    TASK            shift and go to state 5

    program                        shift and go to state 1
    functions                      shift and go to state 2
    function                       shift and go to state 3
    func_decl                      shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> functions .

    $end            reduce using rule 1 (program -> functions .)


state 3

    (2) functions -> function . functions
    (3) functions -> function .
    (2) functions -> . function functions
    (3) functions -> . function
    (4) function -> . func_decl NEWLINE func_body result NEWLINE
    (8) func_decl -> . TASK VARIABLE parameters
    (9) func_decl -> . TASK error

    $end            reduce using rule 3 (functions -> function .)
    TASK            shift and go to state 5

    function                       shift and go to state 3
    functions                      shift and go to state 6
    func_decl                      shift and go to state 4

state 4

    (4) function -> func_decl . NEWLINE func_body result NEWLINE

    NEWLINE         shift and go to state 7


state 5

    (8) func_decl -> TASK . VARIABLE parameters
    (9) func_decl -> TASK . error

    VARIABLE        shift and go to state 8
    error           shift and go to state 9


state 6

    (2) functions -> function functions .

    $end            reduce using rule 2 (functions -> function functions .)


state 7

    (4) function -> func_decl NEWLINE . func_body result NEWLINE
    (6) func_body -> . statements
    (7) func_body -> . empty
    (14) statements -> . statement statements
    (15) statements -> . statement
    (106) empty -> .
    (16) statement -> . PLEASE statement THANKS NEWLINE
    (17) statement -> . PLEASE statement NEWLINE
    (18) statement -> . var_declaration NEWLINE
    (19) statement -> . expression NEWLINE
    (20) statement -> . for
    (21) statement -> . switch
    (22) statement -> . command NEWLINE
    (23) statement -> . print NEWLINE
    (24) statement -> . print_word NEWLINE
    (25) statement -> . empty NEWLINE
    (28) statement -> . statement THANKS NEWLINE
    (98) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (100) var_declaration -> . VAR error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (33) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> . FOR error NEWLINE
    (38) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> . SWITCH expression NEWLINE TRUE statements_group
    (41) switch -> . SWITCH expression NEWLINE FALSE statements_group
    (42) switch -> . SWITCH error NEWLINE
    (29) command -> . MOVE
    (30) command -> . ROTATE LEFT
    (31) command -> . ROTATE RIGHT
    (27) print -> . PRINT expression
    (26) print_word -> . PRINT QUOTE VARIABLE QUOTE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    NEWLINE         reduce using rule 106 (empty -> .)
    RESULT          reduce using rule 106 (empty -> .)
    PLEASE          shift and go to state 14
    VAR             shift and go to state 22
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    FOR             shift and go to state 35
    SWITCH          shift and go to state 36
    MOVE            shift and go to state 39
    ROTATE          shift and go to state 40
    PRINT           shift and go to state 41
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    func_body                      shift and go to state 10
    statements                     shift and go to state 11
    empty                          shift and go to state 12
    statement                      shift and go to state 13
    var_declaration                shift and go to state 15
    expression                     shift and go to state 16
    for                            shift and go to state 17
    switch                         shift and go to state 18
    command                        shift and go to state 19
    print                          shift and go to state 20
    print_word                     shift and go to state 21
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 8

    (8) func_decl -> TASK VARIABLE . parameters
    (10) parameters -> . VARIABLE parameters
    (11) parameters -> . VARIABLE
    (12) parameters -> . empty
    (13) parameters -> . error
    (106) empty -> .

    VARIABLE        shift and go to state 66
    error           shift and go to state 69
    NEWLINE         reduce using rule 106 (empty -> .)

    parameters                     shift and go to state 67
    empty                          shift and go to state 68

state 9

    (9) func_decl -> TASK error .

    NEWLINE         reduce using rule 9 (func_decl -> TASK error .)


state 10

    (4) function -> func_decl NEWLINE func_body . result NEWLINE
    (5) result -> . RESULT expression

    RESULT          shift and go to state 71

    result                         shift and go to state 70

state 11

    (6) func_body -> statements .

    RESULT          reduce using rule 6 (func_body -> statements .)


state 12

    (7) func_body -> empty .
    (25) statement -> empty . NEWLINE

    RESULT          reduce using rule 7 (func_body -> empty .)
    NEWLINE         shift and go to state 72


state 13

    (14) statements -> statement . statements
    (15) statements -> statement .
    (28) statement -> statement . THANKS NEWLINE
    (14) statements -> . statement statements
    (15) statements -> . statement
    (16) statement -> . PLEASE statement THANKS NEWLINE
    (17) statement -> . PLEASE statement NEWLINE
    (18) statement -> . var_declaration NEWLINE
    (19) statement -> . expression NEWLINE
    (20) statement -> . for
    (21) statement -> . switch
    (22) statement -> . command NEWLINE
    (23) statement -> . print NEWLINE
    (24) statement -> . print_word NEWLINE
    (25) statement -> . empty NEWLINE
    (28) statement -> . statement THANKS NEWLINE
    (98) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (100) var_declaration -> . VAR error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (33) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> . FOR error NEWLINE
    (38) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> . SWITCH expression NEWLINE TRUE statements_group
    (41) switch -> . SWITCH expression NEWLINE FALSE statements_group
    (42) switch -> . SWITCH error NEWLINE
    (29) command -> . MOVE
    (30) command -> . ROTATE LEFT
    (31) command -> . ROTATE RIGHT
    (27) print -> . PRINT expression
    (26) print_word -> . PRINT QUOTE VARIABLE QUOTE
    (106) empty -> .
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    RESULT          reduce using rule 15 (statements -> statement .)
    RBRACKET        reduce using rule 15 (statements -> statement .)
    THANKS          shift and go to state 74
    PLEASE          shift and go to state 14
    VAR             shift and go to state 22
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    FOR             shift and go to state 35
    SWITCH          shift and go to state 36
    MOVE            shift and go to state 39
    ROTATE          shift and go to state 40
    PRINT           shift and go to state 41
    NEWLINE         reduce using rule 106 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    statement                      shift and go to state 13
    statements                     shift and go to state 73
    var_declaration                shift and go to state 15
    expression                     shift and go to state 16
    for                            shift and go to state 17
    switch                         shift and go to state 18
    command                        shift and go to state 19
    print                          shift and go to state 20
    print_word                     shift and go to state 21
    empty                          shift and go to state 75
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 14

    (16) statement -> PLEASE . statement THANKS NEWLINE
    (17) statement -> PLEASE . statement NEWLINE
    (16) statement -> . PLEASE statement THANKS NEWLINE
    (17) statement -> . PLEASE statement NEWLINE
    (18) statement -> . var_declaration NEWLINE
    (19) statement -> . expression NEWLINE
    (20) statement -> . for
    (21) statement -> . switch
    (22) statement -> . command NEWLINE
    (23) statement -> . print NEWLINE
    (24) statement -> . print_word NEWLINE
    (25) statement -> . empty NEWLINE
    (28) statement -> . statement THANKS NEWLINE
    (98) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (100) var_declaration -> . VAR error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (33) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> . FOR error NEWLINE
    (38) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> . SWITCH expression NEWLINE TRUE statements_group
    (41) switch -> . SWITCH expression NEWLINE FALSE statements_group
    (42) switch -> . SWITCH error NEWLINE
    (29) command -> . MOVE
    (30) command -> . ROTATE LEFT
    (31) command -> . ROTATE RIGHT
    (27) print -> . PRINT expression
    (26) print_word -> . PRINT QUOTE VARIABLE QUOTE
    (106) empty -> .
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    PLEASE          shift and go to state 14
    VAR             shift and go to state 22
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    FOR             shift and go to state 35
    SWITCH          shift and go to state 36
    MOVE            shift and go to state 39
    ROTATE          shift and go to state 40
    PRINT           shift and go to state 41
    NEWLINE         reduce using rule 106 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    statement                      shift and go to state 76
    var_declaration                shift and go to state 15
    expression                     shift and go to state 16
    for                            shift and go to state 17
    switch                         shift and go to state 18
    command                        shift and go to state 19
    print                          shift and go to state 20
    print_word                     shift and go to state 21
    empty                          shift and go to state 75
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 15

    (18) statement -> var_declaration . NEWLINE

    NEWLINE         shift and go to state 77


state 16

    (19) statement -> expression . NEWLINE
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

    NEWLINE         shift and go to state 78
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

    binary_operator                shift and go to state 79

state 17

    (20) statement -> for .

    THANKS          reduce using rule 20 (statement -> for .)
    PLEASE          reduce using rule 20 (statement -> for .)
    VAR             reduce using rule 20 (statement -> for .)
    GET             reduce using rule 20 (statement -> for .)
    LBRACKET        reduce using rule 20 (statement -> for .)
    error           reduce using rule 20 (statement -> for .)
    VARIABLE        reduce using rule 20 (statement -> for .)
    FOR             reduce using rule 20 (statement -> for .)
    SWITCH          reduce using rule 20 (statement -> for .)
    MOVE            reduce using rule 20 (statement -> for .)
    ROTATE          reduce using rule 20 (statement -> for .)
    PRINT           reduce using rule 20 (statement -> for .)
    MXEQ_OPERATOR   reduce using rule 20 (statement -> for .)
    MXLT_OPERATOR   reduce using rule 20 (statement -> for .)
    MXGT_OPERATOR   reduce using rule 20 (statement -> for .)
    MXLTE_OPERATOR  reduce using rule 20 (statement -> for .)
    MXGTE_OPERATOR  reduce using rule 20 (statement -> for .)
    ELEQ_OPERATOR   reduce using rule 20 (statement -> for .)
    ELLT_OPERATOR   reduce using rule 20 (statement -> for .)
    ELGT_OPERATOR   reduce using rule 20 (statement -> for .)
    ELLTE_OPERATOR  reduce using rule 20 (statement -> for .)
    ELGTE_OPERATOR  reduce using rule 20 (statement -> for .)
    NOT_OPERATOR    reduce using rule 20 (statement -> for .)
    MXTRUE_OPERATOR reduce using rule 20 (statement -> for .)
    MXFALSE_OPERATOR reduce using rule 20 (statement -> for .)
    SIZE_OPERATOR   reduce using rule 20 (statement -> for .)
    LOGITIZE_OPERATOR reduce using rule 20 (statement -> for .)
    DIGITIZE_OPERATOR reduce using rule 20 (statement -> for .)
    DO              reduce using rule 20 (statement -> for .)
    REDUCE_OPERATOR reduce using rule 20 (statement -> for .)
    EXTEND_OPERATOR reduce using rule 20 (statement -> for .)
    OCT_NUMBER      reduce using rule 20 (statement -> for .)
    DEC_NUMBER      reduce using rule 20 (statement -> for .)
    HEX_NUMBER      reduce using rule 20 (statement -> for .)
    TRUE            reduce using rule 20 (statement -> for .)
    FALSE           reduce using rule 20 (statement -> for .)
    NEWLINE         reduce using rule 20 (statement -> for .)
    RESULT          reduce using rule 20 (statement -> for .)
    RBRACKET        reduce using rule 20 (statement -> for .)


state 18

    (21) statement -> switch .

    THANKS          reduce using rule 21 (statement -> switch .)
    PLEASE          reduce using rule 21 (statement -> switch .)
    VAR             reduce using rule 21 (statement -> switch .)
    GET             reduce using rule 21 (statement -> switch .)
    LBRACKET        reduce using rule 21 (statement -> switch .)
    error           reduce using rule 21 (statement -> switch .)
    VARIABLE        reduce using rule 21 (statement -> switch .)
    FOR             reduce using rule 21 (statement -> switch .)
    SWITCH          reduce using rule 21 (statement -> switch .)
    MOVE            reduce using rule 21 (statement -> switch .)
    ROTATE          reduce using rule 21 (statement -> switch .)
    PRINT           reduce using rule 21 (statement -> switch .)
    MXEQ_OPERATOR   reduce using rule 21 (statement -> switch .)
    MXLT_OPERATOR   reduce using rule 21 (statement -> switch .)
    MXGT_OPERATOR   reduce using rule 21 (statement -> switch .)
    MXLTE_OPERATOR  reduce using rule 21 (statement -> switch .)
    MXGTE_OPERATOR  reduce using rule 21 (statement -> switch .)
    ELEQ_OPERATOR   reduce using rule 21 (statement -> switch .)
    ELLT_OPERATOR   reduce using rule 21 (statement -> switch .)
    ELGT_OPERATOR   reduce using rule 21 (statement -> switch .)
    ELLTE_OPERATOR  reduce using rule 21 (statement -> switch .)
    ELGTE_OPERATOR  reduce using rule 21 (statement -> switch .)
    NOT_OPERATOR    reduce using rule 21 (statement -> switch .)
    MXTRUE_OPERATOR reduce using rule 21 (statement -> switch .)
    MXFALSE_OPERATOR reduce using rule 21 (statement -> switch .)
    SIZE_OPERATOR   reduce using rule 21 (statement -> switch .)
    LOGITIZE_OPERATOR reduce using rule 21 (statement -> switch .)
    DIGITIZE_OPERATOR reduce using rule 21 (statement -> switch .)
    DO              reduce using rule 21 (statement -> switch .)
    REDUCE_OPERATOR reduce using rule 21 (statement -> switch .)
    EXTEND_OPERATOR reduce using rule 21 (statement -> switch .)
    OCT_NUMBER      reduce using rule 21 (statement -> switch .)
    DEC_NUMBER      reduce using rule 21 (statement -> switch .)
    HEX_NUMBER      reduce using rule 21 (statement -> switch .)
    TRUE            reduce using rule 21 (statement -> switch .)
    FALSE           reduce using rule 21 (statement -> switch .)
    NEWLINE         reduce using rule 21 (statement -> switch .)
    RESULT          reduce using rule 21 (statement -> switch .)
    RBRACKET        reduce using rule 21 (statement -> switch .)


state 19

    (22) statement -> command . NEWLINE

    NEWLINE         shift and go to state 87


state 20

    (23) statement -> print . NEWLINE

    NEWLINE         shift and go to state 88


state 21

    (24) statement -> print_word . NEWLINE

    NEWLINE         shift and go to state 89


state 22

    (98) var_declaration -> VAR . VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> VAR . VARIABLE ASSIGNMENT expression
    (100) var_declaration -> VAR . error

    VARIABLE        shift and go to state 90
    error           shift and go to state 91


state 23

    (89) expression -> VARIABLE .

    NEWLINE         reduce using rule 89 (expression -> VARIABLE .)
    ASSIGNMENT      reduce using rule 89 (expression -> VARIABLE .)
    OS_BRACKET      reduce using rule 89 (expression -> VARIABLE .)
    PLUS            reduce using rule 89 (expression -> VARIABLE .)
    MINUS           reduce using rule 89 (expression -> VARIABLE .)
    MULTIPLY        reduce using rule 89 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 89 (expression -> VARIABLE .)
    AND_OPERATOR    reduce using rule 89 (expression -> VARIABLE .)
    RBRACKET        reduce using rule 89 (expression -> VARIABLE .)
    error           reduce using rule 89 (expression -> VARIABLE .)
    GET             reduce using rule 89 (expression -> VARIABLE .)
    LBRACKET        reduce using rule 89 (expression -> VARIABLE .)
    VARIABLE        reduce using rule 89 (expression -> VARIABLE .)
    MXEQ_OPERATOR   reduce using rule 89 (expression -> VARIABLE .)
    MXLT_OPERATOR   reduce using rule 89 (expression -> VARIABLE .)
    MXGT_OPERATOR   reduce using rule 89 (expression -> VARIABLE .)
    MXLTE_OPERATOR  reduce using rule 89 (expression -> VARIABLE .)
    MXGTE_OPERATOR  reduce using rule 89 (expression -> VARIABLE .)
    ELEQ_OPERATOR   reduce using rule 89 (expression -> VARIABLE .)
    ELLT_OPERATOR   reduce using rule 89 (expression -> VARIABLE .)
    ELGT_OPERATOR   reduce using rule 89 (expression -> VARIABLE .)
    ELLTE_OPERATOR  reduce using rule 89 (expression -> VARIABLE .)
    ELGTE_OPERATOR  reduce using rule 89 (expression -> VARIABLE .)
    NOT_OPERATOR    reduce using rule 89 (expression -> VARIABLE .)
    MXTRUE_OPERATOR reduce using rule 89 (expression -> VARIABLE .)
    MXFALSE_OPERATOR reduce using rule 89 (expression -> VARIABLE .)
    SIZE_OPERATOR   reduce using rule 89 (expression -> VARIABLE .)
    LOGITIZE_OPERATOR reduce using rule 89 (expression -> VARIABLE .)
    DIGITIZE_OPERATOR reduce using rule 89 (expression -> VARIABLE .)
    DO              reduce using rule 89 (expression -> VARIABLE .)
    REDUCE_OPERATOR reduce using rule 89 (expression -> VARIABLE .)
    EXTEND_OPERATOR reduce using rule 89 (expression -> VARIABLE .)
    OCT_NUMBER      reduce using rule 89 (expression -> VARIABLE .)
    DEC_NUMBER      reduce using rule 89 (expression -> VARIABLE .)
    HEX_NUMBER      reduce using rule 89 (expression -> VARIABLE .)
    TRUE            reduce using rule 89 (expression -> VARIABLE .)
    FALSE           reduce using rule 89 (expression -> VARIABLE .)
    COMMA           reduce using rule 89 (expression -> VARIABLE .)
    CS_BRACKET      reduce using rule 89 (expression -> VARIABLE .)


state 24

    (87) expression -> error . expression RBRACKET
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 92
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 25

    (32) expression -> GET . ENVIRONMENT
    (84) get -> GET . VARIABLE
    (85) get -> GET . error

    ENVIRONMENT     shift and go to state 93
    VARIABLE        shift and go to state 94
    error           shift and go to state 95


state 26

    (49) expression -> unary_operator . expression
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    unary_operator                 shift and go to state 26
    expression                     shift and go to state 96
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 27

    (66) expression -> base_values .

    NEWLINE         reduce using rule 66 (expression -> base_values .)
    ASSIGNMENT      reduce using rule 66 (expression -> base_values .)
    OS_BRACKET      reduce using rule 66 (expression -> base_values .)
    PLUS            reduce using rule 66 (expression -> base_values .)
    MINUS           reduce using rule 66 (expression -> base_values .)
    MULTIPLY        reduce using rule 66 (expression -> base_values .)
    DIVIDE          reduce using rule 66 (expression -> base_values .)
    AND_OPERATOR    reduce using rule 66 (expression -> base_values .)
    RBRACKET        reduce using rule 66 (expression -> base_values .)
    error           reduce using rule 66 (expression -> base_values .)
    GET             reduce using rule 66 (expression -> base_values .)
    LBRACKET        reduce using rule 66 (expression -> base_values .)
    VARIABLE        reduce using rule 66 (expression -> base_values .)
    MXEQ_OPERATOR   reduce using rule 66 (expression -> base_values .)
    MXLT_OPERATOR   reduce using rule 66 (expression -> base_values .)
    MXGT_OPERATOR   reduce using rule 66 (expression -> base_values .)
    MXLTE_OPERATOR  reduce using rule 66 (expression -> base_values .)
    MXGTE_OPERATOR  reduce using rule 66 (expression -> base_values .)
    ELEQ_OPERATOR   reduce using rule 66 (expression -> base_values .)
    ELLT_OPERATOR   reduce using rule 66 (expression -> base_values .)
    ELGT_OPERATOR   reduce using rule 66 (expression -> base_values .)
    ELLTE_OPERATOR  reduce using rule 66 (expression -> base_values .)
    ELGTE_OPERATOR  reduce using rule 66 (expression -> base_values .)
    NOT_OPERATOR    reduce using rule 66 (expression -> base_values .)
    MXTRUE_OPERATOR reduce using rule 66 (expression -> base_values .)
    MXFALSE_OPERATOR reduce using rule 66 (expression -> base_values .)
    SIZE_OPERATOR   reduce using rule 66 (expression -> base_values .)
    LOGITIZE_OPERATOR reduce using rule 66 (expression -> base_values .)
    DIGITIZE_OPERATOR reduce using rule 66 (expression -> base_values .)
    DO              reduce using rule 66 (expression -> base_values .)
    REDUCE_OPERATOR reduce using rule 66 (expression -> base_values .)
    EXTEND_OPERATOR reduce using rule 66 (expression -> base_values .)
    OCT_NUMBER      reduce using rule 66 (expression -> base_values .)
    DEC_NUMBER      reduce using rule 66 (expression -> base_values .)
    HEX_NUMBER      reduce using rule 66 (expression -> base_values .)
    TRUE            reduce using rule 66 (expression -> base_values .)
    FALSE           reduce using rule 66 (expression -> base_values .)
    COMMA           reduce using rule 66 (expression -> base_values .)
    CS_BRACKET      reduce using rule 66 (expression -> base_values .)


state 28

    (67) expression -> assignment .

    NEWLINE         reduce using rule 67 (expression -> assignment .)
    ASSIGNMENT      reduce using rule 67 (expression -> assignment .)
    OS_BRACKET      reduce using rule 67 (expression -> assignment .)
    PLUS            reduce using rule 67 (expression -> assignment .)
    MINUS           reduce using rule 67 (expression -> assignment .)
    MULTIPLY        reduce using rule 67 (expression -> assignment .)
    DIVIDE          reduce using rule 67 (expression -> assignment .)
    AND_OPERATOR    reduce using rule 67 (expression -> assignment .)
    RBRACKET        reduce using rule 67 (expression -> assignment .)
    error           reduce using rule 67 (expression -> assignment .)
    GET             reduce using rule 67 (expression -> assignment .)
    LBRACKET        reduce using rule 67 (expression -> assignment .)
    VARIABLE        reduce using rule 67 (expression -> assignment .)
    MXEQ_OPERATOR   reduce using rule 67 (expression -> assignment .)
    MXLT_OPERATOR   reduce using rule 67 (expression -> assignment .)
    MXGT_OPERATOR   reduce using rule 67 (expression -> assignment .)
    MXLTE_OPERATOR  reduce using rule 67 (expression -> assignment .)
    MXGTE_OPERATOR  reduce using rule 67 (expression -> assignment .)
    ELEQ_OPERATOR   reduce using rule 67 (expression -> assignment .)
    ELLT_OPERATOR   reduce using rule 67 (expression -> assignment .)
    ELGT_OPERATOR   reduce using rule 67 (expression -> assignment .)
    ELLTE_OPERATOR  reduce using rule 67 (expression -> assignment .)
    ELGTE_OPERATOR  reduce using rule 67 (expression -> assignment .)
    NOT_OPERATOR    reduce using rule 67 (expression -> assignment .)
    MXTRUE_OPERATOR reduce using rule 67 (expression -> assignment .)
    MXFALSE_OPERATOR reduce using rule 67 (expression -> assignment .)
    SIZE_OPERATOR   reduce using rule 67 (expression -> assignment .)
    LOGITIZE_OPERATOR reduce using rule 67 (expression -> assignment .)
    DIGITIZE_OPERATOR reduce using rule 67 (expression -> assignment .)
    DO              reduce using rule 67 (expression -> assignment .)
    REDUCE_OPERATOR reduce using rule 67 (expression -> assignment .)
    EXTEND_OPERATOR reduce using rule 67 (expression -> assignment .)
    OCT_NUMBER      reduce using rule 67 (expression -> assignment .)
    DEC_NUMBER      reduce using rule 67 (expression -> assignment .)
    HEX_NUMBER      reduce using rule 67 (expression -> assignment .)
    TRUE            reduce using rule 67 (expression -> assignment .)
    FALSE           reduce using rule 67 (expression -> assignment .)
    COMMA           reduce using rule 67 (expression -> assignment .)
    CS_BRACKET      reduce using rule 67 (expression -> assignment .)


state 29

    (68) expression -> indexing .

    NEWLINE         reduce using rule 68 (expression -> indexing .)
    ASSIGNMENT      reduce using rule 68 (expression -> indexing .)
    OS_BRACKET      reduce using rule 68 (expression -> indexing .)
    PLUS            reduce using rule 68 (expression -> indexing .)
    MINUS           reduce using rule 68 (expression -> indexing .)
    MULTIPLY        reduce using rule 68 (expression -> indexing .)
    DIVIDE          reduce using rule 68 (expression -> indexing .)
    AND_OPERATOR    reduce using rule 68 (expression -> indexing .)
    RBRACKET        reduce using rule 68 (expression -> indexing .)
    error           reduce using rule 68 (expression -> indexing .)
    GET             reduce using rule 68 (expression -> indexing .)
    LBRACKET        reduce using rule 68 (expression -> indexing .)
    VARIABLE        reduce using rule 68 (expression -> indexing .)
    MXEQ_OPERATOR   reduce using rule 68 (expression -> indexing .)
    MXLT_OPERATOR   reduce using rule 68 (expression -> indexing .)
    MXGT_OPERATOR   reduce using rule 68 (expression -> indexing .)
    MXLTE_OPERATOR  reduce using rule 68 (expression -> indexing .)
    MXGTE_OPERATOR  reduce using rule 68 (expression -> indexing .)
    ELEQ_OPERATOR   reduce using rule 68 (expression -> indexing .)
    ELLT_OPERATOR   reduce using rule 68 (expression -> indexing .)
    ELGT_OPERATOR   reduce using rule 68 (expression -> indexing .)
    ELLTE_OPERATOR  reduce using rule 68 (expression -> indexing .)
    ELGTE_OPERATOR  reduce using rule 68 (expression -> indexing .)
    NOT_OPERATOR    reduce using rule 68 (expression -> indexing .)
    MXTRUE_OPERATOR reduce using rule 68 (expression -> indexing .)
    MXFALSE_OPERATOR reduce using rule 68 (expression -> indexing .)
    SIZE_OPERATOR   reduce using rule 68 (expression -> indexing .)
    LOGITIZE_OPERATOR reduce using rule 68 (expression -> indexing .)
    DIGITIZE_OPERATOR reduce using rule 68 (expression -> indexing .)
    DO              reduce using rule 68 (expression -> indexing .)
    REDUCE_OPERATOR reduce using rule 68 (expression -> indexing .)
    EXTEND_OPERATOR reduce using rule 68 (expression -> indexing .)
    OCT_NUMBER      reduce using rule 68 (expression -> indexing .)
    DEC_NUMBER      reduce using rule 68 (expression -> indexing .)
    HEX_NUMBER      reduce using rule 68 (expression -> indexing .)
    TRUE            reduce using rule 68 (expression -> indexing .)
    FALSE           reduce using rule 68 (expression -> indexing .)
    COMMA           reduce using rule 68 (expression -> indexing .)
    CS_BRACKET      reduce using rule 68 (expression -> indexing .)


state 30

    (69) expression -> do .

    NEWLINE         reduce using rule 69 (expression -> do .)
    ASSIGNMENT      reduce using rule 69 (expression -> do .)
    OS_BRACKET      reduce using rule 69 (expression -> do .)
    PLUS            reduce using rule 69 (expression -> do .)
    MINUS           reduce using rule 69 (expression -> do .)
    MULTIPLY        reduce using rule 69 (expression -> do .)
    DIVIDE          reduce using rule 69 (expression -> do .)
    AND_OPERATOR    reduce using rule 69 (expression -> do .)
    RBRACKET        reduce using rule 69 (expression -> do .)
    error           reduce using rule 69 (expression -> do .)
    GET             reduce using rule 69 (expression -> do .)
    LBRACKET        reduce using rule 69 (expression -> do .)
    VARIABLE        reduce using rule 69 (expression -> do .)
    MXEQ_OPERATOR   reduce using rule 69 (expression -> do .)
    MXLT_OPERATOR   reduce using rule 69 (expression -> do .)
    MXGT_OPERATOR   reduce using rule 69 (expression -> do .)
    MXLTE_OPERATOR  reduce using rule 69 (expression -> do .)
    MXGTE_OPERATOR  reduce using rule 69 (expression -> do .)
    ELEQ_OPERATOR   reduce using rule 69 (expression -> do .)
    ELLT_OPERATOR   reduce using rule 69 (expression -> do .)
    ELGT_OPERATOR   reduce using rule 69 (expression -> do .)
    ELLTE_OPERATOR  reduce using rule 69 (expression -> do .)
    ELGTE_OPERATOR  reduce using rule 69 (expression -> do .)
    NOT_OPERATOR    reduce using rule 69 (expression -> do .)
    MXTRUE_OPERATOR reduce using rule 69 (expression -> do .)
    MXFALSE_OPERATOR reduce using rule 69 (expression -> do .)
    SIZE_OPERATOR   reduce using rule 69 (expression -> do .)
    LOGITIZE_OPERATOR reduce using rule 69 (expression -> do .)
    DIGITIZE_OPERATOR reduce using rule 69 (expression -> do .)
    DO              reduce using rule 69 (expression -> do .)
    REDUCE_OPERATOR reduce using rule 69 (expression -> do .)
    EXTEND_OPERATOR reduce using rule 69 (expression -> do .)
    OCT_NUMBER      reduce using rule 69 (expression -> do .)
    DEC_NUMBER      reduce using rule 69 (expression -> do .)
    HEX_NUMBER      reduce using rule 69 (expression -> do .)
    TRUE            reduce using rule 69 (expression -> do .)
    FALSE           reduce using rule 69 (expression -> do .)
    COMMA           reduce using rule 69 (expression -> do .)
    CS_BRACKET      reduce using rule 69 (expression -> do .)


state 31

    (70) expression -> get .

    NEWLINE         reduce using rule 70 (expression -> get .)
    ASSIGNMENT      reduce using rule 70 (expression -> get .)
    OS_BRACKET      reduce using rule 70 (expression -> get .)
    PLUS            reduce using rule 70 (expression -> get .)
    MINUS           reduce using rule 70 (expression -> get .)
    MULTIPLY        reduce using rule 70 (expression -> get .)
    DIVIDE          reduce using rule 70 (expression -> get .)
    AND_OPERATOR    reduce using rule 70 (expression -> get .)
    RBRACKET        reduce using rule 70 (expression -> get .)
    error           reduce using rule 70 (expression -> get .)
    GET             reduce using rule 70 (expression -> get .)
    LBRACKET        reduce using rule 70 (expression -> get .)
    VARIABLE        reduce using rule 70 (expression -> get .)
    MXEQ_OPERATOR   reduce using rule 70 (expression -> get .)
    MXLT_OPERATOR   reduce using rule 70 (expression -> get .)
    MXGT_OPERATOR   reduce using rule 70 (expression -> get .)
    MXLTE_OPERATOR  reduce using rule 70 (expression -> get .)
    MXGTE_OPERATOR  reduce using rule 70 (expression -> get .)
    ELEQ_OPERATOR   reduce using rule 70 (expression -> get .)
    ELLT_OPERATOR   reduce using rule 70 (expression -> get .)
    ELGT_OPERATOR   reduce using rule 70 (expression -> get .)
    ELLTE_OPERATOR  reduce using rule 70 (expression -> get .)
    ELGTE_OPERATOR  reduce using rule 70 (expression -> get .)
    NOT_OPERATOR    reduce using rule 70 (expression -> get .)
    MXTRUE_OPERATOR reduce using rule 70 (expression -> get .)
    MXFALSE_OPERATOR reduce using rule 70 (expression -> get .)
    SIZE_OPERATOR   reduce using rule 70 (expression -> get .)
    LOGITIZE_OPERATOR reduce using rule 70 (expression -> get .)
    DIGITIZE_OPERATOR reduce using rule 70 (expression -> get .)
    DO              reduce using rule 70 (expression -> get .)
    REDUCE_OPERATOR reduce using rule 70 (expression -> get .)
    EXTEND_OPERATOR reduce using rule 70 (expression -> get .)
    OCT_NUMBER      reduce using rule 70 (expression -> get .)
    DEC_NUMBER      reduce using rule 70 (expression -> get .)
    HEX_NUMBER      reduce using rule 70 (expression -> get .)
    TRUE            reduce using rule 70 (expression -> get .)
    FALSE           reduce using rule 70 (expression -> get .)
    COMMA           reduce using rule 70 (expression -> get .)
    CS_BRACKET      reduce using rule 70 (expression -> get .)


state 32

    (71) expression -> reduce .

    NEWLINE         reduce using rule 71 (expression -> reduce .)
    ASSIGNMENT      reduce using rule 71 (expression -> reduce .)
    OS_BRACKET      reduce using rule 71 (expression -> reduce .)
    PLUS            reduce using rule 71 (expression -> reduce .)
    MINUS           reduce using rule 71 (expression -> reduce .)
    MULTIPLY        reduce using rule 71 (expression -> reduce .)
    DIVIDE          reduce using rule 71 (expression -> reduce .)
    AND_OPERATOR    reduce using rule 71 (expression -> reduce .)
    RBRACKET        reduce using rule 71 (expression -> reduce .)
    error           reduce using rule 71 (expression -> reduce .)
    GET             reduce using rule 71 (expression -> reduce .)
    LBRACKET        reduce using rule 71 (expression -> reduce .)
    VARIABLE        reduce using rule 71 (expression -> reduce .)
    MXEQ_OPERATOR   reduce using rule 71 (expression -> reduce .)
    MXLT_OPERATOR   reduce using rule 71 (expression -> reduce .)
    MXGT_OPERATOR   reduce using rule 71 (expression -> reduce .)
    MXLTE_OPERATOR  reduce using rule 71 (expression -> reduce .)
    MXGTE_OPERATOR  reduce using rule 71 (expression -> reduce .)
    ELEQ_OPERATOR   reduce using rule 71 (expression -> reduce .)
    ELLT_OPERATOR   reduce using rule 71 (expression -> reduce .)
    ELGT_OPERATOR   reduce using rule 71 (expression -> reduce .)
    ELLTE_OPERATOR  reduce using rule 71 (expression -> reduce .)
    ELGTE_OPERATOR  reduce using rule 71 (expression -> reduce .)
    NOT_OPERATOR    reduce using rule 71 (expression -> reduce .)
    MXTRUE_OPERATOR reduce using rule 71 (expression -> reduce .)
    MXFALSE_OPERATOR reduce using rule 71 (expression -> reduce .)
    SIZE_OPERATOR   reduce using rule 71 (expression -> reduce .)
    LOGITIZE_OPERATOR reduce using rule 71 (expression -> reduce .)
    DIGITIZE_OPERATOR reduce using rule 71 (expression -> reduce .)
    DO              reduce using rule 71 (expression -> reduce .)
    REDUCE_OPERATOR reduce using rule 71 (expression -> reduce .)
    EXTEND_OPERATOR reduce using rule 71 (expression -> reduce .)
    OCT_NUMBER      reduce using rule 71 (expression -> reduce .)
    DEC_NUMBER      reduce using rule 71 (expression -> reduce .)
    HEX_NUMBER      reduce using rule 71 (expression -> reduce .)
    TRUE            reduce using rule 71 (expression -> reduce .)
    FALSE           reduce using rule 71 (expression -> reduce .)
    COMMA           reduce using rule 71 (expression -> reduce .)
    CS_BRACKET      reduce using rule 71 (expression -> reduce .)


state 33

    (72) expression -> extend .

    NEWLINE         reduce using rule 72 (expression -> extend .)
    ASSIGNMENT      reduce using rule 72 (expression -> extend .)
    OS_BRACKET      reduce using rule 72 (expression -> extend .)
    PLUS            reduce using rule 72 (expression -> extend .)
    MINUS           reduce using rule 72 (expression -> extend .)
    MULTIPLY        reduce using rule 72 (expression -> extend .)
    DIVIDE          reduce using rule 72 (expression -> extend .)
    AND_OPERATOR    reduce using rule 72 (expression -> extend .)
    RBRACKET        reduce using rule 72 (expression -> extend .)
    error           reduce using rule 72 (expression -> extend .)
    GET             reduce using rule 72 (expression -> extend .)
    LBRACKET        reduce using rule 72 (expression -> extend .)
    VARIABLE        reduce using rule 72 (expression -> extend .)
    MXEQ_OPERATOR   reduce using rule 72 (expression -> extend .)
    MXLT_OPERATOR   reduce using rule 72 (expression -> extend .)
    MXGT_OPERATOR   reduce using rule 72 (expression -> extend .)
    MXLTE_OPERATOR  reduce using rule 72 (expression -> extend .)
    MXGTE_OPERATOR  reduce using rule 72 (expression -> extend .)
    ELEQ_OPERATOR   reduce using rule 72 (expression -> extend .)
    ELLT_OPERATOR   reduce using rule 72 (expression -> extend .)
    ELGT_OPERATOR   reduce using rule 72 (expression -> extend .)
    ELLTE_OPERATOR  reduce using rule 72 (expression -> extend .)
    ELGTE_OPERATOR  reduce using rule 72 (expression -> extend .)
    NOT_OPERATOR    reduce using rule 72 (expression -> extend .)
    MXTRUE_OPERATOR reduce using rule 72 (expression -> extend .)
    MXFALSE_OPERATOR reduce using rule 72 (expression -> extend .)
    SIZE_OPERATOR   reduce using rule 72 (expression -> extend .)
    LOGITIZE_OPERATOR reduce using rule 72 (expression -> extend .)
    DIGITIZE_OPERATOR reduce using rule 72 (expression -> extend .)
    DO              reduce using rule 72 (expression -> extend .)
    REDUCE_OPERATOR reduce using rule 72 (expression -> extend .)
    EXTEND_OPERATOR reduce using rule 72 (expression -> extend .)
    OCT_NUMBER      reduce using rule 72 (expression -> extend .)
    DEC_NUMBER      reduce using rule 72 (expression -> extend .)
    HEX_NUMBER      reduce using rule 72 (expression -> extend .)
    TRUE            reduce using rule 72 (expression -> extend .)
    FALSE           reduce using rule 72 (expression -> extend .)
    COMMA           reduce using rule 72 (expression -> extend .)
    CS_BRACKET      reduce using rule 72 (expression -> extend .)


state 34

    (86) expression -> LBRACKET . expression RBRACKET
    (88) expression -> LBRACKET . expression error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 97
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 35

    (33) for -> FOR . VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> FOR . error NEWLINE

    VARIABLE        shift and go to state 98
    error           shift and go to state 99


state 36

    (38) switch -> SWITCH . expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> SWITCH . expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> SWITCH . expression NEWLINE TRUE statements_group
    (41) switch -> SWITCH . expression NEWLINE FALSE statements_group
    (42) switch -> SWITCH . error NEWLINE
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    error           shift and go to state 101
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 100
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 37

    (93) boolean -> TRUE .

    NEWLINE         reduce using rule 93 (boolean -> TRUE .)
    ASSIGNMENT      reduce using rule 93 (boolean -> TRUE .)
    OS_BRACKET      reduce using rule 93 (boolean -> TRUE .)
    PLUS            reduce using rule 93 (boolean -> TRUE .)
    MINUS           reduce using rule 93 (boolean -> TRUE .)
    MULTIPLY        reduce using rule 93 (boolean -> TRUE .)
    DIVIDE          reduce using rule 93 (boolean -> TRUE .)
    AND_OPERATOR    reduce using rule 93 (boolean -> TRUE .)
    RBRACKET        reduce using rule 93 (boolean -> TRUE .)
    error           reduce using rule 93 (boolean -> TRUE .)
    GET             reduce using rule 93 (boolean -> TRUE .)
    LBRACKET        reduce using rule 93 (boolean -> TRUE .)
    VARIABLE        reduce using rule 93 (boolean -> TRUE .)
    MXEQ_OPERATOR   reduce using rule 93 (boolean -> TRUE .)
    MXLT_OPERATOR   reduce using rule 93 (boolean -> TRUE .)
    MXGT_OPERATOR   reduce using rule 93 (boolean -> TRUE .)
    MXLTE_OPERATOR  reduce using rule 93 (boolean -> TRUE .)
    MXGTE_OPERATOR  reduce using rule 93 (boolean -> TRUE .)
    ELEQ_OPERATOR   reduce using rule 93 (boolean -> TRUE .)
    ELLT_OPERATOR   reduce using rule 93 (boolean -> TRUE .)
    ELGT_OPERATOR   reduce using rule 93 (boolean -> TRUE .)
    ELLTE_OPERATOR  reduce using rule 93 (boolean -> TRUE .)
    ELGTE_OPERATOR  reduce using rule 93 (boolean -> TRUE .)
    NOT_OPERATOR    reduce using rule 93 (boolean -> TRUE .)
    MXTRUE_OPERATOR reduce using rule 93 (boolean -> TRUE .)
    MXFALSE_OPERATOR reduce using rule 93 (boolean -> TRUE .)
    SIZE_OPERATOR   reduce using rule 93 (boolean -> TRUE .)
    LOGITIZE_OPERATOR reduce using rule 93 (boolean -> TRUE .)
    DIGITIZE_OPERATOR reduce using rule 93 (boolean -> TRUE .)
    DO              reduce using rule 93 (boolean -> TRUE .)
    REDUCE_OPERATOR reduce using rule 93 (boolean -> TRUE .)
    EXTEND_OPERATOR reduce using rule 93 (boolean -> TRUE .)
    OCT_NUMBER      reduce using rule 93 (boolean -> TRUE .)
    DEC_NUMBER      reduce using rule 93 (boolean -> TRUE .)
    HEX_NUMBER      reduce using rule 93 (boolean -> TRUE .)
    TRUE            reduce using rule 93 (boolean -> TRUE .)
    FALSE           reduce using rule 93 (boolean -> TRUE .)
    COMMA           reduce using rule 93 (boolean -> TRUE .)
    CS_BRACKET      reduce using rule 93 (boolean -> TRUE .)


state 38

    (94) boolean -> FALSE .

    NEWLINE         reduce using rule 94 (boolean -> FALSE .)
    ASSIGNMENT      reduce using rule 94 (boolean -> FALSE .)
    OS_BRACKET      reduce using rule 94 (boolean -> FALSE .)
    PLUS            reduce using rule 94 (boolean -> FALSE .)
    MINUS           reduce using rule 94 (boolean -> FALSE .)
    MULTIPLY        reduce using rule 94 (boolean -> FALSE .)
    DIVIDE          reduce using rule 94 (boolean -> FALSE .)
    AND_OPERATOR    reduce using rule 94 (boolean -> FALSE .)
    RBRACKET        reduce using rule 94 (boolean -> FALSE .)
    error           reduce using rule 94 (boolean -> FALSE .)
    GET             reduce using rule 94 (boolean -> FALSE .)
    LBRACKET        reduce using rule 94 (boolean -> FALSE .)
    VARIABLE        reduce using rule 94 (boolean -> FALSE .)
    MXEQ_OPERATOR   reduce using rule 94 (boolean -> FALSE .)
    MXLT_OPERATOR   reduce using rule 94 (boolean -> FALSE .)
    MXGT_OPERATOR   reduce using rule 94 (boolean -> FALSE .)
    MXLTE_OPERATOR  reduce using rule 94 (boolean -> FALSE .)
    MXGTE_OPERATOR  reduce using rule 94 (boolean -> FALSE .)
    ELEQ_OPERATOR   reduce using rule 94 (boolean -> FALSE .)
    ELLT_OPERATOR   reduce using rule 94 (boolean -> FALSE .)
    ELGT_OPERATOR   reduce using rule 94 (boolean -> FALSE .)
    ELLTE_OPERATOR  reduce using rule 94 (boolean -> FALSE .)
    ELGTE_OPERATOR  reduce using rule 94 (boolean -> FALSE .)
    NOT_OPERATOR    reduce using rule 94 (boolean -> FALSE .)
    MXTRUE_OPERATOR reduce using rule 94 (boolean -> FALSE .)
    MXFALSE_OPERATOR reduce using rule 94 (boolean -> FALSE .)
    SIZE_OPERATOR   reduce using rule 94 (boolean -> FALSE .)
    LOGITIZE_OPERATOR reduce using rule 94 (boolean -> FALSE .)
    DIGITIZE_OPERATOR reduce using rule 94 (boolean -> FALSE .)
    DO              reduce using rule 94 (boolean -> FALSE .)
    REDUCE_OPERATOR reduce using rule 94 (boolean -> FALSE .)
    EXTEND_OPERATOR reduce using rule 94 (boolean -> FALSE .)
    OCT_NUMBER      reduce using rule 94 (boolean -> FALSE .)
    DEC_NUMBER      reduce using rule 94 (boolean -> FALSE .)
    HEX_NUMBER      reduce using rule 94 (boolean -> FALSE .)
    TRUE            reduce using rule 94 (boolean -> FALSE .)
    FALSE           reduce using rule 94 (boolean -> FALSE .)
    COMMA           reduce using rule 94 (boolean -> FALSE .)
    CS_BRACKET      reduce using rule 94 (boolean -> FALSE .)


state 39

    (29) command -> MOVE .

    NEWLINE         reduce using rule 29 (command -> MOVE .)


state 40

    (30) command -> ROTATE . LEFT
    (31) command -> ROTATE . RIGHT

    LEFT            shift and go to state 102
    RIGHT           shift and go to state 103


state 41

    (27) print -> PRINT . expression
    (26) print_word -> PRINT . QUOTE VARIABLE QUOTE
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    QUOTE           shift and go to state 105
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 104
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 42

    (50) unary_operator -> MXEQ_OPERATOR .

    GET             reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    LBRACKET        reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    error           reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    VARIABLE        reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    NOT_OPERATOR    reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    DO              reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    OCT_NUMBER      reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    DEC_NUMBER      reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    HEX_NUMBER      reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    TRUE            reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)
    FALSE           reduce using rule 50 (unary_operator -> MXEQ_OPERATOR .)


state 43

    (51) unary_operator -> MXLT_OPERATOR .

    GET             reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    LBRACKET        reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    error           reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    VARIABLE        reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    DO              reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    OCT_NUMBER      reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    DEC_NUMBER      reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    HEX_NUMBER      reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    TRUE            reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)
    FALSE           reduce using rule 51 (unary_operator -> MXLT_OPERATOR .)


state 44

    (52) unary_operator -> MXGT_OPERATOR .

    GET             reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    LBRACKET        reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    error           reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    VARIABLE        reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    DO              reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    OCT_NUMBER      reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    DEC_NUMBER      reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    HEX_NUMBER      reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    TRUE            reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)
    FALSE           reduce using rule 52 (unary_operator -> MXGT_OPERATOR .)


state 45

    (53) unary_operator -> MXLTE_OPERATOR .

    GET             reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    LBRACKET        reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    error           reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    VARIABLE        reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    DO              reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    OCT_NUMBER      reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    DEC_NUMBER      reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    HEX_NUMBER      reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    TRUE            reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)
    FALSE           reduce using rule 53 (unary_operator -> MXLTE_OPERATOR .)


state 46

    (54) unary_operator -> MXGTE_OPERATOR .

    GET             reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    LBRACKET        reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    error           reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    VARIABLE        reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    DO              reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    OCT_NUMBER      reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    DEC_NUMBER      reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    HEX_NUMBER      reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    TRUE            reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)
    FALSE           reduce using rule 54 (unary_operator -> MXGTE_OPERATOR .)


state 47

    (55) unary_operator -> ELEQ_OPERATOR .

    GET             reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    LBRACKET        reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    error           reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    VARIABLE        reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    NOT_OPERATOR    reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    DO              reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    OCT_NUMBER      reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    DEC_NUMBER      reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    HEX_NUMBER      reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    TRUE            reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)
    FALSE           reduce using rule 55 (unary_operator -> ELEQ_OPERATOR .)


state 48

    (56) unary_operator -> ELLT_OPERATOR .

    GET             reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    LBRACKET        reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    error           reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    VARIABLE        reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    DO              reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    OCT_NUMBER      reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    DEC_NUMBER      reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    HEX_NUMBER      reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    TRUE            reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)
    FALSE           reduce using rule 56 (unary_operator -> ELLT_OPERATOR .)


state 49

    (57) unary_operator -> ELGT_OPERATOR .

    GET             reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    LBRACKET        reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    error           reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    VARIABLE        reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    DO              reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    OCT_NUMBER      reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    DEC_NUMBER      reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    HEX_NUMBER      reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    TRUE            reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)
    FALSE           reduce using rule 57 (unary_operator -> ELGT_OPERATOR .)


state 50

    (58) unary_operator -> ELLTE_OPERATOR .

    GET             reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    LBRACKET        reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    error           reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    VARIABLE        reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    DO              reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    OCT_NUMBER      reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    DEC_NUMBER      reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    HEX_NUMBER      reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    TRUE            reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)
    FALSE           reduce using rule 58 (unary_operator -> ELLTE_OPERATOR .)


state 51

    (59) unary_operator -> ELGTE_OPERATOR .

    GET             reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    LBRACKET        reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    error           reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    VARIABLE        reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    DO              reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    OCT_NUMBER      reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    DEC_NUMBER      reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    HEX_NUMBER      reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    TRUE            reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)
    FALSE           reduce using rule 59 (unary_operator -> ELGTE_OPERATOR .)


state 52

    (60) unary_operator -> NOT_OPERATOR .

    GET             reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    LBRACKET        reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    error           reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    VARIABLE        reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    DO              reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    OCT_NUMBER      reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    DEC_NUMBER      reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    HEX_NUMBER      reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    TRUE            reduce using rule 60 (unary_operator -> NOT_OPERATOR .)
    FALSE           reduce using rule 60 (unary_operator -> NOT_OPERATOR .)


state 53

    (61) unary_operator -> MXTRUE_OPERATOR .

    GET             reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    LBRACKET        reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    error           reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    VARIABLE        reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    DO              reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    OCT_NUMBER      reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    DEC_NUMBER      reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    HEX_NUMBER      reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    TRUE            reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)
    FALSE           reduce using rule 61 (unary_operator -> MXTRUE_OPERATOR .)


state 54

    (62) unary_operator -> MXFALSE_OPERATOR .

    GET             reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    LBRACKET        reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    error           reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    VARIABLE        reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    DO              reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    OCT_NUMBER      reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    DEC_NUMBER      reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    HEX_NUMBER      reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    TRUE            reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)
    FALSE           reduce using rule 62 (unary_operator -> MXFALSE_OPERATOR .)


state 55

    (63) unary_operator -> SIZE_OPERATOR .

    GET             reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    LBRACKET        reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    error           reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    VARIABLE        reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    DO              reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    OCT_NUMBER      reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    DEC_NUMBER      reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    HEX_NUMBER      reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    TRUE            reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)
    FALSE           reduce using rule 63 (unary_operator -> SIZE_OPERATOR .)


state 56

    (64) unary_operator -> LOGITIZE_OPERATOR .

    GET             reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    LBRACKET        reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    error           reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    VARIABLE        reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    DO              reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    OCT_NUMBER      reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    DEC_NUMBER      reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    HEX_NUMBER      reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    TRUE            reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)
    FALSE           reduce using rule 64 (unary_operator -> LOGITIZE_OPERATOR .)


state 57

    (65) unary_operator -> DIGITIZE_OPERATOR .

    GET             reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    LBRACKET        reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    error           reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    VARIABLE        reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    DO              reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    OCT_NUMBER      reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    DEC_NUMBER      reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    HEX_NUMBER      reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    TRUE            reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)
    FALSE           reduce using rule 65 (unary_operator -> DIGITIZE_OPERATOR .)


state 58

    (95) base_values -> number .

    NEWLINE         reduce using rule 95 (base_values -> number .)
    ASSIGNMENT      reduce using rule 95 (base_values -> number .)
    OS_BRACKET      reduce using rule 95 (base_values -> number .)
    PLUS            reduce using rule 95 (base_values -> number .)
    MINUS           reduce using rule 95 (base_values -> number .)
    MULTIPLY        reduce using rule 95 (base_values -> number .)
    DIVIDE          reduce using rule 95 (base_values -> number .)
    AND_OPERATOR    reduce using rule 95 (base_values -> number .)
    RBRACKET        reduce using rule 95 (base_values -> number .)
    error           reduce using rule 95 (base_values -> number .)
    GET             reduce using rule 95 (base_values -> number .)
    LBRACKET        reduce using rule 95 (base_values -> number .)
    VARIABLE        reduce using rule 95 (base_values -> number .)
    MXEQ_OPERATOR   reduce using rule 95 (base_values -> number .)
    MXLT_OPERATOR   reduce using rule 95 (base_values -> number .)
    MXGT_OPERATOR   reduce using rule 95 (base_values -> number .)
    MXLTE_OPERATOR  reduce using rule 95 (base_values -> number .)
    MXGTE_OPERATOR  reduce using rule 95 (base_values -> number .)
    ELEQ_OPERATOR   reduce using rule 95 (base_values -> number .)
    ELLT_OPERATOR   reduce using rule 95 (base_values -> number .)
    ELGT_OPERATOR   reduce using rule 95 (base_values -> number .)
    ELLTE_OPERATOR  reduce using rule 95 (base_values -> number .)
    ELGTE_OPERATOR  reduce using rule 95 (base_values -> number .)
    NOT_OPERATOR    reduce using rule 95 (base_values -> number .)
    MXTRUE_OPERATOR reduce using rule 95 (base_values -> number .)
    MXFALSE_OPERATOR reduce using rule 95 (base_values -> number .)
    SIZE_OPERATOR   reduce using rule 95 (base_values -> number .)
    LOGITIZE_OPERATOR reduce using rule 95 (base_values -> number .)
    DIGITIZE_OPERATOR reduce using rule 95 (base_values -> number .)
    DO              reduce using rule 95 (base_values -> number .)
    REDUCE_OPERATOR reduce using rule 95 (base_values -> number .)
    EXTEND_OPERATOR reduce using rule 95 (base_values -> number .)
    OCT_NUMBER      reduce using rule 95 (base_values -> number .)
    DEC_NUMBER      reduce using rule 95 (base_values -> number .)
    HEX_NUMBER      reduce using rule 95 (base_values -> number .)
    TRUE            reduce using rule 95 (base_values -> number .)
    FALSE           reduce using rule 95 (base_values -> number .)
    COMMA           reduce using rule 95 (base_values -> number .)
    CS_BRACKET      reduce using rule 95 (base_values -> number .)


state 59

    (96) base_values -> boolean .

    NEWLINE         reduce using rule 96 (base_values -> boolean .)
    ASSIGNMENT      reduce using rule 96 (base_values -> boolean .)
    OS_BRACKET      reduce using rule 96 (base_values -> boolean .)
    PLUS            reduce using rule 96 (base_values -> boolean .)
    MINUS           reduce using rule 96 (base_values -> boolean .)
    MULTIPLY        reduce using rule 96 (base_values -> boolean .)
    DIVIDE          reduce using rule 96 (base_values -> boolean .)
    AND_OPERATOR    reduce using rule 96 (base_values -> boolean .)
    RBRACKET        reduce using rule 96 (base_values -> boolean .)
    error           reduce using rule 96 (base_values -> boolean .)
    GET             reduce using rule 96 (base_values -> boolean .)
    LBRACKET        reduce using rule 96 (base_values -> boolean .)
    VARIABLE        reduce using rule 96 (base_values -> boolean .)
    MXEQ_OPERATOR   reduce using rule 96 (base_values -> boolean .)
    MXLT_OPERATOR   reduce using rule 96 (base_values -> boolean .)
    MXGT_OPERATOR   reduce using rule 96 (base_values -> boolean .)
    MXLTE_OPERATOR  reduce using rule 96 (base_values -> boolean .)
    MXGTE_OPERATOR  reduce using rule 96 (base_values -> boolean .)
    ELEQ_OPERATOR   reduce using rule 96 (base_values -> boolean .)
    ELLT_OPERATOR   reduce using rule 96 (base_values -> boolean .)
    ELGT_OPERATOR   reduce using rule 96 (base_values -> boolean .)
    ELLTE_OPERATOR  reduce using rule 96 (base_values -> boolean .)
    ELGTE_OPERATOR  reduce using rule 96 (base_values -> boolean .)
    NOT_OPERATOR    reduce using rule 96 (base_values -> boolean .)
    MXTRUE_OPERATOR reduce using rule 96 (base_values -> boolean .)
    MXFALSE_OPERATOR reduce using rule 96 (base_values -> boolean .)
    SIZE_OPERATOR   reduce using rule 96 (base_values -> boolean .)
    LOGITIZE_OPERATOR reduce using rule 96 (base_values -> boolean .)
    DIGITIZE_OPERATOR reduce using rule 96 (base_values -> boolean .)
    DO              reduce using rule 96 (base_values -> boolean .)
    REDUCE_OPERATOR reduce using rule 96 (base_values -> boolean .)
    EXTEND_OPERATOR reduce using rule 96 (base_values -> boolean .)
    OCT_NUMBER      reduce using rule 96 (base_values -> boolean .)
    DEC_NUMBER      reduce using rule 96 (base_values -> boolean .)
    HEX_NUMBER      reduce using rule 96 (base_values -> boolean .)
    TRUE            reduce using rule 96 (base_values -> boolean .)
    FALSE           reduce using rule 96 (base_values -> boolean .)
    COMMA           reduce using rule 96 (base_values -> boolean .)
    CS_BRACKET      reduce using rule 96 (base_values -> boolean .)


state 60

    (78) do -> DO . VARIABLE call_parameters
    (79) do -> DO . error

    VARIABLE        shift and go to state 106
    error           shift and go to state 107


state 61

    (74) reduce -> REDUCE_OPERATOR . expression dimensions
    (75) reduce -> REDUCE_OPERATOR . error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    error           shift and go to state 109
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 108
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 62

    (76) extend -> EXTEND_OPERATOR . expression dimensions
    (77) extend -> EXTEND_OPERATOR . error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    error           shift and go to state 111
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 110
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 63

    (90) number -> OCT_NUMBER .

    NEWLINE         reduce using rule 90 (number -> OCT_NUMBER .)
    ASSIGNMENT      reduce using rule 90 (number -> OCT_NUMBER .)
    OS_BRACKET      reduce using rule 90 (number -> OCT_NUMBER .)
    PLUS            reduce using rule 90 (number -> OCT_NUMBER .)
    MINUS           reduce using rule 90 (number -> OCT_NUMBER .)
    MULTIPLY        reduce using rule 90 (number -> OCT_NUMBER .)
    DIVIDE          reduce using rule 90 (number -> OCT_NUMBER .)
    AND_OPERATOR    reduce using rule 90 (number -> OCT_NUMBER .)
    RBRACKET        reduce using rule 90 (number -> OCT_NUMBER .)
    error           reduce using rule 90 (number -> OCT_NUMBER .)
    GET             reduce using rule 90 (number -> OCT_NUMBER .)
    LBRACKET        reduce using rule 90 (number -> OCT_NUMBER .)
    VARIABLE        reduce using rule 90 (number -> OCT_NUMBER .)
    MXEQ_OPERATOR   reduce using rule 90 (number -> OCT_NUMBER .)
    MXLT_OPERATOR   reduce using rule 90 (number -> OCT_NUMBER .)
    MXGT_OPERATOR   reduce using rule 90 (number -> OCT_NUMBER .)
    MXLTE_OPERATOR  reduce using rule 90 (number -> OCT_NUMBER .)
    MXGTE_OPERATOR  reduce using rule 90 (number -> OCT_NUMBER .)
    ELEQ_OPERATOR   reduce using rule 90 (number -> OCT_NUMBER .)
    ELLT_OPERATOR   reduce using rule 90 (number -> OCT_NUMBER .)
    ELGT_OPERATOR   reduce using rule 90 (number -> OCT_NUMBER .)
    ELLTE_OPERATOR  reduce using rule 90 (number -> OCT_NUMBER .)
    ELGTE_OPERATOR  reduce using rule 90 (number -> OCT_NUMBER .)
    NOT_OPERATOR    reduce using rule 90 (number -> OCT_NUMBER .)
    MXTRUE_OPERATOR reduce using rule 90 (number -> OCT_NUMBER .)
    MXFALSE_OPERATOR reduce using rule 90 (number -> OCT_NUMBER .)
    SIZE_OPERATOR   reduce using rule 90 (number -> OCT_NUMBER .)
    LOGITIZE_OPERATOR reduce using rule 90 (number -> OCT_NUMBER .)
    DIGITIZE_OPERATOR reduce using rule 90 (number -> OCT_NUMBER .)
    DO              reduce using rule 90 (number -> OCT_NUMBER .)
    REDUCE_OPERATOR reduce using rule 90 (number -> OCT_NUMBER .)
    EXTEND_OPERATOR reduce using rule 90 (number -> OCT_NUMBER .)
    OCT_NUMBER      reduce using rule 90 (number -> OCT_NUMBER .)
    DEC_NUMBER      reduce using rule 90 (number -> OCT_NUMBER .)
    HEX_NUMBER      reduce using rule 90 (number -> OCT_NUMBER .)
    TRUE            reduce using rule 90 (number -> OCT_NUMBER .)
    FALSE           reduce using rule 90 (number -> OCT_NUMBER .)
    COMMA           reduce using rule 90 (number -> OCT_NUMBER .)
    CS_BRACKET      reduce using rule 90 (number -> OCT_NUMBER .)


state 64

    (91) number -> DEC_NUMBER .

    NEWLINE         reduce using rule 91 (number -> DEC_NUMBER .)
    ASSIGNMENT      reduce using rule 91 (number -> DEC_NUMBER .)
    OS_BRACKET      reduce using rule 91 (number -> DEC_NUMBER .)
    PLUS            reduce using rule 91 (number -> DEC_NUMBER .)
    MINUS           reduce using rule 91 (number -> DEC_NUMBER .)
    MULTIPLY        reduce using rule 91 (number -> DEC_NUMBER .)
    DIVIDE          reduce using rule 91 (number -> DEC_NUMBER .)
    AND_OPERATOR    reduce using rule 91 (number -> DEC_NUMBER .)
    RBRACKET        reduce using rule 91 (number -> DEC_NUMBER .)
    error           reduce using rule 91 (number -> DEC_NUMBER .)
    GET             reduce using rule 91 (number -> DEC_NUMBER .)
    LBRACKET        reduce using rule 91 (number -> DEC_NUMBER .)
    VARIABLE        reduce using rule 91 (number -> DEC_NUMBER .)
    MXEQ_OPERATOR   reduce using rule 91 (number -> DEC_NUMBER .)
    MXLT_OPERATOR   reduce using rule 91 (number -> DEC_NUMBER .)
    MXGT_OPERATOR   reduce using rule 91 (number -> DEC_NUMBER .)
    MXLTE_OPERATOR  reduce using rule 91 (number -> DEC_NUMBER .)
    MXGTE_OPERATOR  reduce using rule 91 (number -> DEC_NUMBER .)
    ELEQ_OPERATOR   reduce using rule 91 (number -> DEC_NUMBER .)
    ELLT_OPERATOR   reduce using rule 91 (number -> DEC_NUMBER .)
    ELGT_OPERATOR   reduce using rule 91 (number -> DEC_NUMBER .)
    ELLTE_OPERATOR  reduce using rule 91 (number -> DEC_NUMBER .)
    ELGTE_OPERATOR  reduce using rule 91 (number -> DEC_NUMBER .)
    NOT_OPERATOR    reduce using rule 91 (number -> DEC_NUMBER .)
    MXTRUE_OPERATOR reduce using rule 91 (number -> DEC_NUMBER .)
    MXFALSE_OPERATOR reduce using rule 91 (number -> DEC_NUMBER .)
    SIZE_OPERATOR   reduce using rule 91 (number -> DEC_NUMBER .)
    LOGITIZE_OPERATOR reduce using rule 91 (number -> DEC_NUMBER .)
    DIGITIZE_OPERATOR reduce using rule 91 (number -> DEC_NUMBER .)
    DO              reduce using rule 91 (number -> DEC_NUMBER .)
    REDUCE_OPERATOR reduce using rule 91 (number -> DEC_NUMBER .)
    EXTEND_OPERATOR reduce using rule 91 (number -> DEC_NUMBER .)
    OCT_NUMBER      reduce using rule 91 (number -> DEC_NUMBER .)
    DEC_NUMBER      reduce using rule 91 (number -> DEC_NUMBER .)
    HEX_NUMBER      reduce using rule 91 (number -> DEC_NUMBER .)
    TRUE            reduce using rule 91 (number -> DEC_NUMBER .)
    FALSE           reduce using rule 91 (number -> DEC_NUMBER .)
    COMMA           reduce using rule 91 (number -> DEC_NUMBER .)
    CS_BRACKET      reduce using rule 91 (number -> DEC_NUMBER .)


state 65

    (92) number -> HEX_NUMBER .

    NEWLINE         reduce using rule 92 (number -> HEX_NUMBER .)
    ASSIGNMENT      reduce using rule 92 (number -> HEX_NUMBER .)
    OS_BRACKET      reduce using rule 92 (number -> HEX_NUMBER .)
    PLUS            reduce using rule 92 (number -> HEX_NUMBER .)
    MINUS           reduce using rule 92 (number -> HEX_NUMBER .)
    MULTIPLY        reduce using rule 92 (number -> HEX_NUMBER .)
    DIVIDE          reduce using rule 92 (number -> HEX_NUMBER .)
    AND_OPERATOR    reduce using rule 92 (number -> HEX_NUMBER .)
    RBRACKET        reduce using rule 92 (number -> HEX_NUMBER .)
    error           reduce using rule 92 (number -> HEX_NUMBER .)
    GET             reduce using rule 92 (number -> HEX_NUMBER .)
    LBRACKET        reduce using rule 92 (number -> HEX_NUMBER .)
    VARIABLE        reduce using rule 92 (number -> HEX_NUMBER .)
    MXEQ_OPERATOR   reduce using rule 92 (number -> HEX_NUMBER .)
    MXLT_OPERATOR   reduce using rule 92 (number -> HEX_NUMBER .)
    MXGT_OPERATOR   reduce using rule 92 (number -> HEX_NUMBER .)
    MXLTE_OPERATOR  reduce using rule 92 (number -> HEX_NUMBER .)
    MXGTE_OPERATOR  reduce using rule 92 (number -> HEX_NUMBER .)
    ELEQ_OPERATOR   reduce using rule 92 (number -> HEX_NUMBER .)
    ELLT_OPERATOR   reduce using rule 92 (number -> HEX_NUMBER .)
    ELGT_OPERATOR   reduce using rule 92 (number -> HEX_NUMBER .)
    ELLTE_OPERATOR  reduce using rule 92 (number -> HEX_NUMBER .)
    ELGTE_OPERATOR  reduce using rule 92 (number -> HEX_NUMBER .)
    NOT_OPERATOR    reduce using rule 92 (number -> HEX_NUMBER .)
    MXTRUE_OPERATOR reduce using rule 92 (number -> HEX_NUMBER .)
    MXFALSE_OPERATOR reduce using rule 92 (number -> HEX_NUMBER .)
    SIZE_OPERATOR   reduce using rule 92 (number -> HEX_NUMBER .)
    LOGITIZE_OPERATOR reduce using rule 92 (number -> HEX_NUMBER .)
    DIGITIZE_OPERATOR reduce using rule 92 (number -> HEX_NUMBER .)
    DO              reduce using rule 92 (number -> HEX_NUMBER .)
    REDUCE_OPERATOR reduce using rule 92 (number -> HEX_NUMBER .)
    EXTEND_OPERATOR reduce using rule 92 (number -> HEX_NUMBER .)
    OCT_NUMBER      reduce using rule 92 (number -> HEX_NUMBER .)
    DEC_NUMBER      reduce using rule 92 (number -> HEX_NUMBER .)
    HEX_NUMBER      reduce using rule 92 (number -> HEX_NUMBER .)
    TRUE            reduce using rule 92 (number -> HEX_NUMBER .)
    FALSE           reduce using rule 92 (number -> HEX_NUMBER .)
    COMMA           reduce using rule 92 (number -> HEX_NUMBER .)
    CS_BRACKET      reduce using rule 92 (number -> HEX_NUMBER .)


state 66

    (10) parameters -> VARIABLE . parameters
    (11) parameters -> VARIABLE .
    (10) parameters -> . VARIABLE parameters
    (11) parameters -> . VARIABLE
    (12) parameters -> . empty
    (13) parameters -> . error
    (106) empty -> .

  ! reduce/reduce conflict for NEWLINE resolved using rule 11 (parameters -> VARIABLE .)
    NEWLINE         reduce using rule 11 (parameters -> VARIABLE .)
    VARIABLE        shift and go to state 66
    error           shift and go to state 69

  ! NEWLINE         [ reduce using rule 106 (empty -> .) ]

    parameters                     shift and go to state 112
    empty                          shift and go to state 68

state 67

    (8) func_decl -> TASK VARIABLE parameters .

    NEWLINE         reduce using rule 8 (func_decl -> TASK VARIABLE parameters .)


state 68

    (12) parameters -> empty .

    NEWLINE         reduce using rule 12 (parameters -> empty .)


state 69

    (13) parameters -> error .

    NEWLINE         reduce using rule 13 (parameters -> error .)


state 70

    (4) function -> func_decl NEWLINE func_body result . NEWLINE

    NEWLINE         shift and go to state 113


state 71

    (5) result -> RESULT . expression
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 114
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 72

    (25) statement -> empty NEWLINE .

    THANKS          reduce using rule 25 (statement -> empty NEWLINE .)
    PLEASE          reduce using rule 25 (statement -> empty NEWLINE .)
    VAR             reduce using rule 25 (statement -> empty NEWLINE .)
    GET             reduce using rule 25 (statement -> empty NEWLINE .)
    LBRACKET        reduce using rule 25 (statement -> empty NEWLINE .)
    error           reduce using rule 25 (statement -> empty NEWLINE .)
    VARIABLE        reduce using rule 25 (statement -> empty NEWLINE .)
    FOR             reduce using rule 25 (statement -> empty NEWLINE .)
    SWITCH          reduce using rule 25 (statement -> empty NEWLINE .)
    MOVE            reduce using rule 25 (statement -> empty NEWLINE .)
    ROTATE          reduce using rule 25 (statement -> empty NEWLINE .)
    PRINT           reduce using rule 25 (statement -> empty NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 25 (statement -> empty NEWLINE .)
    MXLT_OPERATOR   reduce using rule 25 (statement -> empty NEWLINE .)
    MXGT_OPERATOR   reduce using rule 25 (statement -> empty NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 25 (statement -> empty NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 25 (statement -> empty NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 25 (statement -> empty NEWLINE .)
    ELLT_OPERATOR   reduce using rule 25 (statement -> empty NEWLINE .)
    ELGT_OPERATOR   reduce using rule 25 (statement -> empty NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 25 (statement -> empty NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 25 (statement -> empty NEWLINE .)
    NOT_OPERATOR    reduce using rule 25 (statement -> empty NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 25 (statement -> empty NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 25 (statement -> empty NEWLINE .)
    SIZE_OPERATOR   reduce using rule 25 (statement -> empty NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 25 (statement -> empty NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 25 (statement -> empty NEWLINE .)
    DO              reduce using rule 25 (statement -> empty NEWLINE .)
    REDUCE_OPERATOR reduce using rule 25 (statement -> empty NEWLINE .)
    EXTEND_OPERATOR reduce using rule 25 (statement -> empty NEWLINE .)
    OCT_NUMBER      reduce using rule 25 (statement -> empty NEWLINE .)
    DEC_NUMBER      reduce using rule 25 (statement -> empty NEWLINE .)
    HEX_NUMBER      reduce using rule 25 (statement -> empty NEWLINE .)
    TRUE            reduce using rule 25 (statement -> empty NEWLINE .)
    FALSE           reduce using rule 25 (statement -> empty NEWLINE .)
    NEWLINE         reduce using rule 25 (statement -> empty NEWLINE .)
    RESULT          reduce using rule 25 (statement -> empty NEWLINE .)
    RBRACKET        reduce using rule 25 (statement -> empty NEWLINE .)


state 73

    (14) statements -> statement statements .

    RESULT          reduce using rule 14 (statements -> statement statements .)
    RBRACKET        reduce using rule 14 (statements -> statement statements .)


state 74

    (28) statement -> statement THANKS . NEWLINE

    NEWLINE         shift and go to state 115


state 75

    (25) statement -> empty . NEWLINE

    NEWLINE         shift and go to state 72


state 76

    (16) statement -> PLEASE statement . THANKS NEWLINE
    (17) statement -> PLEASE statement . NEWLINE
    (28) statement -> statement . THANKS NEWLINE

    THANKS          shift and go to state 116
    NEWLINE         shift and go to state 117


state 77

    (18) statement -> var_declaration NEWLINE .

    THANKS          reduce using rule 18 (statement -> var_declaration NEWLINE .)
    PLEASE          reduce using rule 18 (statement -> var_declaration NEWLINE .)
    VAR             reduce using rule 18 (statement -> var_declaration NEWLINE .)
    GET             reduce using rule 18 (statement -> var_declaration NEWLINE .)
    LBRACKET        reduce using rule 18 (statement -> var_declaration NEWLINE .)
    error           reduce using rule 18 (statement -> var_declaration NEWLINE .)
    VARIABLE        reduce using rule 18 (statement -> var_declaration NEWLINE .)
    FOR             reduce using rule 18 (statement -> var_declaration NEWLINE .)
    SWITCH          reduce using rule 18 (statement -> var_declaration NEWLINE .)
    MOVE            reduce using rule 18 (statement -> var_declaration NEWLINE .)
    ROTATE          reduce using rule 18 (statement -> var_declaration NEWLINE .)
    PRINT           reduce using rule 18 (statement -> var_declaration NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 18 (statement -> var_declaration NEWLINE .)
    MXLT_OPERATOR   reduce using rule 18 (statement -> var_declaration NEWLINE .)
    MXGT_OPERATOR   reduce using rule 18 (statement -> var_declaration NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 18 (statement -> var_declaration NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 18 (statement -> var_declaration NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 18 (statement -> var_declaration NEWLINE .)
    ELLT_OPERATOR   reduce using rule 18 (statement -> var_declaration NEWLINE .)
    ELGT_OPERATOR   reduce using rule 18 (statement -> var_declaration NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 18 (statement -> var_declaration NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 18 (statement -> var_declaration NEWLINE .)
    NOT_OPERATOR    reduce using rule 18 (statement -> var_declaration NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 18 (statement -> var_declaration NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 18 (statement -> var_declaration NEWLINE .)
    SIZE_OPERATOR   reduce using rule 18 (statement -> var_declaration NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 18 (statement -> var_declaration NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 18 (statement -> var_declaration NEWLINE .)
    DO              reduce using rule 18 (statement -> var_declaration NEWLINE .)
    REDUCE_OPERATOR reduce using rule 18 (statement -> var_declaration NEWLINE .)
    EXTEND_OPERATOR reduce using rule 18 (statement -> var_declaration NEWLINE .)
    OCT_NUMBER      reduce using rule 18 (statement -> var_declaration NEWLINE .)
    DEC_NUMBER      reduce using rule 18 (statement -> var_declaration NEWLINE .)
    HEX_NUMBER      reduce using rule 18 (statement -> var_declaration NEWLINE .)
    TRUE            reduce using rule 18 (statement -> var_declaration NEWLINE .)
    FALSE           reduce using rule 18 (statement -> var_declaration NEWLINE .)
    NEWLINE         reduce using rule 18 (statement -> var_declaration NEWLINE .)
    RESULT          reduce using rule 18 (statement -> var_declaration NEWLINE .)
    RBRACKET        reduce using rule 18 (statement -> var_declaration NEWLINE .)


state 78

    (19) statement -> expression NEWLINE .

    THANKS          reduce using rule 19 (statement -> expression NEWLINE .)
    PLEASE          reduce using rule 19 (statement -> expression NEWLINE .)
    VAR             reduce using rule 19 (statement -> expression NEWLINE .)
    GET             reduce using rule 19 (statement -> expression NEWLINE .)
    LBRACKET        reduce using rule 19 (statement -> expression NEWLINE .)
    error           reduce using rule 19 (statement -> expression NEWLINE .)
    VARIABLE        reduce using rule 19 (statement -> expression NEWLINE .)
    FOR             reduce using rule 19 (statement -> expression NEWLINE .)
    SWITCH          reduce using rule 19 (statement -> expression NEWLINE .)
    MOVE            reduce using rule 19 (statement -> expression NEWLINE .)
    ROTATE          reduce using rule 19 (statement -> expression NEWLINE .)
    PRINT           reduce using rule 19 (statement -> expression NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 19 (statement -> expression NEWLINE .)
    MXLT_OPERATOR   reduce using rule 19 (statement -> expression NEWLINE .)
    MXGT_OPERATOR   reduce using rule 19 (statement -> expression NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 19 (statement -> expression NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 19 (statement -> expression NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 19 (statement -> expression NEWLINE .)
    ELLT_OPERATOR   reduce using rule 19 (statement -> expression NEWLINE .)
    ELGT_OPERATOR   reduce using rule 19 (statement -> expression NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 19 (statement -> expression NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 19 (statement -> expression NEWLINE .)
    NOT_OPERATOR    reduce using rule 19 (statement -> expression NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 19 (statement -> expression NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 19 (statement -> expression NEWLINE .)
    SIZE_OPERATOR   reduce using rule 19 (statement -> expression NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 19 (statement -> expression NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 19 (statement -> expression NEWLINE .)
    DO              reduce using rule 19 (statement -> expression NEWLINE .)
    REDUCE_OPERATOR reduce using rule 19 (statement -> expression NEWLINE .)
    EXTEND_OPERATOR reduce using rule 19 (statement -> expression NEWLINE .)
    OCT_NUMBER      reduce using rule 19 (statement -> expression NEWLINE .)
    DEC_NUMBER      reduce using rule 19 (statement -> expression NEWLINE .)
    HEX_NUMBER      reduce using rule 19 (statement -> expression NEWLINE .)
    TRUE            reduce using rule 19 (statement -> expression NEWLINE .)
    FALSE           reduce using rule 19 (statement -> expression NEWLINE .)
    NEWLINE         reduce using rule 19 (statement -> expression NEWLINE .)
    RESULT          reduce using rule 19 (statement -> expression NEWLINE .)
    RBRACKET        reduce using rule 19 (statement -> expression NEWLINE .)


state 79

    (43) expression -> expression binary_operator . expression
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 118
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 80

    (73) assignment -> expression ASSIGNMENT . expression
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 119
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 81

    (101) indexing -> expression OS_BRACKET . dimensions CS_BRACKET
    (102) dimensions -> . dimension COMMA dimensions
    (103) dimensions -> . dimension
    (104) dimension -> . expression
    (105) dimension -> . error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    error           shift and go to state 123
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 120
    dimensions                     shift and go to state 121
    dimension                      shift and go to state 122
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 82

    (44) binary_operator -> PLUS .

    GET             reduce using rule 44 (binary_operator -> PLUS .)
    LBRACKET        reduce using rule 44 (binary_operator -> PLUS .)
    error           reduce using rule 44 (binary_operator -> PLUS .)
    VARIABLE        reduce using rule 44 (binary_operator -> PLUS .)
    MXEQ_OPERATOR   reduce using rule 44 (binary_operator -> PLUS .)
    MXLT_OPERATOR   reduce using rule 44 (binary_operator -> PLUS .)
    MXGT_OPERATOR   reduce using rule 44 (binary_operator -> PLUS .)
    MXLTE_OPERATOR  reduce using rule 44 (binary_operator -> PLUS .)
    MXGTE_OPERATOR  reduce using rule 44 (binary_operator -> PLUS .)
    ELEQ_OPERATOR   reduce using rule 44 (binary_operator -> PLUS .)
    ELLT_OPERATOR   reduce using rule 44 (binary_operator -> PLUS .)
    ELGT_OPERATOR   reduce using rule 44 (binary_operator -> PLUS .)
    ELLTE_OPERATOR  reduce using rule 44 (binary_operator -> PLUS .)
    ELGTE_OPERATOR  reduce using rule 44 (binary_operator -> PLUS .)
    NOT_OPERATOR    reduce using rule 44 (binary_operator -> PLUS .)
    MXTRUE_OPERATOR reduce using rule 44 (binary_operator -> PLUS .)
    MXFALSE_OPERATOR reduce using rule 44 (binary_operator -> PLUS .)
    SIZE_OPERATOR   reduce using rule 44 (binary_operator -> PLUS .)
    LOGITIZE_OPERATOR reduce using rule 44 (binary_operator -> PLUS .)
    DIGITIZE_OPERATOR reduce using rule 44 (binary_operator -> PLUS .)
    DO              reduce using rule 44 (binary_operator -> PLUS .)
    REDUCE_OPERATOR reduce using rule 44 (binary_operator -> PLUS .)
    EXTEND_OPERATOR reduce using rule 44 (binary_operator -> PLUS .)
    OCT_NUMBER      reduce using rule 44 (binary_operator -> PLUS .)
    DEC_NUMBER      reduce using rule 44 (binary_operator -> PLUS .)
    HEX_NUMBER      reduce using rule 44 (binary_operator -> PLUS .)
    TRUE            reduce using rule 44 (binary_operator -> PLUS .)
    FALSE           reduce using rule 44 (binary_operator -> PLUS .)


state 83

    (45) binary_operator -> MINUS .

    GET             reduce using rule 45 (binary_operator -> MINUS .)
    LBRACKET        reduce using rule 45 (binary_operator -> MINUS .)
    error           reduce using rule 45 (binary_operator -> MINUS .)
    VARIABLE        reduce using rule 45 (binary_operator -> MINUS .)
    MXEQ_OPERATOR   reduce using rule 45 (binary_operator -> MINUS .)
    MXLT_OPERATOR   reduce using rule 45 (binary_operator -> MINUS .)
    MXGT_OPERATOR   reduce using rule 45 (binary_operator -> MINUS .)
    MXLTE_OPERATOR  reduce using rule 45 (binary_operator -> MINUS .)
    MXGTE_OPERATOR  reduce using rule 45 (binary_operator -> MINUS .)
    ELEQ_OPERATOR   reduce using rule 45 (binary_operator -> MINUS .)
    ELLT_OPERATOR   reduce using rule 45 (binary_operator -> MINUS .)
    ELGT_OPERATOR   reduce using rule 45 (binary_operator -> MINUS .)
    ELLTE_OPERATOR  reduce using rule 45 (binary_operator -> MINUS .)
    ELGTE_OPERATOR  reduce using rule 45 (binary_operator -> MINUS .)
    NOT_OPERATOR    reduce using rule 45 (binary_operator -> MINUS .)
    MXTRUE_OPERATOR reduce using rule 45 (binary_operator -> MINUS .)
    MXFALSE_OPERATOR reduce using rule 45 (binary_operator -> MINUS .)
    SIZE_OPERATOR   reduce using rule 45 (binary_operator -> MINUS .)
    LOGITIZE_OPERATOR reduce using rule 45 (binary_operator -> MINUS .)
    DIGITIZE_OPERATOR reduce using rule 45 (binary_operator -> MINUS .)
    DO              reduce using rule 45 (binary_operator -> MINUS .)
    REDUCE_OPERATOR reduce using rule 45 (binary_operator -> MINUS .)
    EXTEND_OPERATOR reduce using rule 45 (binary_operator -> MINUS .)
    OCT_NUMBER      reduce using rule 45 (binary_operator -> MINUS .)
    DEC_NUMBER      reduce using rule 45 (binary_operator -> MINUS .)
    HEX_NUMBER      reduce using rule 45 (binary_operator -> MINUS .)
    TRUE            reduce using rule 45 (binary_operator -> MINUS .)
    FALSE           reduce using rule 45 (binary_operator -> MINUS .)


state 84

    (46) binary_operator -> MULTIPLY .

    GET             reduce using rule 46 (binary_operator -> MULTIPLY .)
    LBRACKET        reduce using rule 46 (binary_operator -> MULTIPLY .)
    error           reduce using rule 46 (binary_operator -> MULTIPLY .)
    VARIABLE        reduce using rule 46 (binary_operator -> MULTIPLY .)
    MXEQ_OPERATOR   reduce using rule 46 (binary_operator -> MULTIPLY .)
    MXLT_OPERATOR   reduce using rule 46 (binary_operator -> MULTIPLY .)
    MXGT_OPERATOR   reduce using rule 46 (binary_operator -> MULTIPLY .)
    MXLTE_OPERATOR  reduce using rule 46 (binary_operator -> MULTIPLY .)
    MXGTE_OPERATOR  reduce using rule 46 (binary_operator -> MULTIPLY .)
    ELEQ_OPERATOR   reduce using rule 46 (binary_operator -> MULTIPLY .)
    ELLT_OPERATOR   reduce using rule 46 (binary_operator -> MULTIPLY .)
    ELGT_OPERATOR   reduce using rule 46 (binary_operator -> MULTIPLY .)
    ELLTE_OPERATOR  reduce using rule 46 (binary_operator -> MULTIPLY .)
    ELGTE_OPERATOR  reduce using rule 46 (binary_operator -> MULTIPLY .)
    NOT_OPERATOR    reduce using rule 46 (binary_operator -> MULTIPLY .)
    MXTRUE_OPERATOR reduce using rule 46 (binary_operator -> MULTIPLY .)
    MXFALSE_OPERATOR reduce using rule 46 (binary_operator -> MULTIPLY .)
    SIZE_OPERATOR   reduce using rule 46 (binary_operator -> MULTIPLY .)
    LOGITIZE_OPERATOR reduce using rule 46 (binary_operator -> MULTIPLY .)
    DIGITIZE_OPERATOR reduce using rule 46 (binary_operator -> MULTIPLY .)
    DO              reduce using rule 46 (binary_operator -> MULTIPLY .)
    REDUCE_OPERATOR reduce using rule 46 (binary_operator -> MULTIPLY .)
    EXTEND_OPERATOR reduce using rule 46 (binary_operator -> MULTIPLY .)
    OCT_NUMBER      reduce using rule 46 (binary_operator -> MULTIPLY .)
    DEC_NUMBER      reduce using rule 46 (binary_operator -> MULTIPLY .)
    HEX_NUMBER      reduce using rule 46 (binary_operator -> MULTIPLY .)
    TRUE            reduce using rule 46 (binary_operator -> MULTIPLY .)
    FALSE           reduce using rule 46 (binary_operator -> MULTIPLY .)


state 85

    (47) binary_operator -> DIVIDE .

    GET             reduce using rule 47 (binary_operator -> DIVIDE .)
    LBRACKET        reduce using rule 47 (binary_operator -> DIVIDE .)
    error           reduce using rule 47 (binary_operator -> DIVIDE .)
    VARIABLE        reduce using rule 47 (binary_operator -> DIVIDE .)
    MXEQ_OPERATOR   reduce using rule 47 (binary_operator -> DIVIDE .)
    MXLT_OPERATOR   reduce using rule 47 (binary_operator -> DIVIDE .)
    MXGT_OPERATOR   reduce using rule 47 (binary_operator -> DIVIDE .)
    MXLTE_OPERATOR  reduce using rule 47 (binary_operator -> DIVIDE .)
    MXGTE_OPERATOR  reduce using rule 47 (binary_operator -> DIVIDE .)
    ELEQ_OPERATOR   reduce using rule 47 (binary_operator -> DIVIDE .)
    ELLT_OPERATOR   reduce using rule 47 (binary_operator -> DIVIDE .)
    ELGT_OPERATOR   reduce using rule 47 (binary_operator -> DIVIDE .)
    ELLTE_OPERATOR  reduce using rule 47 (binary_operator -> DIVIDE .)
    ELGTE_OPERATOR  reduce using rule 47 (binary_operator -> DIVIDE .)
    NOT_OPERATOR    reduce using rule 47 (binary_operator -> DIVIDE .)
    MXTRUE_OPERATOR reduce using rule 47 (binary_operator -> DIVIDE .)
    MXFALSE_OPERATOR reduce using rule 47 (binary_operator -> DIVIDE .)
    SIZE_OPERATOR   reduce using rule 47 (binary_operator -> DIVIDE .)
    LOGITIZE_OPERATOR reduce using rule 47 (binary_operator -> DIVIDE .)
    DIGITIZE_OPERATOR reduce using rule 47 (binary_operator -> DIVIDE .)
    DO              reduce using rule 47 (binary_operator -> DIVIDE .)
    REDUCE_OPERATOR reduce using rule 47 (binary_operator -> DIVIDE .)
    EXTEND_OPERATOR reduce using rule 47 (binary_operator -> DIVIDE .)
    OCT_NUMBER      reduce using rule 47 (binary_operator -> DIVIDE .)
    DEC_NUMBER      reduce using rule 47 (binary_operator -> DIVIDE .)
    HEX_NUMBER      reduce using rule 47 (binary_operator -> DIVIDE .)
    TRUE            reduce using rule 47 (binary_operator -> DIVIDE .)
    FALSE           reduce using rule 47 (binary_operator -> DIVIDE .)


state 86

    (48) binary_operator -> AND_OPERATOR .

    GET             reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    LBRACKET        reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    error           reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    VARIABLE        reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    NOT_OPERATOR    reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    DO              reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    OCT_NUMBER      reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    DEC_NUMBER      reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    HEX_NUMBER      reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    TRUE            reduce using rule 48 (binary_operator -> AND_OPERATOR .)
    FALSE           reduce using rule 48 (binary_operator -> AND_OPERATOR .)


state 87

    (22) statement -> command NEWLINE .

    THANKS          reduce using rule 22 (statement -> command NEWLINE .)
    PLEASE          reduce using rule 22 (statement -> command NEWLINE .)
    VAR             reduce using rule 22 (statement -> command NEWLINE .)
    GET             reduce using rule 22 (statement -> command NEWLINE .)
    LBRACKET        reduce using rule 22 (statement -> command NEWLINE .)
    error           reduce using rule 22 (statement -> command NEWLINE .)
    VARIABLE        reduce using rule 22 (statement -> command NEWLINE .)
    FOR             reduce using rule 22 (statement -> command NEWLINE .)
    SWITCH          reduce using rule 22 (statement -> command NEWLINE .)
    MOVE            reduce using rule 22 (statement -> command NEWLINE .)
    ROTATE          reduce using rule 22 (statement -> command NEWLINE .)
    PRINT           reduce using rule 22 (statement -> command NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 22 (statement -> command NEWLINE .)
    MXLT_OPERATOR   reduce using rule 22 (statement -> command NEWLINE .)
    MXGT_OPERATOR   reduce using rule 22 (statement -> command NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 22 (statement -> command NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 22 (statement -> command NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 22 (statement -> command NEWLINE .)
    ELLT_OPERATOR   reduce using rule 22 (statement -> command NEWLINE .)
    ELGT_OPERATOR   reduce using rule 22 (statement -> command NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 22 (statement -> command NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 22 (statement -> command NEWLINE .)
    NOT_OPERATOR    reduce using rule 22 (statement -> command NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 22 (statement -> command NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 22 (statement -> command NEWLINE .)
    SIZE_OPERATOR   reduce using rule 22 (statement -> command NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 22 (statement -> command NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 22 (statement -> command NEWLINE .)
    DO              reduce using rule 22 (statement -> command NEWLINE .)
    REDUCE_OPERATOR reduce using rule 22 (statement -> command NEWLINE .)
    EXTEND_OPERATOR reduce using rule 22 (statement -> command NEWLINE .)
    OCT_NUMBER      reduce using rule 22 (statement -> command NEWLINE .)
    DEC_NUMBER      reduce using rule 22 (statement -> command NEWLINE .)
    HEX_NUMBER      reduce using rule 22 (statement -> command NEWLINE .)
    TRUE            reduce using rule 22 (statement -> command NEWLINE .)
    FALSE           reduce using rule 22 (statement -> command NEWLINE .)
    NEWLINE         reduce using rule 22 (statement -> command NEWLINE .)
    RESULT          reduce using rule 22 (statement -> command NEWLINE .)
    RBRACKET        reduce using rule 22 (statement -> command NEWLINE .)


state 88

    (23) statement -> print NEWLINE .

    THANKS          reduce using rule 23 (statement -> print NEWLINE .)
    PLEASE          reduce using rule 23 (statement -> print NEWLINE .)
    VAR             reduce using rule 23 (statement -> print NEWLINE .)
    GET             reduce using rule 23 (statement -> print NEWLINE .)
    LBRACKET        reduce using rule 23 (statement -> print NEWLINE .)
    error           reduce using rule 23 (statement -> print NEWLINE .)
    VARIABLE        reduce using rule 23 (statement -> print NEWLINE .)
    FOR             reduce using rule 23 (statement -> print NEWLINE .)
    SWITCH          reduce using rule 23 (statement -> print NEWLINE .)
    MOVE            reduce using rule 23 (statement -> print NEWLINE .)
    ROTATE          reduce using rule 23 (statement -> print NEWLINE .)
    PRINT           reduce using rule 23 (statement -> print NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 23 (statement -> print NEWLINE .)
    MXLT_OPERATOR   reduce using rule 23 (statement -> print NEWLINE .)
    MXGT_OPERATOR   reduce using rule 23 (statement -> print NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 23 (statement -> print NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 23 (statement -> print NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 23 (statement -> print NEWLINE .)
    ELLT_OPERATOR   reduce using rule 23 (statement -> print NEWLINE .)
    ELGT_OPERATOR   reduce using rule 23 (statement -> print NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 23 (statement -> print NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 23 (statement -> print NEWLINE .)
    NOT_OPERATOR    reduce using rule 23 (statement -> print NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 23 (statement -> print NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 23 (statement -> print NEWLINE .)
    SIZE_OPERATOR   reduce using rule 23 (statement -> print NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 23 (statement -> print NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 23 (statement -> print NEWLINE .)
    DO              reduce using rule 23 (statement -> print NEWLINE .)
    REDUCE_OPERATOR reduce using rule 23 (statement -> print NEWLINE .)
    EXTEND_OPERATOR reduce using rule 23 (statement -> print NEWLINE .)
    OCT_NUMBER      reduce using rule 23 (statement -> print NEWLINE .)
    DEC_NUMBER      reduce using rule 23 (statement -> print NEWLINE .)
    HEX_NUMBER      reduce using rule 23 (statement -> print NEWLINE .)
    TRUE            reduce using rule 23 (statement -> print NEWLINE .)
    FALSE           reduce using rule 23 (statement -> print NEWLINE .)
    NEWLINE         reduce using rule 23 (statement -> print NEWLINE .)
    RESULT          reduce using rule 23 (statement -> print NEWLINE .)
    RBRACKET        reduce using rule 23 (statement -> print NEWLINE .)


state 89

    (24) statement -> print_word NEWLINE .

    THANKS          reduce using rule 24 (statement -> print_word NEWLINE .)
    PLEASE          reduce using rule 24 (statement -> print_word NEWLINE .)
    VAR             reduce using rule 24 (statement -> print_word NEWLINE .)
    GET             reduce using rule 24 (statement -> print_word NEWLINE .)
    LBRACKET        reduce using rule 24 (statement -> print_word NEWLINE .)
    error           reduce using rule 24 (statement -> print_word NEWLINE .)
    VARIABLE        reduce using rule 24 (statement -> print_word NEWLINE .)
    FOR             reduce using rule 24 (statement -> print_word NEWLINE .)
    SWITCH          reduce using rule 24 (statement -> print_word NEWLINE .)
    MOVE            reduce using rule 24 (statement -> print_word NEWLINE .)
    ROTATE          reduce using rule 24 (statement -> print_word NEWLINE .)
    PRINT           reduce using rule 24 (statement -> print_word NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 24 (statement -> print_word NEWLINE .)
    MXLT_OPERATOR   reduce using rule 24 (statement -> print_word NEWLINE .)
    MXGT_OPERATOR   reduce using rule 24 (statement -> print_word NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 24 (statement -> print_word NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 24 (statement -> print_word NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 24 (statement -> print_word NEWLINE .)
    ELLT_OPERATOR   reduce using rule 24 (statement -> print_word NEWLINE .)
    ELGT_OPERATOR   reduce using rule 24 (statement -> print_word NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 24 (statement -> print_word NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 24 (statement -> print_word NEWLINE .)
    NOT_OPERATOR    reduce using rule 24 (statement -> print_word NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 24 (statement -> print_word NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 24 (statement -> print_word NEWLINE .)
    SIZE_OPERATOR   reduce using rule 24 (statement -> print_word NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 24 (statement -> print_word NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 24 (statement -> print_word NEWLINE .)
    DO              reduce using rule 24 (statement -> print_word NEWLINE .)
    REDUCE_OPERATOR reduce using rule 24 (statement -> print_word NEWLINE .)
    EXTEND_OPERATOR reduce using rule 24 (statement -> print_word NEWLINE .)
    OCT_NUMBER      reduce using rule 24 (statement -> print_word NEWLINE .)
    DEC_NUMBER      reduce using rule 24 (statement -> print_word NEWLINE .)
    HEX_NUMBER      reduce using rule 24 (statement -> print_word NEWLINE .)
    TRUE            reduce using rule 24 (statement -> print_word NEWLINE .)
    FALSE           reduce using rule 24 (statement -> print_word NEWLINE .)
    NEWLINE         reduce using rule 24 (statement -> print_word NEWLINE .)
    RESULT          reduce using rule 24 (statement -> print_word NEWLINE .)
    RBRACKET        reduce using rule 24 (statement -> print_word NEWLINE .)


state 90

    (98) var_declaration -> VAR VARIABLE . OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> VAR VARIABLE . ASSIGNMENT expression

    OS_BRACKET      shift and go to state 124
    ASSIGNMENT      shift and go to state 125


state 91

    (100) var_declaration -> VAR error .

    NEWLINE         reduce using rule 100 (var_declaration -> VAR error .)


state 92

    (87) expression -> error expression . RBRACKET
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

    RBRACKET        shift and go to state 126
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

    binary_operator                shift and go to state 79

state 93

    (32) expression -> GET ENVIRONMENT .

    NEWLINE         reduce using rule 32 (expression -> GET ENVIRONMENT .)
    ASSIGNMENT      reduce using rule 32 (expression -> GET ENVIRONMENT .)
    OS_BRACKET      reduce using rule 32 (expression -> GET ENVIRONMENT .)
    PLUS            reduce using rule 32 (expression -> GET ENVIRONMENT .)
    MINUS           reduce using rule 32 (expression -> GET ENVIRONMENT .)
    MULTIPLY        reduce using rule 32 (expression -> GET ENVIRONMENT .)
    DIVIDE          reduce using rule 32 (expression -> GET ENVIRONMENT .)
    AND_OPERATOR    reduce using rule 32 (expression -> GET ENVIRONMENT .)
    RBRACKET        reduce using rule 32 (expression -> GET ENVIRONMENT .)
    error           reduce using rule 32 (expression -> GET ENVIRONMENT .)
    GET             reduce using rule 32 (expression -> GET ENVIRONMENT .)
    LBRACKET        reduce using rule 32 (expression -> GET ENVIRONMENT .)
    VARIABLE        reduce using rule 32 (expression -> GET ENVIRONMENT .)
    MXEQ_OPERATOR   reduce using rule 32 (expression -> GET ENVIRONMENT .)
    MXLT_OPERATOR   reduce using rule 32 (expression -> GET ENVIRONMENT .)
    MXGT_OPERATOR   reduce using rule 32 (expression -> GET ENVIRONMENT .)
    MXLTE_OPERATOR  reduce using rule 32 (expression -> GET ENVIRONMENT .)
    MXGTE_OPERATOR  reduce using rule 32 (expression -> GET ENVIRONMENT .)
    ELEQ_OPERATOR   reduce using rule 32 (expression -> GET ENVIRONMENT .)
    ELLT_OPERATOR   reduce using rule 32 (expression -> GET ENVIRONMENT .)
    ELGT_OPERATOR   reduce using rule 32 (expression -> GET ENVIRONMENT .)
    ELLTE_OPERATOR  reduce using rule 32 (expression -> GET ENVIRONMENT .)
    ELGTE_OPERATOR  reduce using rule 32 (expression -> GET ENVIRONMENT .)
    NOT_OPERATOR    reduce using rule 32 (expression -> GET ENVIRONMENT .)
    MXTRUE_OPERATOR reduce using rule 32 (expression -> GET ENVIRONMENT .)
    MXFALSE_OPERATOR reduce using rule 32 (expression -> GET ENVIRONMENT .)
    SIZE_OPERATOR   reduce using rule 32 (expression -> GET ENVIRONMENT .)
    LOGITIZE_OPERATOR reduce using rule 32 (expression -> GET ENVIRONMENT .)
    DIGITIZE_OPERATOR reduce using rule 32 (expression -> GET ENVIRONMENT .)
    DO              reduce using rule 32 (expression -> GET ENVIRONMENT .)
    REDUCE_OPERATOR reduce using rule 32 (expression -> GET ENVIRONMENT .)
    EXTEND_OPERATOR reduce using rule 32 (expression -> GET ENVIRONMENT .)
    OCT_NUMBER      reduce using rule 32 (expression -> GET ENVIRONMENT .)
    DEC_NUMBER      reduce using rule 32 (expression -> GET ENVIRONMENT .)
    HEX_NUMBER      reduce using rule 32 (expression -> GET ENVIRONMENT .)
    TRUE            reduce using rule 32 (expression -> GET ENVIRONMENT .)
    FALSE           reduce using rule 32 (expression -> GET ENVIRONMENT .)
    COMMA           reduce using rule 32 (expression -> GET ENVIRONMENT .)
    CS_BRACKET      reduce using rule 32 (expression -> GET ENVIRONMENT .)


state 94

    (84) get -> GET VARIABLE .

    NEWLINE         reduce using rule 84 (get -> GET VARIABLE .)
    ASSIGNMENT      reduce using rule 84 (get -> GET VARIABLE .)
    OS_BRACKET      reduce using rule 84 (get -> GET VARIABLE .)
    PLUS            reduce using rule 84 (get -> GET VARIABLE .)
    MINUS           reduce using rule 84 (get -> GET VARIABLE .)
    MULTIPLY        reduce using rule 84 (get -> GET VARIABLE .)
    DIVIDE          reduce using rule 84 (get -> GET VARIABLE .)
    AND_OPERATOR    reduce using rule 84 (get -> GET VARIABLE .)
    RBRACKET        reduce using rule 84 (get -> GET VARIABLE .)
    error           reduce using rule 84 (get -> GET VARIABLE .)
    GET             reduce using rule 84 (get -> GET VARIABLE .)
    LBRACKET        reduce using rule 84 (get -> GET VARIABLE .)
    VARIABLE        reduce using rule 84 (get -> GET VARIABLE .)
    MXEQ_OPERATOR   reduce using rule 84 (get -> GET VARIABLE .)
    MXLT_OPERATOR   reduce using rule 84 (get -> GET VARIABLE .)
    MXGT_OPERATOR   reduce using rule 84 (get -> GET VARIABLE .)
    MXLTE_OPERATOR  reduce using rule 84 (get -> GET VARIABLE .)
    MXGTE_OPERATOR  reduce using rule 84 (get -> GET VARIABLE .)
    ELEQ_OPERATOR   reduce using rule 84 (get -> GET VARIABLE .)
    ELLT_OPERATOR   reduce using rule 84 (get -> GET VARIABLE .)
    ELGT_OPERATOR   reduce using rule 84 (get -> GET VARIABLE .)
    ELLTE_OPERATOR  reduce using rule 84 (get -> GET VARIABLE .)
    ELGTE_OPERATOR  reduce using rule 84 (get -> GET VARIABLE .)
    NOT_OPERATOR    reduce using rule 84 (get -> GET VARIABLE .)
    MXTRUE_OPERATOR reduce using rule 84 (get -> GET VARIABLE .)
    MXFALSE_OPERATOR reduce using rule 84 (get -> GET VARIABLE .)
    SIZE_OPERATOR   reduce using rule 84 (get -> GET VARIABLE .)
    LOGITIZE_OPERATOR reduce using rule 84 (get -> GET VARIABLE .)
    DIGITIZE_OPERATOR reduce using rule 84 (get -> GET VARIABLE .)
    DO              reduce using rule 84 (get -> GET VARIABLE .)
    REDUCE_OPERATOR reduce using rule 84 (get -> GET VARIABLE .)
    EXTEND_OPERATOR reduce using rule 84 (get -> GET VARIABLE .)
    OCT_NUMBER      reduce using rule 84 (get -> GET VARIABLE .)
    DEC_NUMBER      reduce using rule 84 (get -> GET VARIABLE .)
    HEX_NUMBER      reduce using rule 84 (get -> GET VARIABLE .)
    TRUE            reduce using rule 84 (get -> GET VARIABLE .)
    FALSE           reduce using rule 84 (get -> GET VARIABLE .)
    COMMA           reduce using rule 84 (get -> GET VARIABLE .)
    CS_BRACKET      reduce using rule 84 (get -> GET VARIABLE .)


state 95

    (85) get -> GET error .

    NEWLINE         reduce using rule 85 (get -> GET error .)
    ASSIGNMENT      reduce using rule 85 (get -> GET error .)
    OS_BRACKET      reduce using rule 85 (get -> GET error .)
    PLUS            reduce using rule 85 (get -> GET error .)
    MINUS           reduce using rule 85 (get -> GET error .)
    MULTIPLY        reduce using rule 85 (get -> GET error .)
    DIVIDE          reduce using rule 85 (get -> GET error .)
    AND_OPERATOR    reduce using rule 85 (get -> GET error .)
    RBRACKET        reduce using rule 85 (get -> GET error .)
    error           reduce using rule 85 (get -> GET error .)
    GET             reduce using rule 85 (get -> GET error .)
    LBRACKET        reduce using rule 85 (get -> GET error .)
    VARIABLE        reduce using rule 85 (get -> GET error .)
    MXEQ_OPERATOR   reduce using rule 85 (get -> GET error .)
    MXLT_OPERATOR   reduce using rule 85 (get -> GET error .)
    MXGT_OPERATOR   reduce using rule 85 (get -> GET error .)
    MXLTE_OPERATOR  reduce using rule 85 (get -> GET error .)
    MXGTE_OPERATOR  reduce using rule 85 (get -> GET error .)
    ELEQ_OPERATOR   reduce using rule 85 (get -> GET error .)
    ELLT_OPERATOR   reduce using rule 85 (get -> GET error .)
    ELGT_OPERATOR   reduce using rule 85 (get -> GET error .)
    ELLTE_OPERATOR  reduce using rule 85 (get -> GET error .)
    ELGTE_OPERATOR  reduce using rule 85 (get -> GET error .)
    NOT_OPERATOR    reduce using rule 85 (get -> GET error .)
    MXTRUE_OPERATOR reduce using rule 85 (get -> GET error .)
    MXFALSE_OPERATOR reduce using rule 85 (get -> GET error .)
    SIZE_OPERATOR   reduce using rule 85 (get -> GET error .)
    LOGITIZE_OPERATOR reduce using rule 85 (get -> GET error .)
    DIGITIZE_OPERATOR reduce using rule 85 (get -> GET error .)
    DO              reduce using rule 85 (get -> GET error .)
    REDUCE_OPERATOR reduce using rule 85 (get -> GET error .)
    EXTEND_OPERATOR reduce using rule 85 (get -> GET error .)
    OCT_NUMBER      reduce using rule 85 (get -> GET error .)
    DEC_NUMBER      reduce using rule 85 (get -> GET error .)
    HEX_NUMBER      reduce using rule 85 (get -> GET error .)
    TRUE            reduce using rule 85 (get -> GET error .)
    FALSE           reduce using rule 85 (get -> GET error .)
    COMMA           reduce using rule 85 (get -> GET error .)
    CS_BRACKET      reduce using rule 85 (get -> GET error .)


state 96

    (49) expression -> unary_operator expression .
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
  ! shift/reduce conflict for OS_BRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND_OPERATOR resolved as shift
    NEWLINE         reduce using rule 49 (expression -> unary_operator expression .)
    RBRACKET        reduce using rule 49 (expression -> unary_operator expression .)
    error           reduce using rule 49 (expression -> unary_operator expression .)
    GET             reduce using rule 49 (expression -> unary_operator expression .)
    LBRACKET        reduce using rule 49 (expression -> unary_operator expression .)
    VARIABLE        reduce using rule 49 (expression -> unary_operator expression .)
    MXEQ_OPERATOR   reduce using rule 49 (expression -> unary_operator expression .)
    MXLT_OPERATOR   reduce using rule 49 (expression -> unary_operator expression .)
    MXGT_OPERATOR   reduce using rule 49 (expression -> unary_operator expression .)
    MXLTE_OPERATOR  reduce using rule 49 (expression -> unary_operator expression .)
    MXGTE_OPERATOR  reduce using rule 49 (expression -> unary_operator expression .)
    ELEQ_OPERATOR   reduce using rule 49 (expression -> unary_operator expression .)
    ELLT_OPERATOR   reduce using rule 49 (expression -> unary_operator expression .)
    ELGT_OPERATOR   reduce using rule 49 (expression -> unary_operator expression .)
    ELLTE_OPERATOR  reduce using rule 49 (expression -> unary_operator expression .)
    ELGTE_OPERATOR  reduce using rule 49 (expression -> unary_operator expression .)
    NOT_OPERATOR    reduce using rule 49 (expression -> unary_operator expression .)
    MXTRUE_OPERATOR reduce using rule 49 (expression -> unary_operator expression .)
    MXFALSE_OPERATOR reduce using rule 49 (expression -> unary_operator expression .)
    SIZE_OPERATOR   reduce using rule 49 (expression -> unary_operator expression .)
    LOGITIZE_OPERATOR reduce using rule 49 (expression -> unary_operator expression .)
    DIGITIZE_OPERATOR reduce using rule 49 (expression -> unary_operator expression .)
    DO              reduce using rule 49 (expression -> unary_operator expression .)
    REDUCE_OPERATOR reduce using rule 49 (expression -> unary_operator expression .)
    EXTEND_OPERATOR reduce using rule 49 (expression -> unary_operator expression .)
    OCT_NUMBER      reduce using rule 49 (expression -> unary_operator expression .)
    DEC_NUMBER      reduce using rule 49 (expression -> unary_operator expression .)
    HEX_NUMBER      reduce using rule 49 (expression -> unary_operator expression .)
    TRUE            reduce using rule 49 (expression -> unary_operator expression .)
    FALSE           reduce using rule 49 (expression -> unary_operator expression .)
    COMMA           reduce using rule 49 (expression -> unary_operator expression .)
    CS_BRACKET      reduce using rule 49 (expression -> unary_operator expression .)
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

  ! ASSIGNMENT      [ reduce using rule 49 (expression -> unary_operator expression .) ]
  ! OS_BRACKET      [ reduce using rule 49 (expression -> unary_operator expression .) ]
  ! PLUS            [ reduce using rule 49 (expression -> unary_operator expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> unary_operator expression .) ]
  ! MULTIPLY        [ reduce using rule 49 (expression -> unary_operator expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> unary_operator expression .) ]
  ! AND_OPERATOR    [ reduce using rule 49 (expression -> unary_operator expression .) ]

    binary_operator                shift and go to state 79

state 97

    (86) expression -> LBRACKET expression . RBRACKET
    (88) expression -> LBRACKET expression . error
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

    RBRACKET        shift and go to state 127
    error           shift and go to state 128
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

    binary_operator                shift and go to state 79

state 98

    (33) for -> FOR VARIABLE . BOUNDARY VARIABLE STEP VARIABLE statements_group

    BOUNDARY        shift and go to state 129


state 99

    (34) for -> FOR error . NEWLINE

    NEWLINE         shift and go to state 130


state 100

    (38) switch -> SWITCH expression . NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> SWITCH expression . NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> SWITCH expression . NEWLINE TRUE statements_group
    (41) switch -> SWITCH expression . NEWLINE FALSE statements_group
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

    NEWLINE         shift and go to state 131
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

    binary_operator                shift and go to state 79

state 101

    (42) switch -> SWITCH error . NEWLINE
    (87) expression -> error . expression RBRACKET
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    NEWLINE         shift and go to state 132
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 92
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 102

    (30) command -> ROTATE LEFT .

    NEWLINE         reduce using rule 30 (command -> ROTATE LEFT .)


state 103

    (31) command -> ROTATE RIGHT .

    NEWLINE         reduce using rule 31 (command -> ROTATE RIGHT .)


state 104

    (27) print -> PRINT expression .
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

    NEWLINE         reduce using rule 27 (print -> PRINT expression .)
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

    binary_operator                shift and go to state 79

state 105

    (26) print_word -> PRINT QUOTE . VARIABLE QUOTE

    VARIABLE        shift and go to state 133


state 106

    (78) do -> DO VARIABLE . call_parameters
    (80) call_parameters -> . call_parameter call_parameters
    (81) call_parameters -> . call_parameter
    (82) call_parameter -> . expression
    (83) call_parameter -> . error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    error           shift and go to state 137
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    call_parameters                shift and go to state 134
    call_parameter                 shift and go to state 135
    expression                     shift and go to state 136
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 107

    (79) do -> DO error .

    NEWLINE         reduce using rule 79 (do -> DO error .)
    ASSIGNMENT      reduce using rule 79 (do -> DO error .)
    OS_BRACKET      reduce using rule 79 (do -> DO error .)
    PLUS            reduce using rule 79 (do -> DO error .)
    MINUS           reduce using rule 79 (do -> DO error .)
    MULTIPLY        reduce using rule 79 (do -> DO error .)
    DIVIDE          reduce using rule 79 (do -> DO error .)
    AND_OPERATOR    reduce using rule 79 (do -> DO error .)
    RBRACKET        reduce using rule 79 (do -> DO error .)
    error           reduce using rule 79 (do -> DO error .)
    GET             reduce using rule 79 (do -> DO error .)
    LBRACKET        reduce using rule 79 (do -> DO error .)
    VARIABLE        reduce using rule 79 (do -> DO error .)
    MXEQ_OPERATOR   reduce using rule 79 (do -> DO error .)
    MXLT_OPERATOR   reduce using rule 79 (do -> DO error .)
    MXGT_OPERATOR   reduce using rule 79 (do -> DO error .)
    MXLTE_OPERATOR  reduce using rule 79 (do -> DO error .)
    MXGTE_OPERATOR  reduce using rule 79 (do -> DO error .)
    ELEQ_OPERATOR   reduce using rule 79 (do -> DO error .)
    ELLT_OPERATOR   reduce using rule 79 (do -> DO error .)
    ELGT_OPERATOR   reduce using rule 79 (do -> DO error .)
    ELLTE_OPERATOR  reduce using rule 79 (do -> DO error .)
    ELGTE_OPERATOR  reduce using rule 79 (do -> DO error .)
    NOT_OPERATOR    reduce using rule 79 (do -> DO error .)
    MXTRUE_OPERATOR reduce using rule 79 (do -> DO error .)
    MXFALSE_OPERATOR reduce using rule 79 (do -> DO error .)
    SIZE_OPERATOR   reduce using rule 79 (do -> DO error .)
    LOGITIZE_OPERATOR reduce using rule 79 (do -> DO error .)
    DIGITIZE_OPERATOR reduce using rule 79 (do -> DO error .)
    DO              reduce using rule 79 (do -> DO error .)
    REDUCE_OPERATOR reduce using rule 79 (do -> DO error .)
    EXTEND_OPERATOR reduce using rule 79 (do -> DO error .)
    OCT_NUMBER      reduce using rule 79 (do -> DO error .)
    DEC_NUMBER      reduce using rule 79 (do -> DO error .)
    HEX_NUMBER      reduce using rule 79 (do -> DO error .)
    TRUE            reduce using rule 79 (do -> DO error .)
    FALSE           reduce using rule 79 (do -> DO error .)
    COMMA           reduce using rule 79 (do -> DO error .)
    CS_BRACKET      reduce using rule 79 (do -> DO error .)


state 108

    (74) reduce -> REDUCE_OPERATOR expression . dimensions
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (102) dimensions -> . dimension COMMA dimensions
    (103) dimensions -> . dimension
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR
    (104) dimension -> . expression
    (105) dimension -> . error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86
    error           shift and go to state 123
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 120
    dimensions                     shift and go to state 138
    binary_operator                shift and go to state 79
    dimension                      shift and go to state 122
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 109

    (75) reduce -> REDUCE_OPERATOR error .
    (87) expression -> error . expression RBRACKET
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

  ! shift/reduce conflict for GET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for MXEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for NOT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXTRUE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXFALSE_OPERATOR resolved as shift
  ! shift/reduce conflict for SIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for LOGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DIGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for REDUCE_OPERATOR resolved as shift
  ! shift/reduce conflict for EXTEND_OPERATOR resolved as shift
  ! shift/reduce conflict for OCT_NUMBER resolved as shift
  ! shift/reduce conflict for DEC_NUMBER resolved as shift
  ! shift/reduce conflict for HEX_NUMBER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    NEWLINE         reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    ASSIGNMENT      reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    OS_BRACKET      reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    PLUS            reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    MINUS           reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    MULTIPLY        reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    DIVIDE          reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    AND_OPERATOR    reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    RBRACKET        reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    COMMA           reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    CS_BRACKET      reduce using rule 75 (reduce -> REDUCE_OPERATOR error .)
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

  ! error           [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! GET             [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! LBRACKET        [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! VARIABLE        [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! MXEQ_OPERATOR   [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! MXLT_OPERATOR   [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! MXGT_OPERATOR   [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! MXLTE_OPERATOR  [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! MXGTE_OPERATOR  [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! ELEQ_OPERATOR   [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! ELLT_OPERATOR   [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! ELGT_OPERATOR   [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! ELLTE_OPERATOR  [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! ELGTE_OPERATOR  [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! NOT_OPERATOR    [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! MXTRUE_OPERATOR [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! MXFALSE_OPERATOR [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! SIZE_OPERATOR   [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! LOGITIZE_OPERATOR [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! DIGITIZE_OPERATOR [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! DO              [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! REDUCE_OPERATOR [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! EXTEND_OPERATOR [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! OCT_NUMBER      [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! DEC_NUMBER      [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! HEX_NUMBER      [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! TRUE            [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]
  ! FALSE           [ reduce using rule 75 (reduce -> REDUCE_OPERATOR error .) ]

    expression                     shift and go to state 92
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 110

    (76) extend -> EXTEND_OPERATOR expression . dimensions
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (102) dimensions -> . dimension COMMA dimensions
    (103) dimensions -> . dimension
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR
    (104) dimension -> . expression
    (105) dimension -> . error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86
    error           shift and go to state 123
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 120
    dimensions                     shift and go to state 139
    binary_operator                shift and go to state 79
    dimension                      shift and go to state 122
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 111

    (77) extend -> EXTEND_OPERATOR error .
    (87) expression -> error . expression RBRACKET
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

  ! shift/reduce conflict for GET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for MXEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for NOT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXTRUE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXFALSE_OPERATOR resolved as shift
  ! shift/reduce conflict for SIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for LOGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DIGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for REDUCE_OPERATOR resolved as shift
  ! shift/reduce conflict for EXTEND_OPERATOR resolved as shift
  ! shift/reduce conflict for OCT_NUMBER resolved as shift
  ! shift/reduce conflict for DEC_NUMBER resolved as shift
  ! shift/reduce conflict for HEX_NUMBER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    NEWLINE         reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    ASSIGNMENT      reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    OS_BRACKET      reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    PLUS            reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    MINUS           reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    MULTIPLY        reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    DIVIDE          reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    AND_OPERATOR    reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    RBRACKET        reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    COMMA           reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    CS_BRACKET      reduce using rule 77 (extend -> EXTEND_OPERATOR error .)
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

  ! error           [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! GET             [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! LBRACKET        [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! VARIABLE        [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! MXEQ_OPERATOR   [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! MXLT_OPERATOR   [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! MXGT_OPERATOR   [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! MXLTE_OPERATOR  [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! MXGTE_OPERATOR  [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! ELEQ_OPERATOR   [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! ELLT_OPERATOR   [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! ELGT_OPERATOR   [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! ELLTE_OPERATOR  [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! ELGTE_OPERATOR  [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! NOT_OPERATOR    [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! MXTRUE_OPERATOR [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! MXFALSE_OPERATOR [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! SIZE_OPERATOR   [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! LOGITIZE_OPERATOR [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! DIGITIZE_OPERATOR [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! DO              [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! REDUCE_OPERATOR [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! EXTEND_OPERATOR [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! OCT_NUMBER      [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! DEC_NUMBER      [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! HEX_NUMBER      [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! TRUE            [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]
  ! FALSE           [ reduce using rule 77 (extend -> EXTEND_OPERATOR error .) ]

    expression                     shift and go to state 92
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 112

    (10) parameters -> VARIABLE parameters .

    NEWLINE         reduce using rule 10 (parameters -> VARIABLE parameters .)


state 113

    (4) function -> func_decl NEWLINE func_body result NEWLINE .

    TASK            reduce using rule 4 (function -> func_decl NEWLINE func_body result NEWLINE .)
    $end            reduce using rule 4 (function -> func_decl NEWLINE func_body result NEWLINE .)


state 114

    (5) result -> RESULT expression .
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

    NEWLINE         reduce using rule 5 (result -> RESULT expression .)
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

    binary_operator                shift and go to state 79

state 115

    (28) statement -> statement THANKS NEWLINE .

    THANKS          reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    PLEASE          reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    VAR             reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    GET             reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    LBRACKET        reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    error           reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    VARIABLE        reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    FOR             reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    SWITCH          reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    MOVE            reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    ROTATE          reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    PRINT           reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    MXLT_OPERATOR   reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    MXGT_OPERATOR   reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    ELLT_OPERATOR   reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    ELGT_OPERATOR   reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    NOT_OPERATOR    reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    SIZE_OPERATOR   reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    DO              reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    REDUCE_OPERATOR reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    EXTEND_OPERATOR reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    OCT_NUMBER      reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    DEC_NUMBER      reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    HEX_NUMBER      reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    TRUE            reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    FALSE           reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    NEWLINE         reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    RESULT          reduce using rule 28 (statement -> statement THANKS NEWLINE .)
    RBRACKET        reduce using rule 28 (statement -> statement THANKS NEWLINE .)


state 116

    (16) statement -> PLEASE statement THANKS . NEWLINE
    (28) statement -> statement THANKS . NEWLINE

    NEWLINE         shift and go to state 140


state 117

    (17) statement -> PLEASE statement NEWLINE .

    THANKS          reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    PLEASE          reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    VAR             reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    GET             reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    LBRACKET        reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    error           reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    VARIABLE        reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    FOR             reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    SWITCH          reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    MOVE            reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    ROTATE          reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    PRINT           reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    MXLT_OPERATOR   reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    MXGT_OPERATOR   reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    ELLT_OPERATOR   reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    ELGT_OPERATOR   reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    NOT_OPERATOR    reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    SIZE_OPERATOR   reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    DO              reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    REDUCE_OPERATOR reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    EXTEND_OPERATOR reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    OCT_NUMBER      reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    DEC_NUMBER      reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    HEX_NUMBER      reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    TRUE            reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    FALSE           reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    NEWLINE         reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    RESULT          reduce using rule 17 (statement -> PLEASE statement NEWLINE .)
    RBRACKET        reduce using rule 17 (statement -> PLEASE statement NEWLINE .)


state 118

    (43) expression -> expression binary_operator expression .
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
  ! shift/reduce conflict for OS_BRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND_OPERATOR resolved as shift
    NEWLINE         reduce using rule 43 (expression -> expression binary_operator expression .)
    RBRACKET        reduce using rule 43 (expression -> expression binary_operator expression .)
    error           reduce using rule 43 (expression -> expression binary_operator expression .)
    GET             reduce using rule 43 (expression -> expression binary_operator expression .)
    LBRACKET        reduce using rule 43 (expression -> expression binary_operator expression .)
    VARIABLE        reduce using rule 43 (expression -> expression binary_operator expression .)
    MXEQ_OPERATOR   reduce using rule 43 (expression -> expression binary_operator expression .)
    MXLT_OPERATOR   reduce using rule 43 (expression -> expression binary_operator expression .)
    MXGT_OPERATOR   reduce using rule 43 (expression -> expression binary_operator expression .)
    MXLTE_OPERATOR  reduce using rule 43 (expression -> expression binary_operator expression .)
    MXGTE_OPERATOR  reduce using rule 43 (expression -> expression binary_operator expression .)
    ELEQ_OPERATOR   reduce using rule 43 (expression -> expression binary_operator expression .)
    ELLT_OPERATOR   reduce using rule 43 (expression -> expression binary_operator expression .)
    ELGT_OPERATOR   reduce using rule 43 (expression -> expression binary_operator expression .)
    ELLTE_OPERATOR  reduce using rule 43 (expression -> expression binary_operator expression .)
    ELGTE_OPERATOR  reduce using rule 43 (expression -> expression binary_operator expression .)
    NOT_OPERATOR    reduce using rule 43 (expression -> expression binary_operator expression .)
    MXTRUE_OPERATOR reduce using rule 43 (expression -> expression binary_operator expression .)
    MXFALSE_OPERATOR reduce using rule 43 (expression -> expression binary_operator expression .)
    SIZE_OPERATOR   reduce using rule 43 (expression -> expression binary_operator expression .)
    LOGITIZE_OPERATOR reduce using rule 43 (expression -> expression binary_operator expression .)
    DIGITIZE_OPERATOR reduce using rule 43 (expression -> expression binary_operator expression .)
    DO              reduce using rule 43 (expression -> expression binary_operator expression .)
    REDUCE_OPERATOR reduce using rule 43 (expression -> expression binary_operator expression .)
    EXTEND_OPERATOR reduce using rule 43 (expression -> expression binary_operator expression .)
    OCT_NUMBER      reduce using rule 43 (expression -> expression binary_operator expression .)
    DEC_NUMBER      reduce using rule 43 (expression -> expression binary_operator expression .)
    HEX_NUMBER      reduce using rule 43 (expression -> expression binary_operator expression .)
    TRUE            reduce using rule 43 (expression -> expression binary_operator expression .)
    FALSE           reduce using rule 43 (expression -> expression binary_operator expression .)
    COMMA           reduce using rule 43 (expression -> expression binary_operator expression .)
    CS_BRACKET      reduce using rule 43 (expression -> expression binary_operator expression .)
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

  ! ASSIGNMENT      [ reduce using rule 43 (expression -> expression binary_operator expression .) ]
  ! OS_BRACKET      [ reduce using rule 43 (expression -> expression binary_operator expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression binary_operator expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression binary_operator expression .) ]
  ! MULTIPLY        [ reduce using rule 43 (expression -> expression binary_operator expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression binary_operator expression .) ]
  ! AND_OPERATOR    [ reduce using rule 43 (expression -> expression binary_operator expression .) ]

    binary_operator                shift and go to state 79

state 119

    (73) assignment -> expression ASSIGNMENT expression .
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

    NEWLINE         reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    OS_BRACKET      reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    RBRACKET        reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    error           reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    GET             reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    LBRACKET        reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    VARIABLE        reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    MXEQ_OPERATOR   reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    MXLT_OPERATOR   reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    MXGT_OPERATOR   reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    MXLTE_OPERATOR  reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    MXGTE_OPERATOR  reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    ELEQ_OPERATOR   reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    ELLT_OPERATOR   reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    ELGT_OPERATOR   reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    ELLTE_OPERATOR  reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    ELGTE_OPERATOR  reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    NOT_OPERATOR    reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    MXTRUE_OPERATOR reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    MXFALSE_OPERATOR reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    SIZE_OPERATOR   reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    LOGITIZE_OPERATOR reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    DIGITIZE_OPERATOR reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    DO              reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    REDUCE_OPERATOR reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    EXTEND_OPERATOR reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    OCT_NUMBER      reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    DEC_NUMBER      reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    HEX_NUMBER      reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    TRUE            reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    FALSE           reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    COMMA           reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    CS_BRACKET      reduce using rule 73 (assignment -> expression ASSIGNMENT expression .)
    ASSIGNMENT      shift and go to state 80
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

  ! ASSIGNMENT      [ reduce using rule 73 (assignment -> expression ASSIGNMENT expression .) ]
  ! PLUS            [ reduce using rule 73 (assignment -> expression ASSIGNMENT expression .) ]
  ! MINUS           [ reduce using rule 73 (assignment -> expression ASSIGNMENT expression .) ]
  ! MULTIPLY        [ reduce using rule 73 (assignment -> expression ASSIGNMENT expression .) ]
  ! DIVIDE          [ reduce using rule 73 (assignment -> expression ASSIGNMENT expression .) ]
  ! AND_OPERATOR    [ reduce using rule 73 (assignment -> expression ASSIGNMENT expression .) ]
  ! OS_BRACKET      [ shift and go to state 81 ]

    binary_operator                shift and go to state 79

state 120

    (104) dimension -> expression .
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
  ! shift/reduce conflict for OS_BRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND_OPERATOR resolved as shift
    COMMA           reduce using rule 104 (dimension -> expression .)
    CS_BRACKET      reduce using rule 104 (dimension -> expression .)
    NEWLINE         reduce using rule 104 (dimension -> expression .)
    RBRACKET        reduce using rule 104 (dimension -> expression .)
    error           reduce using rule 104 (dimension -> expression .)
    GET             reduce using rule 104 (dimension -> expression .)
    LBRACKET        reduce using rule 104 (dimension -> expression .)
    VARIABLE        reduce using rule 104 (dimension -> expression .)
    MXEQ_OPERATOR   reduce using rule 104 (dimension -> expression .)
    MXLT_OPERATOR   reduce using rule 104 (dimension -> expression .)
    MXGT_OPERATOR   reduce using rule 104 (dimension -> expression .)
    MXLTE_OPERATOR  reduce using rule 104 (dimension -> expression .)
    MXGTE_OPERATOR  reduce using rule 104 (dimension -> expression .)
    ELEQ_OPERATOR   reduce using rule 104 (dimension -> expression .)
    ELLT_OPERATOR   reduce using rule 104 (dimension -> expression .)
    ELGT_OPERATOR   reduce using rule 104 (dimension -> expression .)
    ELLTE_OPERATOR  reduce using rule 104 (dimension -> expression .)
    ELGTE_OPERATOR  reduce using rule 104 (dimension -> expression .)
    NOT_OPERATOR    reduce using rule 104 (dimension -> expression .)
    MXTRUE_OPERATOR reduce using rule 104 (dimension -> expression .)
    MXFALSE_OPERATOR reduce using rule 104 (dimension -> expression .)
    SIZE_OPERATOR   reduce using rule 104 (dimension -> expression .)
    LOGITIZE_OPERATOR reduce using rule 104 (dimension -> expression .)
    DIGITIZE_OPERATOR reduce using rule 104 (dimension -> expression .)
    DO              reduce using rule 104 (dimension -> expression .)
    REDUCE_OPERATOR reduce using rule 104 (dimension -> expression .)
    EXTEND_OPERATOR reduce using rule 104 (dimension -> expression .)
    OCT_NUMBER      reduce using rule 104 (dimension -> expression .)
    DEC_NUMBER      reduce using rule 104 (dimension -> expression .)
    HEX_NUMBER      reduce using rule 104 (dimension -> expression .)
    TRUE            reduce using rule 104 (dimension -> expression .)
    FALSE           reduce using rule 104 (dimension -> expression .)
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

  ! ASSIGNMENT      [ reduce using rule 104 (dimension -> expression .) ]
  ! OS_BRACKET      [ reduce using rule 104 (dimension -> expression .) ]
  ! PLUS            [ reduce using rule 104 (dimension -> expression .) ]
  ! MINUS           [ reduce using rule 104 (dimension -> expression .) ]
  ! MULTIPLY        [ reduce using rule 104 (dimension -> expression .) ]
  ! DIVIDE          [ reduce using rule 104 (dimension -> expression .) ]
  ! AND_OPERATOR    [ reduce using rule 104 (dimension -> expression .) ]

    binary_operator                shift and go to state 79

state 121

    (101) indexing -> expression OS_BRACKET dimensions . CS_BRACKET

    CS_BRACKET      shift and go to state 141


state 122

    (102) dimensions -> dimension . COMMA dimensions
    (103) dimensions -> dimension .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 142
    CS_BRACKET      reduce using rule 103 (dimensions -> dimension .)
    ASSIGNMENT      reduce using rule 103 (dimensions -> dimension .)
    OS_BRACKET      reduce using rule 103 (dimensions -> dimension .)
    PLUS            reduce using rule 103 (dimensions -> dimension .)
    MINUS           reduce using rule 103 (dimensions -> dimension .)
    MULTIPLY        reduce using rule 103 (dimensions -> dimension .)
    DIVIDE          reduce using rule 103 (dimensions -> dimension .)
    AND_OPERATOR    reduce using rule 103 (dimensions -> dimension .)
    NEWLINE         reduce using rule 103 (dimensions -> dimension .)
    RBRACKET        reduce using rule 103 (dimensions -> dimension .)
    error           reduce using rule 103 (dimensions -> dimension .)
    GET             reduce using rule 103 (dimensions -> dimension .)
    LBRACKET        reduce using rule 103 (dimensions -> dimension .)
    VARIABLE        reduce using rule 103 (dimensions -> dimension .)
    MXEQ_OPERATOR   reduce using rule 103 (dimensions -> dimension .)
    MXLT_OPERATOR   reduce using rule 103 (dimensions -> dimension .)
    MXGT_OPERATOR   reduce using rule 103 (dimensions -> dimension .)
    MXLTE_OPERATOR  reduce using rule 103 (dimensions -> dimension .)
    MXGTE_OPERATOR  reduce using rule 103 (dimensions -> dimension .)
    ELEQ_OPERATOR   reduce using rule 103 (dimensions -> dimension .)
    ELLT_OPERATOR   reduce using rule 103 (dimensions -> dimension .)
    ELGT_OPERATOR   reduce using rule 103 (dimensions -> dimension .)
    ELLTE_OPERATOR  reduce using rule 103 (dimensions -> dimension .)
    ELGTE_OPERATOR  reduce using rule 103 (dimensions -> dimension .)
    NOT_OPERATOR    reduce using rule 103 (dimensions -> dimension .)
    MXTRUE_OPERATOR reduce using rule 103 (dimensions -> dimension .)
    MXFALSE_OPERATOR reduce using rule 103 (dimensions -> dimension .)
    SIZE_OPERATOR   reduce using rule 103 (dimensions -> dimension .)
    LOGITIZE_OPERATOR reduce using rule 103 (dimensions -> dimension .)
    DIGITIZE_OPERATOR reduce using rule 103 (dimensions -> dimension .)
    DO              reduce using rule 103 (dimensions -> dimension .)
    REDUCE_OPERATOR reduce using rule 103 (dimensions -> dimension .)
    EXTEND_OPERATOR reduce using rule 103 (dimensions -> dimension .)
    OCT_NUMBER      reduce using rule 103 (dimensions -> dimension .)
    DEC_NUMBER      reduce using rule 103 (dimensions -> dimension .)
    HEX_NUMBER      reduce using rule 103 (dimensions -> dimension .)
    TRUE            reduce using rule 103 (dimensions -> dimension .)
    FALSE           reduce using rule 103 (dimensions -> dimension .)

  ! COMMA           [ reduce using rule 103 (dimensions -> dimension .) ]


state 123

    (105) dimension -> error .
    (87) expression -> error . expression RBRACKET
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

  ! shift/reduce conflict for GET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for MXEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for NOT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXTRUE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXFALSE_OPERATOR resolved as shift
  ! shift/reduce conflict for SIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for LOGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DIGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for REDUCE_OPERATOR resolved as shift
  ! shift/reduce conflict for EXTEND_OPERATOR resolved as shift
  ! shift/reduce conflict for OCT_NUMBER resolved as shift
  ! shift/reduce conflict for DEC_NUMBER resolved as shift
  ! shift/reduce conflict for HEX_NUMBER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    COMMA           reduce using rule 105 (dimension -> error .)
    CS_BRACKET      reduce using rule 105 (dimension -> error .)
    ASSIGNMENT      reduce using rule 105 (dimension -> error .)
    OS_BRACKET      reduce using rule 105 (dimension -> error .)
    PLUS            reduce using rule 105 (dimension -> error .)
    MINUS           reduce using rule 105 (dimension -> error .)
    MULTIPLY        reduce using rule 105 (dimension -> error .)
    DIVIDE          reduce using rule 105 (dimension -> error .)
    AND_OPERATOR    reduce using rule 105 (dimension -> error .)
    NEWLINE         reduce using rule 105 (dimension -> error .)
    RBRACKET        reduce using rule 105 (dimension -> error .)
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

  ! error           [ reduce using rule 105 (dimension -> error .) ]
  ! GET             [ reduce using rule 105 (dimension -> error .) ]
  ! LBRACKET        [ reduce using rule 105 (dimension -> error .) ]
  ! VARIABLE        [ reduce using rule 105 (dimension -> error .) ]
  ! MXEQ_OPERATOR   [ reduce using rule 105 (dimension -> error .) ]
  ! MXLT_OPERATOR   [ reduce using rule 105 (dimension -> error .) ]
  ! MXGT_OPERATOR   [ reduce using rule 105 (dimension -> error .) ]
  ! MXLTE_OPERATOR  [ reduce using rule 105 (dimension -> error .) ]
  ! MXGTE_OPERATOR  [ reduce using rule 105 (dimension -> error .) ]
  ! ELEQ_OPERATOR   [ reduce using rule 105 (dimension -> error .) ]
  ! ELLT_OPERATOR   [ reduce using rule 105 (dimension -> error .) ]
  ! ELGT_OPERATOR   [ reduce using rule 105 (dimension -> error .) ]
  ! ELLTE_OPERATOR  [ reduce using rule 105 (dimension -> error .) ]
  ! ELGTE_OPERATOR  [ reduce using rule 105 (dimension -> error .) ]
  ! NOT_OPERATOR    [ reduce using rule 105 (dimension -> error .) ]
  ! MXTRUE_OPERATOR [ reduce using rule 105 (dimension -> error .) ]
  ! MXFALSE_OPERATOR [ reduce using rule 105 (dimension -> error .) ]
  ! SIZE_OPERATOR   [ reduce using rule 105 (dimension -> error .) ]
  ! LOGITIZE_OPERATOR [ reduce using rule 105 (dimension -> error .) ]
  ! DIGITIZE_OPERATOR [ reduce using rule 105 (dimension -> error .) ]
  ! DO              [ reduce using rule 105 (dimension -> error .) ]
  ! REDUCE_OPERATOR [ reduce using rule 105 (dimension -> error .) ]
  ! EXTEND_OPERATOR [ reduce using rule 105 (dimension -> error .) ]
  ! OCT_NUMBER      [ reduce using rule 105 (dimension -> error .) ]
  ! DEC_NUMBER      [ reduce using rule 105 (dimension -> error .) ]
  ! HEX_NUMBER      [ reduce using rule 105 (dimension -> error .) ]
  ! TRUE            [ reduce using rule 105 (dimension -> error .) ]
  ! FALSE           [ reduce using rule 105 (dimension -> error .) ]

    expression                     shift and go to state 92
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 124

    (98) var_declaration -> VAR VARIABLE OS_BRACKET . dimensions CS_BRACKET ASSIGNMENT initializer
    (102) dimensions -> . dimension COMMA dimensions
    (103) dimensions -> . dimension
    (104) dimension -> . expression
    (105) dimension -> . error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    error           shift and go to state 123
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    dimensions                     shift and go to state 143
    dimension                      shift and go to state 122
    expression                     shift and go to state 120
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 125

    (99) var_declaration -> VAR VARIABLE ASSIGNMENT . expression
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 144
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 126

    (87) expression -> error expression RBRACKET .

    NEWLINE         reduce using rule 87 (expression -> error expression RBRACKET .)
    ASSIGNMENT      reduce using rule 87 (expression -> error expression RBRACKET .)
    OS_BRACKET      reduce using rule 87 (expression -> error expression RBRACKET .)
    PLUS            reduce using rule 87 (expression -> error expression RBRACKET .)
    MINUS           reduce using rule 87 (expression -> error expression RBRACKET .)
    MULTIPLY        reduce using rule 87 (expression -> error expression RBRACKET .)
    DIVIDE          reduce using rule 87 (expression -> error expression RBRACKET .)
    AND_OPERATOR    reduce using rule 87 (expression -> error expression RBRACKET .)
    RBRACKET        reduce using rule 87 (expression -> error expression RBRACKET .)
    error           reduce using rule 87 (expression -> error expression RBRACKET .)
    GET             reduce using rule 87 (expression -> error expression RBRACKET .)
    LBRACKET        reduce using rule 87 (expression -> error expression RBRACKET .)
    VARIABLE        reduce using rule 87 (expression -> error expression RBRACKET .)
    MXEQ_OPERATOR   reduce using rule 87 (expression -> error expression RBRACKET .)
    MXLT_OPERATOR   reduce using rule 87 (expression -> error expression RBRACKET .)
    MXGT_OPERATOR   reduce using rule 87 (expression -> error expression RBRACKET .)
    MXLTE_OPERATOR  reduce using rule 87 (expression -> error expression RBRACKET .)
    MXGTE_OPERATOR  reduce using rule 87 (expression -> error expression RBRACKET .)
    ELEQ_OPERATOR   reduce using rule 87 (expression -> error expression RBRACKET .)
    ELLT_OPERATOR   reduce using rule 87 (expression -> error expression RBRACKET .)
    ELGT_OPERATOR   reduce using rule 87 (expression -> error expression RBRACKET .)
    ELLTE_OPERATOR  reduce using rule 87 (expression -> error expression RBRACKET .)
    ELGTE_OPERATOR  reduce using rule 87 (expression -> error expression RBRACKET .)
    NOT_OPERATOR    reduce using rule 87 (expression -> error expression RBRACKET .)
    MXTRUE_OPERATOR reduce using rule 87 (expression -> error expression RBRACKET .)
    MXFALSE_OPERATOR reduce using rule 87 (expression -> error expression RBRACKET .)
    SIZE_OPERATOR   reduce using rule 87 (expression -> error expression RBRACKET .)
    LOGITIZE_OPERATOR reduce using rule 87 (expression -> error expression RBRACKET .)
    DIGITIZE_OPERATOR reduce using rule 87 (expression -> error expression RBRACKET .)
    DO              reduce using rule 87 (expression -> error expression RBRACKET .)
    REDUCE_OPERATOR reduce using rule 87 (expression -> error expression RBRACKET .)
    EXTEND_OPERATOR reduce using rule 87 (expression -> error expression RBRACKET .)
    OCT_NUMBER      reduce using rule 87 (expression -> error expression RBRACKET .)
    DEC_NUMBER      reduce using rule 87 (expression -> error expression RBRACKET .)
    HEX_NUMBER      reduce using rule 87 (expression -> error expression RBRACKET .)
    TRUE            reduce using rule 87 (expression -> error expression RBRACKET .)
    FALSE           reduce using rule 87 (expression -> error expression RBRACKET .)
    COMMA           reduce using rule 87 (expression -> error expression RBRACKET .)
    CS_BRACKET      reduce using rule 87 (expression -> error expression RBRACKET .)


state 127

    (86) expression -> LBRACKET expression RBRACKET .

    NEWLINE         reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    ASSIGNMENT      reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    OS_BRACKET      reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    AND_OPERATOR    reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    error           reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    GET             reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    VARIABLE        reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    MXEQ_OPERATOR   reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    MXLT_OPERATOR   reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    MXGT_OPERATOR   reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    MXLTE_OPERATOR  reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    MXGTE_OPERATOR  reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    ELEQ_OPERATOR   reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    ELLT_OPERATOR   reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    ELGT_OPERATOR   reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    ELLTE_OPERATOR  reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    ELGTE_OPERATOR  reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    NOT_OPERATOR    reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    MXTRUE_OPERATOR reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    MXFALSE_OPERATOR reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    SIZE_OPERATOR   reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    LOGITIZE_OPERATOR reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    DIGITIZE_OPERATOR reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    DO              reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    REDUCE_OPERATOR reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    EXTEND_OPERATOR reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    OCT_NUMBER      reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    DEC_NUMBER      reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    HEX_NUMBER      reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)
    CS_BRACKET      reduce using rule 86 (expression -> LBRACKET expression RBRACKET .)


state 128

    (88) expression -> LBRACKET expression error .

    NEWLINE         reduce using rule 88 (expression -> LBRACKET expression error .)
    ASSIGNMENT      reduce using rule 88 (expression -> LBRACKET expression error .)
    OS_BRACKET      reduce using rule 88 (expression -> LBRACKET expression error .)
    PLUS            reduce using rule 88 (expression -> LBRACKET expression error .)
    MINUS           reduce using rule 88 (expression -> LBRACKET expression error .)
    MULTIPLY        reduce using rule 88 (expression -> LBRACKET expression error .)
    DIVIDE          reduce using rule 88 (expression -> LBRACKET expression error .)
    AND_OPERATOR    reduce using rule 88 (expression -> LBRACKET expression error .)
    RBRACKET        reduce using rule 88 (expression -> LBRACKET expression error .)
    error           reduce using rule 88 (expression -> LBRACKET expression error .)
    GET             reduce using rule 88 (expression -> LBRACKET expression error .)
    LBRACKET        reduce using rule 88 (expression -> LBRACKET expression error .)
    VARIABLE        reduce using rule 88 (expression -> LBRACKET expression error .)
    MXEQ_OPERATOR   reduce using rule 88 (expression -> LBRACKET expression error .)
    MXLT_OPERATOR   reduce using rule 88 (expression -> LBRACKET expression error .)
    MXGT_OPERATOR   reduce using rule 88 (expression -> LBRACKET expression error .)
    MXLTE_OPERATOR  reduce using rule 88 (expression -> LBRACKET expression error .)
    MXGTE_OPERATOR  reduce using rule 88 (expression -> LBRACKET expression error .)
    ELEQ_OPERATOR   reduce using rule 88 (expression -> LBRACKET expression error .)
    ELLT_OPERATOR   reduce using rule 88 (expression -> LBRACKET expression error .)
    ELGT_OPERATOR   reduce using rule 88 (expression -> LBRACKET expression error .)
    ELLTE_OPERATOR  reduce using rule 88 (expression -> LBRACKET expression error .)
    ELGTE_OPERATOR  reduce using rule 88 (expression -> LBRACKET expression error .)
    NOT_OPERATOR    reduce using rule 88 (expression -> LBRACKET expression error .)
    MXTRUE_OPERATOR reduce using rule 88 (expression -> LBRACKET expression error .)
    MXFALSE_OPERATOR reduce using rule 88 (expression -> LBRACKET expression error .)
    SIZE_OPERATOR   reduce using rule 88 (expression -> LBRACKET expression error .)
    LOGITIZE_OPERATOR reduce using rule 88 (expression -> LBRACKET expression error .)
    DIGITIZE_OPERATOR reduce using rule 88 (expression -> LBRACKET expression error .)
    DO              reduce using rule 88 (expression -> LBRACKET expression error .)
    REDUCE_OPERATOR reduce using rule 88 (expression -> LBRACKET expression error .)
    EXTEND_OPERATOR reduce using rule 88 (expression -> LBRACKET expression error .)
    OCT_NUMBER      reduce using rule 88 (expression -> LBRACKET expression error .)
    DEC_NUMBER      reduce using rule 88 (expression -> LBRACKET expression error .)
    HEX_NUMBER      reduce using rule 88 (expression -> LBRACKET expression error .)
    TRUE            reduce using rule 88 (expression -> LBRACKET expression error .)
    FALSE           reduce using rule 88 (expression -> LBRACKET expression error .)
    COMMA           reduce using rule 88 (expression -> LBRACKET expression error .)
    CS_BRACKET      reduce using rule 88 (expression -> LBRACKET expression error .)


state 129

    (33) for -> FOR VARIABLE BOUNDARY . VARIABLE STEP VARIABLE statements_group

    VARIABLE        shift and go to state 145


state 130

    (34) for -> FOR error NEWLINE .

    THANKS          reduce using rule 34 (for -> FOR error NEWLINE .)
    PLEASE          reduce using rule 34 (for -> FOR error NEWLINE .)
    VAR             reduce using rule 34 (for -> FOR error NEWLINE .)
    GET             reduce using rule 34 (for -> FOR error NEWLINE .)
    LBRACKET        reduce using rule 34 (for -> FOR error NEWLINE .)
    error           reduce using rule 34 (for -> FOR error NEWLINE .)
    VARIABLE        reduce using rule 34 (for -> FOR error NEWLINE .)
    FOR             reduce using rule 34 (for -> FOR error NEWLINE .)
    SWITCH          reduce using rule 34 (for -> FOR error NEWLINE .)
    MOVE            reduce using rule 34 (for -> FOR error NEWLINE .)
    ROTATE          reduce using rule 34 (for -> FOR error NEWLINE .)
    PRINT           reduce using rule 34 (for -> FOR error NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 34 (for -> FOR error NEWLINE .)
    MXLT_OPERATOR   reduce using rule 34 (for -> FOR error NEWLINE .)
    MXGT_OPERATOR   reduce using rule 34 (for -> FOR error NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 34 (for -> FOR error NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 34 (for -> FOR error NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 34 (for -> FOR error NEWLINE .)
    ELLT_OPERATOR   reduce using rule 34 (for -> FOR error NEWLINE .)
    ELGT_OPERATOR   reduce using rule 34 (for -> FOR error NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 34 (for -> FOR error NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 34 (for -> FOR error NEWLINE .)
    NOT_OPERATOR    reduce using rule 34 (for -> FOR error NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 34 (for -> FOR error NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 34 (for -> FOR error NEWLINE .)
    SIZE_OPERATOR   reduce using rule 34 (for -> FOR error NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 34 (for -> FOR error NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 34 (for -> FOR error NEWLINE .)
    DO              reduce using rule 34 (for -> FOR error NEWLINE .)
    REDUCE_OPERATOR reduce using rule 34 (for -> FOR error NEWLINE .)
    EXTEND_OPERATOR reduce using rule 34 (for -> FOR error NEWLINE .)
    OCT_NUMBER      reduce using rule 34 (for -> FOR error NEWLINE .)
    DEC_NUMBER      reduce using rule 34 (for -> FOR error NEWLINE .)
    HEX_NUMBER      reduce using rule 34 (for -> FOR error NEWLINE .)
    TRUE            reduce using rule 34 (for -> FOR error NEWLINE .)
    FALSE           reduce using rule 34 (for -> FOR error NEWLINE .)
    NEWLINE         reduce using rule 34 (for -> FOR error NEWLINE .)
    RESULT          reduce using rule 34 (for -> FOR error NEWLINE .)
    RBRACKET        reduce using rule 34 (for -> FOR error NEWLINE .)


state 131

    (38) switch -> SWITCH expression NEWLINE . TRUE statements_group FALSE statements_group
    (39) switch -> SWITCH expression NEWLINE . FALSE statements_group TRUE statements_group
    (40) switch -> SWITCH expression NEWLINE . TRUE statements_group
    (41) switch -> SWITCH expression NEWLINE . FALSE statements_group

    TRUE            shift and go to state 146
    FALSE           shift and go to state 147


state 132

    (42) switch -> SWITCH error NEWLINE .

    THANKS          reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    PLEASE          reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    VAR             reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    GET             reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    LBRACKET        reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    error           reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    VARIABLE        reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    FOR             reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    SWITCH          reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    MOVE            reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    ROTATE          reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    PRINT           reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    MXLT_OPERATOR   reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    MXGT_OPERATOR   reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    ELLT_OPERATOR   reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    ELGT_OPERATOR   reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    NOT_OPERATOR    reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    SIZE_OPERATOR   reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    DO              reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    REDUCE_OPERATOR reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    EXTEND_OPERATOR reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    OCT_NUMBER      reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    DEC_NUMBER      reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    HEX_NUMBER      reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    TRUE            reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    FALSE           reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    NEWLINE         reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    RESULT          reduce using rule 42 (switch -> SWITCH error NEWLINE .)
    RBRACKET        reduce using rule 42 (switch -> SWITCH error NEWLINE .)


state 133

    (26) print_word -> PRINT QUOTE VARIABLE . QUOTE

    QUOTE           shift and go to state 148


state 134

    (78) do -> DO VARIABLE call_parameters .

    NEWLINE         reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    ASSIGNMENT      reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    OS_BRACKET      reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    PLUS            reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    MINUS           reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    MULTIPLY        reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    DIVIDE          reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    AND_OPERATOR    reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    RBRACKET        reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    error           reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    GET             reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    LBRACKET        reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    VARIABLE        reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    MXEQ_OPERATOR   reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    MXLT_OPERATOR   reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    MXGT_OPERATOR   reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    MXLTE_OPERATOR  reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    MXGTE_OPERATOR  reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    ELEQ_OPERATOR   reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    ELLT_OPERATOR   reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    ELGT_OPERATOR   reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    ELLTE_OPERATOR  reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    ELGTE_OPERATOR  reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    NOT_OPERATOR    reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    MXTRUE_OPERATOR reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    MXFALSE_OPERATOR reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    SIZE_OPERATOR   reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    LOGITIZE_OPERATOR reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    DIGITIZE_OPERATOR reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    DO              reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    REDUCE_OPERATOR reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    EXTEND_OPERATOR reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    OCT_NUMBER      reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    DEC_NUMBER      reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    HEX_NUMBER      reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    TRUE            reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    FALSE           reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    COMMA           reduce using rule 78 (do -> DO VARIABLE call_parameters .)
    CS_BRACKET      reduce using rule 78 (do -> DO VARIABLE call_parameters .)


state 135

    (80) call_parameters -> call_parameter . call_parameters
    (81) call_parameters -> call_parameter .
    (80) call_parameters -> . call_parameter call_parameters
    (81) call_parameters -> . call_parameter
    (82) call_parameter -> . expression
    (83) call_parameter -> . error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for GET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for MXEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for NOT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXTRUE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXFALSE_OPERATOR resolved as shift
  ! shift/reduce conflict for SIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for LOGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DIGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for REDUCE_OPERATOR resolved as shift
  ! shift/reduce conflict for EXTEND_OPERATOR resolved as shift
  ! shift/reduce conflict for OCT_NUMBER resolved as shift
  ! shift/reduce conflict for DEC_NUMBER resolved as shift
  ! shift/reduce conflict for HEX_NUMBER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    ASSIGNMENT      reduce using rule 81 (call_parameters -> call_parameter .)
    OS_BRACKET      reduce using rule 81 (call_parameters -> call_parameter .)
    PLUS            reduce using rule 81 (call_parameters -> call_parameter .)
    MINUS           reduce using rule 81 (call_parameters -> call_parameter .)
    MULTIPLY        reduce using rule 81 (call_parameters -> call_parameter .)
    DIVIDE          reduce using rule 81 (call_parameters -> call_parameter .)
    AND_OPERATOR    reduce using rule 81 (call_parameters -> call_parameter .)
    NEWLINE         reduce using rule 81 (call_parameters -> call_parameter .)
    RBRACKET        reduce using rule 81 (call_parameters -> call_parameter .)
    COMMA           reduce using rule 81 (call_parameters -> call_parameter .)
    CS_BRACKET      reduce using rule 81 (call_parameters -> call_parameter .)
    error           shift and go to state 137
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

  ! error           [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! GET             [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! LBRACKET        [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! VARIABLE        [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! MXEQ_OPERATOR   [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! MXLT_OPERATOR   [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! MXGT_OPERATOR   [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! MXLTE_OPERATOR  [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! MXGTE_OPERATOR  [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! ELEQ_OPERATOR   [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! ELLT_OPERATOR   [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! ELGT_OPERATOR   [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! ELLTE_OPERATOR  [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! ELGTE_OPERATOR  [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! NOT_OPERATOR    [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! MXTRUE_OPERATOR [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! MXFALSE_OPERATOR [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! SIZE_OPERATOR   [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! LOGITIZE_OPERATOR [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! DIGITIZE_OPERATOR [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! DO              [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! REDUCE_OPERATOR [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! EXTEND_OPERATOR [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! OCT_NUMBER      [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! DEC_NUMBER      [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! HEX_NUMBER      [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! TRUE            [ reduce using rule 81 (call_parameters -> call_parameter .) ]
  ! FALSE           [ reduce using rule 81 (call_parameters -> call_parameter .) ]

    call_parameter                 shift and go to state 135
    call_parameters                shift and go to state 149
    expression                     shift and go to state 136
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 136

    (82) call_parameter -> expression .
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
  ! shift/reduce conflict for OS_BRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND_OPERATOR resolved as shift
    NEWLINE         reduce using rule 82 (call_parameter -> expression .)
    RBRACKET        reduce using rule 82 (call_parameter -> expression .)
    error           reduce using rule 82 (call_parameter -> expression .)
    GET             reduce using rule 82 (call_parameter -> expression .)
    LBRACKET        reduce using rule 82 (call_parameter -> expression .)
    VARIABLE        reduce using rule 82 (call_parameter -> expression .)
    MXEQ_OPERATOR   reduce using rule 82 (call_parameter -> expression .)
    MXLT_OPERATOR   reduce using rule 82 (call_parameter -> expression .)
    MXGT_OPERATOR   reduce using rule 82 (call_parameter -> expression .)
    MXLTE_OPERATOR  reduce using rule 82 (call_parameter -> expression .)
    MXGTE_OPERATOR  reduce using rule 82 (call_parameter -> expression .)
    ELEQ_OPERATOR   reduce using rule 82 (call_parameter -> expression .)
    ELLT_OPERATOR   reduce using rule 82 (call_parameter -> expression .)
    ELGT_OPERATOR   reduce using rule 82 (call_parameter -> expression .)
    ELLTE_OPERATOR  reduce using rule 82 (call_parameter -> expression .)
    ELGTE_OPERATOR  reduce using rule 82 (call_parameter -> expression .)
    NOT_OPERATOR    reduce using rule 82 (call_parameter -> expression .)
    MXTRUE_OPERATOR reduce using rule 82 (call_parameter -> expression .)
    MXFALSE_OPERATOR reduce using rule 82 (call_parameter -> expression .)
    SIZE_OPERATOR   reduce using rule 82 (call_parameter -> expression .)
    LOGITIZE_OPERATOR reduce using rule 82 (call_parameter -> expression .)
    DIGITIZE_OPERATOR reduce using rule 82 (call_parameter -> expression .)
    DO              reduce using rule 82 (call_parameter -> expression .)
    REDUCE_OPERATOR reduce using rule 82 (call_parameter -> expression .)
    EXTEND_OPERATOR reduce using rule 82 (call_parameter -> expression .)
    OCT_NUMBER      reduce using rule 82 (call_parameter -> expression .)
    DEC_NUMBER      reduce using rule 82 (call_parameter -> expression .)
    HEX_NUMBER      reduce using rule 82 (call_parameter -> expression .)
    TRUE            reduce using rule 82 (call_parameter -> expression .)
    FALSE           reduce using rule 82 (call_parameter -> expression .)
    COMMA           reduce using rule 82 (call_parameter -> expression .)
    CS_BRACKET      reduce using rule 82 (call_parameter -> expression .)
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

  ! ASSIGNMENT      [ reduce using rule 82 (call_parameter -> expression .) ]
  ! OS_BRACKET      [ reduce using rule 82 (call_parameter -> expression .) ]
  ! PLUS            [ reduce using rule 82 (call_parameter -> expression .) ]
  ! MINUS           [ reduce using rule 82 (call_parameter -> expression .) ]
  ! MULTIPLY        [ reduce using rule 82 (call_parameter -> expression .) ]
  ! DIVIDE          [ reduce using rule 82 (call_parameter -> expression .) ]
  ! AND_OPERATOR    [ reduce using rule 82 (call_parameter -> expression .) ]

    binary_operator                shift and go to state 79

state 137

    (83) call_parameter -> error .
    (87) expression -> error . expression RBRACKET
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

  ! shift/reduce conflict for GET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for MXEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for NOT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXTRUE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXFALSE_OPERATOR resolved as shift
  ! shift/reduce conflict for SIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for LOGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DIGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for REDUCE_OPERATOR resolved as shift
  ! shift/reduce conflict for EXTEND_OPERATOR resolved as shift
  ! shift/reduce conflict for OCT_NUMBER resolved as shift
  ! shift/reduce conflict for DEC_NUMBER resolved as shift
  ! shift/reduce conflict for HEX_NUMBER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    ASSIGNMENT      reduce using rule 83 (call_parameter -> error .)
    OS_BRACKET      reduce using rule 83 (call_parameter -> error .)
    PLUS            reduce using rule 83 (call_parameter -> error .)
    MINUS           reduce using rule 83 (call_parameter -> error .)
    MULTIPLY        reduce using rule 83 (call_parameter -> error .)
    DIVIDE          reduce using rule 83 (call_parameter -> error .)
    AND_OPERATOR    reduce using rule 83 (call_parameter -> error .)
    NEWLINE         reduce using rule 83 (call_parameter -> error .)
    RBRACKET        reduce using rule 83 (call_parameter -> error .)
    COMMA           reduce using rule 83 (call_parameter -> error .)
    CS_BRACKET      reduce using rule 83 (call_parameter -> error .)
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

  ! error           [ reduce using rule 83 (call_parameter -> error .) ]
  ! GET             [ reduce using rule 83 (call_parameter -> error .) ]
  ! LBRACKET        [ reduce using rule 83 (call_parameter -> error .) ]
  ! VARIABLE        [ reduce using rule 83 (call_parameter -> error .) ]
  ! MXEQ_OPERATOR   [ reduce using rule 83 (call_parameter -> error .) ]
  ! MXLT_OPERATOR   [ reduce using rule 83 (call_parameter -> error .) ]
  ! MXGT_OPERATOR   [ reduce using rule 83 (call_parameter -> error .) ]
  ! MXLTE_OPERATOR  [ reduce using rule 83 (call_parameter -> error .) ]
  ! MXGTE_OPERATOR  [ reduce using rule 83 (call_parameter -> error .) ]
  ! ELEQ_OPERATOR   [ reduce using rule 83 (call_parameter -> error .) ]
  ! ELLT_OPERATOR   [ reduce using rule 83 (call_parameter -> error .) ]
  ! ELGT_OPERATOR   [ reduce using rule 83 (call_parameter -> error .) ]
  ! ELLTE_OPERATOR  [ reduce using rule 83 (call_parameter -> error .) ]
  ! ELGTE_OPERATOR  [ reduce using rule 83 (call_parameter -> error .) ]
  ! NOT_OPERATOR    [ reduce using rule 83 (call_parameter -> error .) ]
  ! MXTRUE_OPERATOR [ reduce using rule 83 (call_parameter -> error .) ]
  ! MXFALSE_OPERATOR [ reduce using rule 83 (call_parameter -> error .) ]
  ! SIZE_OPERATOR   [ reduce using rule 83 (call_parameter -> error .) ]
  ! LOGITIZE_OPERATOR [ reduce using rule 83 (call_parameter -> error .) ]
  ! DIGITIZE_OPERATOR [ reduce using rule 83 (call_parameter -> error .) ]
  ! DO              [ reduce using rule 83 (call_parameter -> error .) ]
  ! REDUCE_OPERATOR [ reduce using rule 83 (call_parameter -> error .) ]
  ! EXTEND_OPERATOR [ reduce using rule 83 (call_parameter -> error .) ]
  ! OCT_NUMBER      [ reduce using rule 83 (call_parameter -> error .) ]
  ! DEC_NUMBER      [ reduce using rule 83 (call_parameter -> error .) ]
  ! HEX_NUMBER      [ reduce using rule 83 (call_parameter -> error .) ]
  ! TRUE            [ reduce using rule 83 (call_parameter -> error .) ]
  ! FALSE           [ reduce using rule 83 (call_parameter -> error .) ]

    expression                     shift and go to state 92
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 138

    (74) reduce -> REDUCE_OPERATOR expression dimensions .

    NEWLINE         reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ASSIGNMENT      reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    OS_BRACKET      reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    PLUS            reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MINUS           reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MULTIPLY        reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    DIVIDE          reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    AND_OPERATOR    reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    RBRACKET        reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    error           reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    GET             reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    LBRACKET        reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    VARIABLE        reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXEQ_OPERATOR   reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXLT_OPERATOR   reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXGT_OPERATOR   reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXLTE_OPERATOR  reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXGTE_OPERATOR  reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELEQ_OPERATOR   reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELLT_OPERATOR   reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELGT_OPERATOR   reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELLTE_OPERATOR  reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELGTE_OPERATOR  reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    NOT_OPERATOR    reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXTRUE_OPERATOR reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXFALSE_OPERATOR reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    SIZE_OPERATOR   reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    LOGITIZE_OPERATOR reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    DIGITIZE_OPERATOR reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    DO              reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    REDUCE_OPERATOR reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    EXTEND_OPERATOR reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    OCT_NUMBER      reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    DEC_NUMBER      reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    HEX_NUMBER      reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    TRUE            reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    FALSE           reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    COMMA           reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)
    CS_BRACKET      reduce using rule 74 (reduce -> REDUCE_OPERATOR expression dimensions .)


state 139

    (76) extend -> EXTEND_OPERATOR expression dimensions .

    NEWLINE         reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    ASSIGNMENT      reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    OS_BRACKET      reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    PLUS            reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    MINUS           reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    MULTIPLY        reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    DIVIDE          reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    AND_OPERATOR    reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    RBRACKET        reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    error           reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    GET             reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    LBRACKET        reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    VARIABLE        reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXEQ_OPERATOR   reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXLT_OPERATOR   reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXGT_OPERATOR   reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXLTE_OPERATOR  reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXGTE_OPERATOR  reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELEQ_OPERATOR   reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELLT_OPERATOR   reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELGT_OPERATOR   reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELLTE_OPERATOR  reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELGTE_OPERATOR  reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    NOT_OPERATOR    reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXTRUE_OPERATOR reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXFALSE_OPERATOR reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    SIZE_OPERATOR   reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    LOGITIZE_OPERATOR reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    DIGITIZE_OPERATOR reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    DO              reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    REDUCE_OPERATOR reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    EXTEND_OPERATOR reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    OCT_NUMBER      reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    DEC_NUMBER      reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    HEX_NUMBER      reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    TRUE            reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    FALSE           reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    COMMA           reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)
    CS_BRACKET      reduce using rule 76 (extend -> EXTEND_OPERATOR expression dimensions .)


state 140

    (16) statement -> PLEASE statement THANKS NEWLINE .
    (28) statement -> statement THANKS NEWLINE .

  ! reduce/reduce conflict for THANKS resolved using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    THANKS          reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    PLEASE          reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    VAR             reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    GET             reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    LBRACKET        reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    error           reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    VARIABLE        reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    FOR             reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    SWITCH          reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    MOVE            reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    ROTATE          reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    PRINT           reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    MXLT_OPERATOR   reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    MXGT_OPERATOR   reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    ELLT_OPERATOR   reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    ELGT_OPERATOR   reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    NOT_OPERATOR    reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    SIZE_OPERATOR   reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    DO              reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    REDUCE_OPERATOR reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    EXTEND_OPERATOR reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    OCT_NUMBER      reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    DEC_NUMBER      reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    HEX_NUMBER      reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    TRUE            reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    FALSE           reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    NEWLINE         reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    RESULT          reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)
    RBRACKET        reduce using rule 16 (statement -> PLEASE statement THANKS NEWLINE .)

  ! THANKS          [ reduce using rule 28 (statement -> statement THANKS NEWLINE .) ]
  ! NEWLINE         [ reduce using rule 28 (statement -> statement THANKS NEWLINE .) ]


state 141

    (101) indexing -> expression OS_BRACKET dimensions CS_BRACKET .

    NEWLINE         reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ASSIGNMENT      reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    OS_BRACKET      reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    PLUS            reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MINUS           reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MULTIPLY        reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    DIVIDE          reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    AND_OPERATOR    reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    RBRACKET        reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    error           reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    GET             reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    LBRACKET        reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    VARIABLE        reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXEQ_OPERATOR   reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXLT_OPERATOR   reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXGT_OPERATOR   reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXLTE_OPERATOR  reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXGTE_OPERATOR  reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELEQ_OPERATOR   reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELLT_OPERATOR   reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELGT_OPERATOR   reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELLTE_OPERATOR  reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELGTE_OPERATOR  reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    NOT_OPERATOR    reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXTRUE_OPERATOR reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXFALSE_OPERATOR reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    SIZE_OPERATOR   reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    LOGITIZE_OPERATOR reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    DIGITIZE_OPERATOR reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    DO              reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    REDUCE_OPERATOR reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    EXTEND_OPERATOR reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    OCT_NUMBER      reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    DEC_NUMBER      reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    HEX_NUMBER      reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    TRUE            reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    FALSE           reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    COMMA           reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    CS_BRACKET      reduce using rule 101 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)


state 142

    (102) dimensions -> dimension COMMA . dimensions
    (102) dimensions -> . dimension COMMA dimensions
    (103) dimensions -> . dimension
    (104) dimension -> . expression
    (105) dimension -> . error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    error           shift and go to state 123
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    dimension                      shift and go to state 122
    dimensions                     shift and go to state 150
    expression                     shift and go to state 120
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 143

    (98) var_declaration -> VAR VARIABLE OS_BRACKET dimensions . CS_BRACKET ASSIGNMENT initializer

    CS_BRACKET      shift and go to state 151


state 144

    (99) var_declaration -> VAR VARIABLE ASSIGNMENT expression .
    (43) expression -> expression . binary_operator expression
    (73) assignment -> expression . ASSIGNMENT expression
    (101) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (44) binary_operator -> . PLUS
    (45) binary_operator -> . MINUS
    (46) binary_operator -> . MULTIPLY
    (47) binary_operator -> . DIVIDE
    (48) binary_operator -> . AND_OPERATOR

    NEWLINE         reduce using rule 99 (var_declaration -> VAR VARIABLE ASSIGNMENT expression .)
    ASSIGNMENT      shift and go to state 80
    OS_BRACKET      shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    MULTIPLY        shift and go to state 84
    DIVIDE          shift and go to state 85
    AND_OPERATOR    shift and go to state 86

    binary_operator                shift and go to state 79

state 145

    (33) for -> FOR VARIABLE BOUNDARY VARIABLE . STEP VARIABLE statements_group

    STEP            shift and go to state 152


state 146

    (38) switch -> SWITCH expression NEWLINE TRUE . statements_group FALSE statements_group
    (40) switch -> SWITCH expression NEWLINE TRUE . statements_group
    (35) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (36) statements_group -> . statement
    (37) statements_group -> . LBRACKET RBRACKET NEWLINE
    (16) statement -> . PLEASE statement THANKS NEWLINE
    (17) statement -> . PLEASE statement NEWLINE
    (18) statement -> . var_declaration NEWLINE
    (19) statement -> . expression NEWLINE
    (20) statement -> . for
    (21) statement -> . switch
    (22) statement -> . command NEWLINE
    (23) statement -> . print NEWLINE
    (24) statement -> . print_word NEWLINE
    (25) statement -> . empty NEWLINE
    (28) statement -> . statement THANKS NEWLINE
    (98) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (100) var_declaration -> . VAR error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (33) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> . FOR error NEWLINE
    (38) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> . SWITCH expression NEWLINE TRUE statements_group
    (41) switch -> . SWITCH expression NEWLINE FALSE statements_group
    (42) switch -> . SWITCH error NEWLINE
    (29) command -> . MOVE
    (30) command -> . ROTATE LEFT
    (31) command -> . ROTATE RIGHT
    (27) print -> . PRINT expression
    (26) print_word -> . PRINT QUOTE VARIABLE QUOTE
    (106) empty -> .
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    LBRACKET        shift and go to state 154
    PLEASE          shift and go to state 14
    VAR             shift and go to state 22
    GET             shift and go to state 25
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    FOR             shift and go to state 35
    SWITCH          shift and go to state 36
    MOVE            shift and go to state 39
    ROTATE          shift and go to state 40
    PRINT           shift and go to state 41
    NEWLINE         reduce using rule 106 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 16
    statements_group               shift and go to state 153
    statement                      shift and go to state 155
    var_declaration                shift and go to state 15
    for                            shift and go to state 17
    switch                         shift and go to state 18
    command                        shift and go to state 19
    print                          shift and go to state 20
    print_word                     shift and go to state 21
    empty                          shift and go to state 75
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 147

    (39) switch -> SWITCH expression NEWLINE FALSE . statements_group TRUE statements_group
    (41) switch -> SWITCH expression NEWLINE FALSE . statements_group
    (35) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (36) statements_group -> . statement
    (37) statements_group -> . LBRACKET RBRACKET NEWLINE
    (16) statement -> . PLEASE statement THANKS NEWLINE
    (17) statement -> . PLEASE statement NEWLINE
    (18) statement -> . var_declaration NEWLINE
    (19) statement -> . expression NEWLINE
    (20) statement -> . for
    (21) statement -> . switch
    (22) statement -> . command NEWLINE
    (23) statement -> . print NEWLINE
    (24) statement -> . print_word NEWLINE
    (25) statement -> . empty NEWLINE
    (28) statement -> . statement THANKS NEWLINE
    (98) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (100) var_declaration -> . VAR error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (33) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> . FOR error NEWLINE
    (38) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> . SWITCH expression NEWLINE TRUE statements_group
    (41) switch -> . SWITCH expression NEWLINE FALSE statements_group
    (42) switch -> . SWITCH error NEWLINE
    (29) command -> . MOVE
    (30) command -> . ROTATE LEFT
    (31) command -> . ROTATE RIGHT
    (27) print -> . PRINT expression
    (26) print_word -> . PRINT QUOTE VARIABLE QUOTE
    (106) empty -> .
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    LBRACKET        shift and go to state 154
    PLEASE          shift and go to state 14
    VAR             shift and go to state 22
    GET             shift and go to state 25
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    FOR             shift and go to state 35
    SWITCH          shift and go to state 36
    MOVE            shift and go to state 39
    ROTATE          shift and go to state 40
    PRINT           shift and go to state 41
    NEWLINE         reduce using rule 106 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 16
    statements_group               shift and go to state 156
    statement                      shift and go to state 155
    var_declaration                shift and go to state 15
    for                            shift and go to state 17
    switch                         shift and go to state 18
    command                        shift and go to state 19
    print                          shift and go to state 20
    print_word                     shift and go to state 21
    empty                          shift and go to state 75
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 148

    (26) print_word -> PRINT QUOTE VARIABLE QUOTE .

    NEWLINE         reduce using rule 26 (print_word -> PRINT QUOTE VARIABLE QUOTE .)


state 149

    (80) call_parameters -> call_parameter call_parameters .

    ASSIGNMENT      reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    OS_BRACKET      reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    PLUS            reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    MINUS           reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    MULTIPLY        reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    DIVIDE          reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    AND_OPERATOR    reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    NEWLINE         reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    RBRACKET        reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    error           reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    GET             reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    LBRACKET        reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    VARIABLE        reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    MXEQ_OPERATOR   reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    MXLT_OPERATOR   reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    MXGT_OPERATOR   reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    MXLTE_OPERATOR  reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    MXGTE_OPERATOR  reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    ELEQ_OPERATOR   reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    ELLT_OPERATOR   reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    ELGT_OPERATOR   reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    ELLTE_OPERATOR  reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    ELGTE_OPERATOR  reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    NOT_OPERATOR    reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    MXTRUE_OPERATOR reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    MXFALSE_OPERATOR reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    SIZE_OPERATOR   reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    LOGITIZE_OPERATOR reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    DIGITIZE_OPERATOR reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    DO              reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    REDUCE_OPERATOR reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    EXTEND_OPERATOR reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    OCT_NUMBER      reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    DEC_NUMBER      reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    HEX_NUMBER      reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    TRUE            reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    FALSE           reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    COMMA           reduce using rule 80 (call_parameters -> call_parameter call_parameters .)
    CS_BRACKET      reduce using rule 80 (call_parameters -> call_parameter call_parameters .)


state 150

    (102) dimensions -> dimension COMMA dimensions .

    CS_BRACKET      reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    ASSIGNMENT      reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    OS_BRACKET      reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    PLUS            reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    MINUS           reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    MULTIPLY        reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    DIVIDE          reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    AND_OPERATOR    reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    NEWLINE         reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    RBRACKET        reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    error           reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    GET             reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    LBRACKET        reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    VARIABLE        reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    MXEQ_OPERATOR   reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    MXLT_OPERATOR   reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    MXGT_OPERATOR   reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    MXLTE_OPERATOR  reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    MXGTE_OPERATOR  reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    ELEQ_OPERATOR   reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    ELLT_OPERATOR   reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    ELGT_OPERATOR   reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    ELLTE_OPERATOR  reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    ELGTE_OPERATOR  reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    NOT_OPERATOR    reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    MXTRUE_OPERATOR reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    MXFALSE_OPERATOR reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    SIZE_OPERATOR   reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    LOGITIZE_OPERATOR reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    DIGITIZE_OPERATOR reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    DO              reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    REDUCE_OPERATOR reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    EXTEND_OPERATOR reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    OCT_NUMBER      reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    DEC_NUMBER      reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    HEX_NUMBER      reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    TRUE            reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    FALSE           reduce using rule 102 (dimensions -> dimension COMMA dimensions .)
    COMMA           reduce using rule 102 (dimensions -> dimension COMMA dimensions .)


state 151

    (98) var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET . ASSIGNMENT initializer

    ASSIGNMENT      shift and go to state 157


state 152

    (33) for -> FOR VARIABLE BOUNDARY VARIABLE STEP . VARIABLE statements_group

    VARIABLE        shift and go to state 158


state 153

    (38) switch -> SWITCH expression NEWLINE TRUE statements_group . FALSE statements_group
    (40) switch -> SWITCH expression NEWLINE TRUE statements_group .

  ! shift/reduce conflict for FALSE resolved as shift
    FALSE           shift and go to state 159
    THANKS          reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    PLEASE          reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    VAR             reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    GET             reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    LBRACKET        reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    error           reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    VARIABLE        reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    FOR             reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    SWITCH          reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    MOVE            reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    ROTATE          reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    PRINT           reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    MXEQ_OPERATOR   reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    MXLT_OPERATOR   reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    MXGT_OPERATOR   reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    MXLTE_OPERATOR  reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    MXGTE_OPERATOR  reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    ELEQ_OPERATOR   reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    ELLT_OPERATOR   reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    ELGT_OPERATOR   reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    ELLTE_OPERATOR  reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    ELGTE_OPERATOR  reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    NOT_OPERATOR    reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    MXTRUE_OPERATOR reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    MXFALSE_OPERATOR reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    SIZE_OPERATOR   reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    LOGITIZE_OPERATOR reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    DIGITIZE_OPERATOR reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    DO              reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    REDUCE_OPERATOR reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    EXTEND_OPERATOR reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    OCT_NUMBER      reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    DEC_NUMBER      reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    HEX_NUMBER      reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    TRUE            reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    NEWLINE         reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    RESULT          reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)
    RBRACKET        reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .)

  ! FALSE           [ reduce using rule 40 (switch -> SWITCH expression NEWLINE TRUE statements_group .) ]


state 154

    (35) statements_group -> LBRACKET . NEWLINE statements RBRACKET NEWLINE
    (37) statements_group -> LBRACKET . RBRACKET NEWLINE
    (86) expression -> LBRACKET . expression RBRACKET
    (88) expression -> LBRACKET . expression error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    NEWLINE         shift and go to state 160
    RBRACKET        shift and go to state 161
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 97
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 155

    (36) statements_group -> statement .
    (28) statement -> statement . THANKS NEWLINE

  ! shift/reduce conflict for THANKS resolved as shift
    FALSE           reduce using rule 36 (statements_group -> statement .)
    PLEASE          reduce using rule 36 (statements_group -> statement .)
    VAR             reduce using rule 36 (statements_group -> statement .)
    GET             reduce using rule 36 (statements_group -> statement .)
    LBRACKET        reduce using rule 36 (statements_group -> statement .)
    error           reduce using rule 36 (statements_group -> statement .)
    VARIABLE        reduce using rule 36 (statements_group -> statement .)
    FOR             reduce using rule 36 (statements_group -> statement .)
    SWITCH          reduce using rule 36 (statements_group -> statement .)
    MOVE            reduce using rule 36 (statements_group -> statement .)
    ROTATE          reduce using rule 36 (statements_group -> statement .)
    PRINT           reduce using rule 36 (statements_group -> statement .)
    MXEQ_OPERATOR   reduce using rule 36 (statements_group -> statement .)
    MXLT_OPERATOR   reduce using rule 36 (statements_group -> statement .)
    MXGT_OPERATOR   reduce using rule 36 (statements_group -> statement .)
    MXLTE_OPERATOR  reduce using rule 36 (statements_group -> statement .)
    MXGTE_OPERATOR  reduce using rule 36 (statements_group -> statement .)
    ELEQ_OPERATOR   reduce using rule 36 (statements_group -> statement .)
    ELLT_OPERATOR   reduce using rule 36 (statements_group -> statement .)
    ELGT_OPERATOR   reduce using rule 36 (statements_group -> statement .)
    ELLTE_OPERATOR  reduce using rule 36 (statements_group -> statement .)
    ELGTE_OPERATOR  reduce using rule 36 (statements_group -> statement .)
    NOT_OPERATOR    reduce using rule 36 (statements_group -> statement .)
    MXTRUE_OPERATOR reduce using rule 36 (statements_group -> statement .)
    MXFALSE_OPERATOR reduce using rule 36 (statements_group -> statement .)
    SIZE_OPERATOR   reduce using rule 36 (statements_group -> statement .)
    LOGITIZE_OPERATOR reduce using rule 36 (statements_group -> statement .)
    DIGITIZE_OPERATOR reduce using rule 36 (statements_group -> statement .)
    DO              reduce using rule 36 (statements_group -> statement .)
    REDUCE_OPERATOR reduce using rule 36 (statements_group -> statement .)
    EXTEND_OPERATOR reduce using rule 36 (statements_group -> statement .)
    OCT_NUMBER      reduce using rule 36 (statements_group -> statement .)
    DEC_NUMBER      reduce using rule 36 (statements_group -> statement .)
    HEX_NUMBER      reduce using rule 36 (statements_group -> statement .)
    TRUE            reduce using rule 36 (statements_group -> statement .)
    NEWLINE         reduce using rule 36 (statements_group -> statement .)
    RESULT          reduce using rule 36 (statements_group -> statement .)
    RBRACKET        reduce using rule 36 (statements_group -> statement .)
    THANKS          shift and go to state 74

  ! THANKS          [ reduce using rule 36 (statements_group -> statement .) ]


state 156

    (39) switch -> SWITCH expression NEWLINE FALSE statements_group . TRUE statements_group
    (41) switch -> SWITCH expression NEWLINE FALSE statements_group .

  ! shift/reduce conflict for TRUE resolved as shift
    TRUE            shift and go to state 162
    THANKS          reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    PLEASE          reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    VAR             reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    GET             reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    LBRACKET        reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    error           reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    VARIABLE        reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    FOR             reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    SWITCH          reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    MOVE            reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    ROTATE          reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    PRINT           reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    MXEQ_OPERATOR   reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    MXLT_OPERATOR   reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    MXGT_OPERATOR   reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    MXLTE_OPERATOR  reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    MXGTE_OPERATOR  reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    ELEQ_OPERATOR   reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    ELLT_OPERATOR   reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    ELGT_OPERATOR   reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    ELLTE_OPERATOR  reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    ELGTE_OPERATOR  reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    NOT_OPERATOR    reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    MXTRUE_OPERATOR reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    MXFALSE_OPERATOR reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    SIZE_OPERATOR   reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    LOGITIZE_OPERATOR reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    DIGITIZE_OPERATOR reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    DO              reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    REDUCE_OPERATOR reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    EXTEND_OPERATOR reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    OCT_NUMBER      reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    DEC_NUMBER      reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    HEX_NUMBER      reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    FALSE           reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    NEWLINE         reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    RESULT          reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)
    RBRACKET        reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .)

  ! TRUE            [ reduce using rule 41 (switch -> SWITCH expression NEWLINE FALSE statements_group .) ]


state 157

    (98) var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT . initializer
    (97) initializer -> . base_values
    (95) base_values -> . number
    (96) base_values -> . boolean
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    initializer                    shift and go to state 163
    base_values                    shift and go to state 164
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 158

    (33) for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE . statements_group
    (35) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (36) statements_group -> . statement
    (37) statements_group -> . LBRACKET RBRACKET NEWLINE
    (16) statement -> . PLEASE statement THANKS NEWLINE
    (17) statement -> . PLEASE statement NEWLINE
    (18) statement -> . var_declaration NEWLINE
    (19) statement -> . expression NEWLINE
    (20) statement -> . for
    (21) statement -> . switch
    (22) statement -> . command NEWLINE
    (23) statement -> . print NEWLINE
    (24) statement -> . print_word NEWLINE
    (25) statement -> . empty NEWLINE
    (28) statement -> . statement THANKS NEWLINE
    (98) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (100) var_declaration -> . VAR error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (33) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> . FOR error NEWLINE
    (38) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> . SWITCH expression NEWLINE TRUE statements_group
    (41) switch -> . SWITCH expression NEWLINE FALSE statements_group
    (42) switch -> . SWITCH error NEWLINE
    (29) command -> . MOVE
    (30) command -> . ROTATE LEFT
    (31) command -> . ROTATE RIGHT
    (27) print -> . PRINT expression
    (26) print_word -> . PRINT QUOTE VARIABLE QUOTE
    (106) empty -> .
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    LBRACKET        shift and go to state 154
    PLEASE          shift and go to state 14
    VAR             shift and go to state 22
    GET             shift and go to state 25
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    FOR             shift and go to state 35
    SWITCH          shift and go to state 36
    MOVE            shift and go to state 39
    ROTATE          shift and go to state 40
    PRINT           shift and go to state 41
    NEWLINE         reduce using rule 106 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    statements_group               shift and go to state 165
    statement                      shift and go to state 155
    var_declaration                shift and go to state 15
    expression                     shift and go to state 16
    for                            shift and go to state 17
    switch                         shift and go to state 18
    command                        shift and go to state 19
    print                          shift and go to state 20
    print_word                     shift and go to state 21
    empty                          shift and go to state 75
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 159

    (38) switch -> SWITCH expression NEWLINE TRUE statements_group FALSE . statements_group
    (35) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (36) statements_group -> . statement
    (37) statements_group -> . LBRACKET RBRACKET NEWLINE
    (16) statement -> . PLEASE statement THANKS NEWLINE
    (17) statement -> . PLEASE statement NEWLINE
    (18) statement -> . var_declaration NEWLINE
    (19) statement -> . expression NEWLINE
    (20) statement -> . for
    (21) statement -> . switch
    (22) statement -> . command NEWLINE
    (23) statement -> . print NEWLINE
    (24) statement -> . print_word NEWLINE
    (25) statement -> . empty NEWLINE
    (28) statement -> . statement THANKS NEWLINE
    (98) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (100) var_declaration -> . VAR error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (33) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> . FOR error NEWLINE
    (38) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> . SWITCH expression NEWLINE TRUE statements_group
    (41) switch -> . SWITCH expression NEWLINE FALSE statements_group
    (42) switch -> . SWITCH error NEWLINE
    (29) command -> . MOVE
    (30) command -> . ROTATE LEFT
    (31) command -> . ROTATE RIGHT
    (27) print -> . PRINT expression
    (26) print_word -> . PRINT QUOTE VARIABLE QUOTE
    (106) empty -> .
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    LBRACKET        shift and go to state 154
    PLEASE          shift and go to state 14
    VAR             shift and go to state 22
    GET             shift and go to state 25
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    FOR             shift and go to state 35
    SWITCH          shift and go to state 36
    MOVE            shift and go to state 39
    ROTATE          shift and go to state 40
    PRINT           shift and go to state 41
    NEWLINE         reduce using rule 106 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 16
    statements_group               shift and go to state 166
    statement                      shift and go to state 155
    var_declaration                shift and go to state 15
    for                            shift and go to state 17
    switch                         shift and go to state 18
    command                        shift and go to state 19
    print                          shift and go to state 20
    print_word                     shift and go to state 21
    empty                          shift and go to state 75
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 160

    (35) statements_group -> LBRACKET NEWLINE . statements RBRACKET NEWLINE
    (14) statements -> . statement statements
    (15) statements -> . statement
    (16) statement -> . PLEASE statement THANKS NEWLINE
    (17) statement -> . PLEASE statement NEWLINE
    (18) statement -> . var_declaration NEWLINE
    (19) statement -> . expression NEWLINE
    (20) statement -> . for
    (21) statement -> . switch
    (22) statement -> . command NEWLINE
    (23) statement -> . print NEWLINE
    (24) statement -> . print_word NEWLINE
    (25) statement -> . empty NEWLINE
    (28) statement -> . statement THANKS NEWLINE
    (98) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (100) var_declaration -> . VAR error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (33) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> . FOR error NEWLINE
    (38) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> . SWITCH expression NEWLINE TRUE statements_group
    (41) switch -> . SWITCH expression NEWLINE FALSE statements_group
    (42) switch -> . SWITCH error NEWLINE
    (29) command -> . MOVE
    (30) command -> . ROTATE LEFT
    (31) command -> . ROTATE RIGHT
    (27) print -> . PRINT expression
    (26) print_word -> . PRINT QUOTE VARIABLE QUOTE
    (106) empty -> .
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    PLEASE          shift and go to state 14
    VAR             shift and go to state 22
    GET             shift and go to state 25
    LBRACKET        shift and go to state 34
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    FOR             shift and go to state 35
    SWITCH          shift and go to state 36
    MOVE            shift and go to state 39
    ROTATE          shift and go to state 40
    PRINT           shift and go to state 41
    NEWLINE         reduce using rule 106 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    statements                     shift and go to state 167
    statement                      shift and go to state 13
    var_declaration                shift and go to state 15
    expression                     shift and go to state 16
    for                            shift and go to state 17
    switch                         shift and go to state 18
    command                        shift and go to state 19
    print                          shift and go to state 20
    print_word                     shift and go to state 21
    empty                          shift and go to state 75
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 161

    (37) statements_group -> LBRACKET RBRACKET . NEWLINE

    NEWLINE         shift and go to state 168


state 162

    (39) switch -> SWITCH expression NEWLINE FALSE statements_group TRUE . statements_group
    (35) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (36) statements_group -> . statement
    (37) statements_group -> . LBRACKET RBRACKET NEWLINE
    (16) statement -> . PLEASE statement THANKS NEWLINE
    (17) statement -> . PLEASE statement NEWLINE
    (18) statement -> . var_declaration NEWLINE
    (19) statement -> . expression NEWLINE
    (20) statement -> . for
    (21) statement -> . switch
    (22) statement -> . command NEWLINE
    (23) statement -> . print NEWLINE
    (24) statement -> . print_word NEWLINE
    (25) statement -> . empty NEWLINE
    (28) statement -> . statement THANKS NEWLINE
    (98) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (99) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (100) var_declaration -> . VAR error
    (32) expression -> . GET ENVIRONMENT
    (43) expression -> . expression binary_operator expression
    (49) expression -> . unary_operator expression
    (66) expression -> . base_values
    (67) expression -> . assignment
    (68) expression -> . indexing
    (69) expression -> . do
    (70) expression -> . get
    (71) expression -> . reduce
    (72) expression -> . extend
    (86) expression -> . LBRACKET expression RBRACKET
    (87) expression -> . error expression RBRACKET
    (88) expression -> . LBRACKET expression error
    (89) expression -> . VARIABLE
    (33) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (34) for -> . FOR error NEWLINE
    (38) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (39) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (40) switch -> . SWITCH expression NEWLINE TRUE statements_group
    (41) switch -> . SWITCH expression NEWLINE FALSE statements_group
    (42) switch -> . SWITCH error NEWLINE
    (29) command -> . MOVE
    (30) command -> . ROTATE LEFT
    (31) command -> . ROTATE RIGHT
    (27) print -> . PRINT expression
    (26) print_word -> . PRINT QUOTE VARIABLE QUOTE
    (106) empty -> .
    (50) unary_operator -> . MXEQ_OPERATOR
    (51) unary_operator -> . MXLT_OPERATOR
    (52) unary_operator -> . MXGT_OPERATOR
    (53) unary_operator -> . MXLTE_OPERATOR
    (54) unary_operator -> . MXGTE_OPERATOR
    (55) unary_operator -> . ELEQ_OPERATOR
    (56) unary_operator -> . ELLT_OPERATOR
    (57) unary_operator -> . ELGT_OPERATOR
    (58) unary_operator -> . ELLTE_OPERATOR
    (59) unary_operator -> . ELGTE_OPERATOR
    (60) unary_operator -> . NOT_OPERATOR
    (61) unary_operator -> . MXTRUE_OPERATOR
    (62) unary_operator -> . MXFALSE_OPERATOR
    (63) unary_operator -> . SIZE_OPERATOR
    (64) unary_operator -> . LOGITIZE_OPERATOR
    (65) unary_operator -> . DIGITIZE_OPERATOR
    (95) base_values -> . number
    (96) base_values -> . boolean
    (73) assignment -> . expression ASSIGNMENT expression
    (101) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (78) do -> . DO VARIABLE call_parameters
    (79) do -> . DO error
    (84) get -> . GET VARIABLE
    (85) get -> . GET error
    (74) reduce -> . REDUCE_OPERATOR expression dimensions
    (75) reduce -> . REDUCE_OPERATOR error
    (76) extend -> . EXTEND_OPERATOR expression dimensions
    (77) extend -> . EXTEND_OPERATOR error
    (90) number -> . OCT_NUMBER
    (91) number -> . DEC_NUMBER
    (92) number -> . HEX_NUMBER
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    LBRACKET        shift and go to state 154
    PLEASE          shift and go to state 14
    VAR             shift and go to state 22
    GET             shift and go to state 25
    error           shift and go to state 24
    VARIABLE        shift and go to state 23
    FOR             shift and go to state 35
    SWITCH          shift and go to state 36
    MOVE            shift and go to state 39
    ROTATE          shift and go to state 40
    PRINT           shift and go to state 41
    NEWLINE         reduce using rule 106 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 42
    MXLT_OPERATOR   shift and go to state 43
    MXGT_OPERATOR   shift and go to state 44
    MXLTE_OPERATOR  shift and go to state 45
    MXGTE_OPERATOR  shift and go to state 46
    ELEQ_OPERATOR   shift and go to state 47
    ELLT_OPERATOR   shift and go to state 48
    ELGT_OPERATOR   shift and go to state 49
    ELLTE_OPERATOR  shift and go to state 50
    ELGTE_OPERATOR  shift and go to state 51
    NOT_OPERATOR    shift and go to state 52
    MXTRUE_OPERATOR shift and go to state 53
    MXFALSE_OPERATOR shift and go to state 54
    SIZE_OPERATOR   shift and go to state 55
    LOGITIZE_OPERATOR shift and go to state 56
    DIGITIZE_OPERATOR shift and go to state 57
    DO              shift and go to state 60
    REDUCE_OPERATOR shift and go to state 61
    EXTEND_OPERATOR shift and go to state 62
    OCT_NUMBER      shift and go to state 63
    DEC_NUMBER      shift and go to state 64
    HEX_NUMBER      shift and go to state 65
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 16
    statements_group               shift and go to state 169
    statement                      shift and go to state 155
    var_declaration                shift and go to state 15
    for                            shift and go to state 17
    switch                         shift and go to state 18
    command                        shift and go to state 19
    print                          shift and go to state 20
    print_word                     shift and go to state 21
    empty                          shift and go to state 75
    unary_operator                 shift and go to state 26
    base_values                    shift and go to state 27
    assignment                     shift and go to state 28
    indexing                       shift and go to state 29
    do                             shift and go to state 30
    get                            shift and go to state 31
    reduce                         shift and go to state 32
    extend                         shift and go to state 33
    number                         shift and go to state 58
    boolean                        shift and go to state 59

state 163

    (98) var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer .

    NEWLINE         reduce using rule 98 (var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer .)


state 164

    (97) initializer -> base_values .

    NEWLINE         reduce using rule 97 (initializer -> base_values .)


state 165

    (33) for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .

    THANKS          reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    PLEASE          reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    VAR             reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    GET             reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    LBRACKET        reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    error           reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    VARIABLE        reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    FOR             reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    SWITCH          reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MOVE            reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ROTATE          reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    PRINT           reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXEQ_OPERATOR   reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXLT_OPERATOR   reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXGT_OPERATOR   reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXLTE_OPERATOR  reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXGTE_OPERATOR  reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELEQ_OPERATOR   reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELLT_OPERATOR   reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELGT_OPERATOR   reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELLTE_OPERATOR  reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELGTE_OPERATOR  reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    NOT_OPERATOR    reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXTRUE_OPERATOR reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXFALSE_OPERATOR reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    SIZE_OPERATOR   reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    LOGITIZE_OPERATOR reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    DIGITIZE_OPERATOR reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    DO              reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    REDUCE_OPERATOR reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    EXTEND_OPERATOR reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    OCT_NUMBER      reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    DEC_NUMBER      reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    HEX_NUMBER      reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    TRUE            reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    FALSE           reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    NEWLINE         reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    RESULT          reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    RBRACKET        reduce using rule 33 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)


state 166

    (38) switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .

    THANKS          reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    PLEASE          reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    VAR             reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    GET             reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    LBRACKET        reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    error           reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    VARIABLE        reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    FOR             reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    SWITCH          reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MOVE            reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ROTATE          reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    PRINT           reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXEQ_OPERATOR   reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXLT_OPERATOR   reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXGT_OPERATOR   reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXLTE_OPERATOR  reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXGTE_OPERATOR  reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELEQ_OPERATOR   reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELLT_OPERATOR   reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELGT_OPERATOR   reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELLTE_OPERATOR  reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELGTE_OPERATOR  reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    NOT_OPERATOR    reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXTRUE_OPERATOR reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXFALSE_OPERATOR reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    SIZE_OPERATOR   reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    LOGITIZE_OPERATOR reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    DIGITIZE_OPERATOR reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    DO              reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    REDUCE_OPERATOR reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    EXTEND_OPERATOR reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    OCT_NUMBER      reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    DEC_NUMBER      reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    HEX_NUMBER      reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    TRUE            reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    FALSE           reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    NEWLINE         reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    RESULT          reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    RBRACKET        reduce using rule 38 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)


state 167

    (35) statements_group -> LBRACKET NEWLINE statements . RBRACKET NEWLINE

    RBRACKET        shift and go to state 170


state 168

    (37) statements_group -> LBRACKET RBRACKET NEWLINE .

    FALSE           reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    THANKS          reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    PLEASE          reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    VAR             reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    GET             reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    LBRACKET        reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    error           reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    VARIABLE        reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    FOR             reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    SWITCH          reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MOVE            reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ROTATE          reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    PRINT           reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXLT_OPERATOR   reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXGT_OPERATOR   reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELLT_OPERATOR   reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELGT_OPERATOR   reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    NOT_OPERATOR    reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    SIZE_OPERATOR   reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    DO              reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    REDUCE_OPERATOR reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    EXTEND_OPERATOR reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    OCT_NUMBER      reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    DEC_NUMBER      reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    HEX_NUMBER      reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    TRUE            reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    NEWLINE         reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    RESULT          reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    RBRACKET        reduce using rule 37 (statements_group -> LBRACKET RBRACKET NEWLINE .)


state 169

    (39) switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .

    THANKS          reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    PLEASE          reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    VAR             reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    GET             reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    LBRACKET        reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    error           reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    VARIABLE        reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    FOR             reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    SWITCH          reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MOVE            reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ROTATE          reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    PRINT           reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXEQ_OPERATOR   reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXLT_OPERATOR   reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXGT_OPERATOR   reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXLTE_OPERATOR  reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXGTE_OPERATOR  reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELEQ_OPERATOR   reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELLT_OPERATOR   reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELGT_OPERATOR   reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELLTE_OPERATOR  reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELGTE_OPERATOR  reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    NOT_OPERATOR    reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXTRUE_OPERATOR reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXFALSE_OPERATOR reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    SIZE_OPERATOR   reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    LOGITIZE_OPERATOR reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    DIGITIZE_OPERATOR reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    DO              reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    REDUCE_OPERATOR reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    EXTEND_OPERATOR reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    OCT_NUMBER      reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    DEC_NUMBER      reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    HEX_NUMBER      reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    TRUE            reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    FALSE           reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    NEWLINE         reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    RESULT          reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    RBRACKET        reduce using rule 39 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)


state 170

    (35) statements_group -> LBRACKET NEWLINE statements RBRACKET . NEWLINE

    NEWLINE         shift and go to state 171


state 171

    (35) statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .

    FALSE           reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    THANKS          reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    PLEASE          reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    VAR             reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    GET             reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    LBRACKET        reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    error           reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    VARIABLE        reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    FOR             reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    SWITCH          reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MOVE            reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ROTATE          reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    PRINT           reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXLT_OPERATOR   reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXGT_OPERATOR   reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELLT_OPERATOR   reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELGT_OPERATOR   reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    NOT_OPERATOR    reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    SIZE_OPERATOR   reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    DO              reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    REDUCE_OPERATOR reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    EXTEND_OPERATOR reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    OCT_NUMBER      reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    DEC_NUMBER      reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    HEX_NUMBER      reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    TRUE            reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    NEWLINE         reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    RESULT          reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    RBRACKET        reduce using rule 35 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASSIGNMENT in state 96 resolved as shift
WARNING: shift/reduce conflict for OS_BRACKET in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 96 resolved as shift
WARNING: shift/reduce conflict for AND_OPERATOR in state 96 resolved as shift
WARNING: shift/reduce conflict for GET in state 109 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 109 resolved as shift
WARNING: shift/reduce conflict for error in state 109 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 109 resolved as shift
WARNING: shift/reduce conflict for MXEQ_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for MXLT_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for MXGT_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for MXLTE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for MXGTE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for ELEQ_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for ELLT_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for ELGT_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for ELLTE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for ELGTE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for NOT_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for MXTRUE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for MXFALSE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for SIZE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for LOGITIZE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for DIGITIZE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for DO in state 109 resolved as shift
WARNING: shift/reduce conflict for REDUCE_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for EXTEND_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for OCT_NUMBER in state 109 resolved as shift
WARNING: shift/reduce conflict for DEC_NUMBER in state 109 resolved as shift
WARNING: shift/reduce conflict for HEX_NUMBER in state 109 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 109 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 109 resolved as shift
WARNING: shift/reduce conflict for GET in state 111 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 111 resolved as shift
WARNING: shift/reduce conflict for error in state 111 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 111 resolved as shift
WARNING: shift/reduce conflict for MXEQ_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for MXLT_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for MXGT_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for MXLTE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for MXGTE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for ELEQ_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for ELLT_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for ELGT_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for ELLTE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for ELGTE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for NOT_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for MXTRUE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for MXFALSE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for SIZE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for LOGITIZE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for DIGITIZE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for DO in state 111 resolved as shift
WARNING: shift/reduce conflict for REDUCE_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for EXTEND_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for OCT_NUMBER in state 111 resolved as shift
WARNING: shift/reduce conflict for DEC_NUMBER in state 111 resolved as shift
WARNING: shift/reduce conflict for HEX_NUMBER in state 111 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 111 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 111 resolved as shift
WARNING: shift/reduce conflict for ASSIGNMENT in state 118 resolved as shift
WARNING: shift/reduce conflict for OS_BRACKET in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 118 resolved as shift
WARNING: shift/reduce conflict for AND_OPERATOR in state 118 resolved as shift
WARNING: shift/reduce conflict for ASSIGNMENT in state 120 resolved as shift
WARNING: shift/reduce conflict for OS_BRACKET in state 120 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 120 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 120 resolved as shift
WARNING: shift/reduce conflict for AND_OPERATOR in state 120 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 122 resolved as shift
WARNING: shift/reduce conflict for GET in state 123 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 123 resolved as shift
WARNING: shift/reduce conflict for error in state 123 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 123 resolved as shift
WARNING: shift/reduce conflict for MXEQ_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for MXLT_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for MXGT_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for MXLTE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for MXGTE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for ELEQ_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for ELLT_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for ELGT_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for ELLTE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for ELGTE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for NOT_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for MXTRUE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for MXFALSE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for SIZE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for LOGITIZE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for DIGITIZE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for DO in state 123 resolved as shift
WARNING: shift/reduce conflict for REDUCE_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for EXTEND_OPERATOR in state 123 resolved as shift
WARNING: shift/reduce conflict for OCT_NUMBER in state 123 resolved as shift
WARNING: shift/reduce conflict for DEC_NUMBER in state 123 resolved as shift
WARNING: shift/reduce conflict for HEX_NUMBER in state 123 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 123 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 123 resolved as shift
WARNING: shift/reduce conflict for error in state 135 resolved as shift
WARNING: shift/reduce conflict for GET in state 135 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 135 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 135 resolved as shift
WARNING: shift/reduce conflict for MXEQ_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for MXLT_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for MXGT_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for MXLTE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for MXGTE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for ELEQ_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for ELLT_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for ELGT_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for ELLTE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for ELGTE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for NOT_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for MXTRUE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for MXFALSE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for SIZE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for LOGITIZE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for DIGITIZE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for DO in state 135 resolved as shift
WARNING: shift/reduce conflict for REDUCE_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for EXTEND_OPERATOR in state 135 resolved as shift
WARNING: shift/reduce conflict for OCT_NUMBER in state 135 resolved as shift
WARNING: shift/reduce conflict for DEC_NUMBER in state 135 resolved as shift
WARNING: shift/reduce conflict for HEX_NUMBER in state 135 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 135 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 135 resolved as shift
WARNING: shift/reduce conflict for ASSIGNMENT in state 136 resolved as shift
WARNING: shift/reduce conflict for OS_BRACKET in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 136 resolved as shift
WARNING: shift/reduce conflict for AND_OPERATOR in state 136 resolved as shift
WARNING: shift/reduce conflict for GET in state 137 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 137 resolved as shift
WARNING: shift/reduce conflict for error in state 137 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 137 resolved as shift
WARNING: shift/reduce conflict for MXEQ_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for MXLT_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for MXGT_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for MXLTE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for MXGTE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for ELEQ_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for ELLT_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for ELGT_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for ELLTE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for ELGTE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for NOT_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for MXTRUE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for MXFALSE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for SIZE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for LOGITIZE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for DIGITIZE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for DO in state 137 resolved as shift
WARNING: shift/reduce conflict for REDUCE_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for EXTEND_OPERATOR in state 137 resolved as shift
WARNING: shift/reduce conflict for OCT_NUMBER in state 137 resolved as shift
WARNING: shift/reduce conflict for DEC_NUMBER in state 137 resolved as shift
WARNING: shift/reduce conflict for HEX_NUMBER in state 137 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 137 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 137 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 153 resolved as shift
WARNING: shift/reduce conflict for THANKS in state 155 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 156 resolved as shift
WARNING: reduce/reduce conflict in state 66 resolved using rule (parameters -> VARIABLE)
WARNING: rejected rule (empty -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 140 resolved using rule (statement -> PLEASE statement THANKS NEWLINE)
WARNING: rejected rule (statement -> statement THANKS NEWLINE) in state 140
